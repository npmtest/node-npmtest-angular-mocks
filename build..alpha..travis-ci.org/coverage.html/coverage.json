{"/home/travis/build/npmtest/node-npmtest-angular-mocks/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_angular_mocks */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/lib.npmtest_angular_mocks.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/lib.npmtest_angular_mocks.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_angular_mocks */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_angular_mocks = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_angular_mocks = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-angular-mocks && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_angular_mocks */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_angular_mocks","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_angular_mocks.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_angular_mocks.rollup.js'] =","            local.assetsDict['/assets.npmtest_angular_mocks.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_angular_mocks.__dirname + '/lib.npmtest_angular_mocks.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/angular-mocks.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/angular-mocks.js","s":{"1":8,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":1,"373":0,"374":0,"375":0,"376":1,"377":0,"378":1,"379":0,"380":0,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":1,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":1,"501":1,"502":0,"503":0,"504":1,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":1,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":1,"574":0,"575":0,"576":1,"577":0,"578":1,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":1,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":1,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":1,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":1,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":1,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":1,"847":0,"848":0,"849":0,"850":0,"851":1,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":1,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":1,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":1,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":1,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":1,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":1,"970":0,"971":0,"972":0,"973":1,"974":0,"975":0,"976":0,"977":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0,0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":27}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":32},"end":{"line":33,"column":43}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":25}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":35}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":38},"end":{"line":51,"column":49}}},"6":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":38},"end":{"line":52,"column":51}}},"7":{"name":"(anonymous_7)","line":64,"loc":{"start":{"line":64,"column":41},"end":{"line":64,"column":60}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":21},"end":{"line":74,"column":40}}},"9":{"name":"(anonymous_9)","line":76,"loc":{"start":{"line":76,"column":6},"end":{"line":76,"column":17}}},"10":{"name":"(anonymous_10)","line":94,"loc":{"start":{"line":94,"column":15},"end":{"line":94,"column":35}}},"11":{"name":"(anonymous_11)","line":99,"loc":{"start":{"line":99,"column":26},"end":{"line":99,"column":41}}},"12":{"name":"(anonymous_12)","line":113,"loc":{"start":{"line":113,"column":22},"end":{"line":113,"column":40}}},"13":{"name":"(anonymous_13)","line":116,"loc":{"start":{"line":116,"column":38},"end":{"line":116,"column":58}}},"14":{"name":"(anonymous_14)","line":137,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":37}}},"15":{"name":"(anonymous_15)","line":164,"loc":{"start":{"line":164,"column":18},"end":{"line":164,"column":29}}},"16":{"name":"poll","line":176,"loc":{"start":{"line":176,"column":8},"end":{"line":176,"column":24}}},"17":{"name":"(anonymous_17)","line":177,"loc":{"start":{"line":177,"column":34},"end":{"line":177,"column":51}}},"18":{"name":"(anonymous_18)","line":182,"loc":{"start":{"line":182,"column":7},"end":{"line":182,"column":37}}},"19":{"name":"(anonymous_19)","line":196,"loc":{"start":{"line":196,"column":9},"end":{"line":196,"column":20}}},"20":{"name":"(anonymous_20)","line":245,"loc":{"start":{"line":245,"column":41},"end":{"line":245,"column":52}}},"21":{"name":"(anonymous_21)","line":266,"loc":{"start":{"line":266,"column":14},"end":{"line":266,"column":29}}},"22":{"name":"(anonymous_22)","line":272,"loc":{"start":{"line":272,"column":18},"end":{"line":272,"column":30}}},"23":{"name":"(anonymous_23)","line":289,"loc":{"start":{"line":289,"column":14},"end":{"line":289,"column":25}}},"24":{"name":"(anonymous_24)","line":307,"loc":{"start":{"line":307,"column":28},"end":{"line":307,"column":39}}},"25":{"name":"concat","line":310,"loc":{"start":{"line":310,"column":2},"end":{"line":310,"column":41}}},"26":{"name":"(anonymous_26)","line":314,"loc":{"start":{"line":314,"column":22},"end":{"line":314,"column":37}}},"27":{"name":"(anonymous_27)","line":323,"loc":{"start":{"line":323,"column":14},"end":{"line":323,"column":25}}},"28":{"name":"(anonymous_28)","line":325,"loc":{"start":{"line":325,"column":11},"end":{"line":325,"column":22}}},"29":{"name":"(anonymous_29)","line":326,"loc":{"start":{"line":326,"column":12},"end":{"line":326,"column":23}}},"30":{"name":"(anonymous_30)","line":327,"loc":{"start":{"line":327,"column":12},"end":{"line":327,"column":23}}},"31":{"name":"(anonymous_31)","line":328,"loc":{"start":{"line":328,"column":13},"end":{"line":328,"column":24}}},"32":{"name":"(anonymous_32)","line":329,"loc":{"start":{"line":329,"column":13},"end":{"line":329,"column":24}}},"33":{"name":"(anonymous_33)","line":343,"loc":{"start":{"line":343,"column":17},"end":{"line":343,"column":28}}},"34":{"name":"(anonymous_34)","line":424,"loc":{"start":{"line":424,"column":23},"end":{"line":424,"column":34}}},"35":{"name":"(anonymous_35)","line":426,"loc":{"start":{"line":426,"column":65},"end":{"line":426,"column":84}}},"36":{"name":"(anonymous_36)","line":427,"loc":{"start":{"line":427,"column":45},"end":{"line":427,"column":59}}},"37":{"name":"(anonymous_37)","line":428,"loc":{"start":{"line":428,"column":31},"end":{"line":428,"column":49}}},"38":{"name":"(anonymous_38)","line":468,"loc":{"start":{"line":468,"column":33},"end":{"line":468,"column":44}}},"39":{"name":"(anonymous_39)","line":470,"loc":{"start":{"line":470,"column":7},"end":{"line":470,"column":53}}},"40":{"name":"(anonymous_40)","line":475,"loc":{"start":{"line":475,"column":20},"end":{"line":475,"column":60}}},"41":{"name":"(anonymous_41)","line":484,"loc":{"start":{"line":484,"column":25},"end":{"line":484,"column":36}}},"42":{"name":"(anonymous_42)","line":484,"loc":{"start":{"line":484,"column":60},"end":{"line":484,"column":71}}},"43":{"name":"tick","line":490,"loc":{"start":{"line":490,"column":6},"end":{"line":490,"column":22}}},"44":{"name":"(anonymous_44)","line":497,"loc":{"start":{"line":497,"column":37},"end":{"line":497,"column":57}}},"45":{"name":"(anonymous_45)","line":520,"loc":{"start":{"line":520,"column":21},"end":{"line":520,"column":36}}},"46":{"name":"(anonymous_46)","line":535,"loc":{"start":{"line":535,"column":23},"end":{"line":535,"column":41}}},"47":{"name":"(anonymous_47)","line":539,"loc":{"start":{"line":539,"column":33},"end":{"line":539,"column":53}}},"48":{"name":"(anonymous_48)","line":544,"loc":{"start":{"line":544,"column":60},"end":{"line":544,"column":71}}},"49":{"name":"(anonymous_49)","line":564,"loc":{"start":{"line":564,"column":22},"end":{"line":564,"column":39}}},"50":{"name":"(anonymous_50)","line":570,"loc":{"start":{"line":570,"column":23},"end":{"line":570,"column":38}}},"51":{"name":"jsonStringToDate","line":580,"loc":{"start":{"line":580,"column":0},"end":{"line":580,"column":34}}},"52":{"name":"toInt","line":604,"loc":{"start":{"line":604,"column":0},"end":{"line":604,"column":20}}},"53":{"name":"padNumberInMock","line":608,"loc":{"start":{"line":608,"column":0},"end":{"line":608,"column":44}}},"54":{"name":"(anonymous_54)","line":660,"loc":{"start":{"line":660,"column":22},"end":{"line":660,"column":50}}},"55":{"name":"(anonymous_55)","line":683,"loc":{"start":{"line":683,"column":17},"end":{"line":683,"column":28}}},"56":{"name":"(anonymous_56)","line":687,"loc":{"start":{"line":687,"column":28},"end":{"line":687,"column":39}}},"57":{"name":"(anonymous_57)","line":691,"loc":{"start":{"line":691,"column":21},"end":{"line":691,"column":32}}},"58":{"name":"(anonymous_58)","line":695,"loc":{"start":{"line":695,"column":18},"end":{"line":695,"column":29}}},"59":{"name":"(anonymous_59)","line":699,"loc":{"start":{"line":699,"column":17},"end":{"line":699,"column":28}}},"60":{"name":"(anonymous_60)","line":703,"loc":{"start":{"line":703,"column":18},"end":{"line":703,"column":29}}},"61":{"name":"(anonymous_61)","line":707,"loc":{"start":{"line":707,"column":20},"end":{"line":707,"column":31}}},"62":{"name":"(anonymous_62)","line":711,"loc":{"start":{"line":711,"column":20},"end":{"line":711,"column":31}}},"63":{"name":"(anonymous_63)","line":715,"loc":{"start":{"line":715,"column":25},"end":{"line":715,"column":36}}},"64":{"name":"(anonymous_64)","line":719,"loc":{"start":{"line":719,"column":27},"end":{"line":719,"column":38}}},"65":{"name":"(anonymous_65)","line":723,"loc":{"start":{"line":723,"column":24},"end":{"line":723,"column":35}}},"66":{"name":"(anonymous_66)","line":727,"loc":{"start":{"line":727,"column":21},"end":{"line":727,"column":32}}},"67":{"name":"(anonymous_67)","line":731,"loc":{"start":{"line":731,"column":20},"end":{"line":731,"column":31}}},"68":{"name":"(anonymous_68)","line":735,"loc":{"start":{"line":735,"column":21},"end":{"line":735,"column":32}}},"69":{"name":"(anonymous_69)","line":739,"loc":{"start":{"line":739,"column":23},"end":{"line":739,"column":34}}},"70":{"name":"(anonymous_70)","line":743,"loc":{"start":{"line":743,"column":23},"end":{"line":743,"column":34}}},"71":{"name":"(anonymous_71)","line":747,"loc":{"start":{"line":747,"column":28},"end":{"line":747,"column":39}}},"72":{"name":"(anonymous_72)","line":751,"loc":{"start":{"line":751,"column":16},"end":{"line":751,"column":27}}},"73":{"name":"(anonymous_73)","line":757,"loc":{"start":{"line":757,"column":23},"end":{"line":757,"column":34}}},"74":{"name":"(anonymous_74)","line":776,"loc":{"start":{"line":776,"column":40},"end":{"line":776,"column":61}}},"75":{"name":"(anonymous_75)","line":777,"loc":{"start":{"line":777,"column":23},"end":{"line":777,"column":34}}},"76":{"name":"(anonymous_76)","line":802,"loc":{"start":{"line":802,"column":23},"end":{"line":802,"column":42}}},"77":{"name":"(anonymous_77)","line":804,"loc":{"start":{"line":804,"column":38},"end":{"line":804,"column":49}}},"78":{"name":"reflowFn","line":805,"loc":{"start":{"line":805,"column":6},"end":{"line":805,"column":26}}},"79":{"name":"(anonymous_79)","line":812,"loc":{"start":{"line":812,"column":42},"end":{"line":812,"column":53}}},"80":{"name":"(anonymous_80)","line":814,"loc":{"start":{"line":814,"column":20},"end":{"line":814,"column":31}}},"81":{"name":"(anonymous_81)","line":815,"loc":{"start":{"line":815,"column":15},"end":{"line":815,"column":28}}},"82":{"name":"(anonymous_82)","line":819,"loc":{"start":{"line":819,"column":22},"end":{"line":819,"column":33}}},"83":{"name":"(anonymous_83)","line":832,"loc":{"start":{"line":832,"column":52},"end":{"line":832,"column":72}}},"84":{"name":"(anonymous_84)","line":835,"loc":{"start":{"line":835,"column":33},"end":{"line":835,"column":44}}},"85":{"name":"(anonymous_85)","line":844,"loc":{"start":{"line":844,"column":44},"end":{"line":844,"column":55}}},"86":{"name":"(anonymous_86)","line":845,"loc":{"start":{"line":845,"column":24},"end":{"line":845,"column":41}}},"87":{"name":"(anonymous_87)","line":854,"loc":{"start":{"line":854,"column":52},"end":{"line":854,"column":72}}},"88":{"name":"(anonymous_88)","line":857,"loc":{"start":{"line":857,"column":34},"end":{"line":857,"column":61}}},"89":{"name":"(anonymous_89)","line":863,"loc":{"start":{"line":863,"column":45},"end":{"line":863,"column":56}}},"90":{"name":"(anonymous_90)","line":864,"loc":{"start":{"line":864,"column":24},"end":{"line":864,"column":41}}},"91":{"name":"(anonymous_91)","line":875,"loc":{"start":{"line":875,"column":28},"end":{"line":876,"column":86}}},"92":{"name":"(anonymous_92)","line":883,"loc":{"start":{"line":883,"column":19},"end":{"line":883,"column":22}}},"93":{"name":"(anonymous_93)","line":895,"loc":{"start":{"line":895,"column":23},"end":{"line":895,"column":34}}},"94":{"name":"(anonymous_94)","line":915,"loc":{"start":{"line":915,"column":15},"end":{"line":915,"column":36}}},"95":{"name":"(anonymous_95)","line":941,"loc":{"start":{"line":941,"column":80},"end":{"line":941,"column":97}}},"96":{"name":"(anonymous_96)","line":942,"loc":{"start":{"line":942,"column":26},"end":{"line":942,"column":37}}},"97":{"name":"(anonymous_97)","line":972,"loc":{"start":{"line":972,"column":20},"end":{"line":972,"column":37}}},"98":{"name":"serialize","line":975,"loc":{"start":{"line":975,"column":2},"end":{"line":975,"column":29}}},"99":{"name":"(anonymous_99)","line":981,"loc":{"start":{"line":981,"column":30},"end":{"line":981,"column":48}}},"100":{"name":"(anonymous_100)","line":987,"loc":{"start":{"line":987,"column":30},"end":{"line":987,"column":42}}},"101":{"name":"serializeScope","line":1008,"loc":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":41}}},"102":{"name":"createHttpBackendMock","line":1343,"loc":{"start":{"line":1343,"column":0},"end":{"line":1343,"column":74}}},"103":{"name":"createResponse","line":1353,"loc":{"start":{"line":1353,"column":2},"end":{"line":1353,"column":61}}},"104":{"name":"(anonymous_104)","line":1356,"loc":{"start":{"line":1356,"column":11},"end":{"line":1356,"column":22}}},"105":{"name":"$httpBackend","line":1364,"loc":{"start":{"line":1364,"column":2},"end":{"line":1364,"column":138}}},"106":{"name":"prettyPrint","line":1373,"loc":{"start":{"line":1373,"column":4},"end":{"line":1373,"column":31}}},"107":{"name":"wrapResponse","line":1379,"loc":{"start":{"line":1379,"column":4},"end":{"line":1379,"column":35}}},"108":{"name":"handleResponse","line":1390,"loc":{"start":{"line":1390,"column":6},"end":{"line":1390,"column":32}}},"109":{"name":"handleTimeout","line":1397,"loc":{"start":{"line":1397,"column":6},"end":{"line":1397,"column":31}}},"110":{"name":"(anonymous_110)","line":1475,"loc":{"start":{"line":1475,"column":22},"end":{"line":1475,"column":65}}},"111":{"name":"(anonymous_111)","line":1481,"loc":{"start":{"line":1481,"column":19},"end":{"line":1481,"column":63}}},"112":{"name":"(anonymous_112)","line":1489,"loc":{"start":{"line":1489,"column":26},"end":{"line":1489,"column":37}}},"113":{"name":"(anonymous_113)","line":1606,"loc":{"start":{"line":1606,"column":27},"end":{"line":1606,"column":49}}},"114":{"name":"parseRoute","line":1611,"loc":{"start":{"line":1611,"column":2},"end":{"line":1611,"column":27}}},"115":{"name":"(anonymous_115)","line":1621,"loc":{"start":{"line":1621,"column":38},"end":{"line":1621,"column":70}}},"116":{"name":"(anonymous_116)","line":1670,"loc":{"start":{"line":1670,"column":24},"end":{"line":1670,"column":67}}},"117":{"name":"(anonymous_117)","line":1676,"loc":{"start":{"line":1676,"column":19},"end":{"line":1676,"column":63}}},"118":{"name":"(anonymous_118)","line":1812,"loc":{"start":{"line":1812,"column":29},"end":{"line":1812,"column":51}}},"119":{"name":"(anonymous_119)","line":1835,"loc":{"start":{"line":1835,"column":23},"end":{"line":1835,"column":53}}},"120":{"name":"(anonymous_120)","line":1870,"loc":{"start":{"line":1870,"column":48},"end":{"line":1870,"column":65}}},"121":{"name":"(anonymous_121)","line":1891,"loc":{"start":{"line":1891,"column":44},"end":{"line":1891,"column":61}}},"122":{"name":"(anonymous_122)","line":1907,"loc":{"start":{"line":1907,"column":35},"end":{"line":1907,"column":46}}},"123":{"name":"createShortMethods","line":1917,"loc":{"start":{"line":1917,"column":2},"end":{"line":1917,"column":38}}},"124":{"name":"(anonymous_124)","line":1918,"loc":{"start":{"line":1918,"column":56},"end":{"line":1918,"column":73}}},"125":{"name":"(anonymous_125)","line":1919,"loc":{"start":{"line":1919,"column":37},"end":{"line":1919,"column":66}}},"126":{"name":"(anonymous_126)","line":1929,"loc":{"start":{"line":1929,"column":46},"end":{"line":1929,"column":63}}},"127":{"name":"(anonymous_127)","line":1930,"loc":{"start":{"line":1930,"column":38},"end":{"line":1930,"column":73}}},"128":{"name":"assertArgDefined","line":1942,"loc":{"start":{"line":1942,"column":0},"end":{"line":1942,"column":45}}},"129":{"name":"MockHttpExpectation","line":1949,"loc":{"start":{"line":1949,"column":0},"end":{"line":1949,"column":63}}},"130":{"name":"getUrlParams","line":1951,"loc":{"start":{"line":1951,"column":2},"end":{"line":1951,"column":27}}},"131":{"name":"compareUrl","line":1956,"loc":{"start":{"line":1956,"column":2},"end":{"line":1956,"column":25}}},"132":{"name":"(anonymous_132)","line":1964,"loc":{"start":{"line":1964,"column":15},"end":{"line":1964,"column":36}}},"133":{"name":"(anonymous_133)","line":1972,"loc":{"start":{"line":1972,"column":18},"end":{"line":1972,"column":30}}},"134":{"name":"(anonymous_134)","line":1979,"loc":{"start":{"line":1979,"column":22},"end":{"line":1979,"column":34}}},"135":{"name":"(anonymous_135)","line":1985,"loc":{"start":{"line":1985,"column":19},"end":{"line":1985,"column":31}}},"136":{"name":"(anonymous_136)","line":1996,"loc":{"start":{"line":1996,"column":18},"end":{"line":1996,"column":29}}},"137":{"name":"(anonymous_137)","line":2000,"loc":{"start":{"line":2000,"column":16},"end":{"line":2000,"column":28}}},"138":{"name":"pathParams","line":2003,"loc":{"start":{"line":2003,"column":4},"end":{"line":2003,"column":26}}},"139":{"name":"parseQuery","line":2020,"loc":{"start":{"line":2020,"column":4},"end":{"line":2020,"column":26}}},"140":{"name":"(anonymous_140)","line":2026,"loc":{"start":{"line":2026,"column":43},"end":{"line":2026,"column":62}}},"141":{"name":"tryDecodeURIComponent","line":2044,"loc":{"start":{"line":2044,"column":4},"end":{"line":2044,"column":42}}},"142":{"name":"createMockXhr","line":2054,"loc":{"start":{"line":2054,"column":0},"end":{"line":2054,"column":25}}},"143":{"name":"MockXhr","line":2058,"loc":{"start":{"line":2058,"column":0},"end":{"line":2058,"column":19}}},"144":{"name":"(anonymous_144)","line":2063,"loc":{"start":{"line":2063,"column":14},"end":{"line":2063,"column":43}}},"145":{"name":"(anonymous_145)","line":2071,"loc":{"start":{"line":2071,"column":14},"end":{"line":2071,"column":29}}},"146":{"name":"(anonymous_146)","line":2075,"loc":{"start":{"line":2075,"column":26},"end":{"line":2075,"column":47}}},"147":{"name":"(anonymous_147)","line":2079,"loc":{"start":{"line":2079,"column":27},"end":{"line":2079,"column":42}}},"148":{"name":"(anonymous_148)","line":2090,"loc":{"start":{"line":2090,"column":40},"end":{"line":2090,"column":72}}},"149":{"name":"(anonymous_149)","line":2096,"loc":{"start":{"line":2096,"column":31},"end":{"line":2096,"column":42}}},"150":{"name":"(anonymous_150)","line":2099,"loc":{"start":{"line":2099,"column":40},"end":{"line":2099,"column":61}}},"151":{"name":"(anonymous_151)","line":2111,"loc":{"start":{"line":2111,"column":26},"end":{"line":2111,"column":51}}},"152":{"name":"(anonymous_152)","line":2132,"loc":{"start":{"line":2132,"column":59},"end":{"line":2132,"column":89}}},"153":{"name":"(anonymous_153)","line":2143,"loc":{"start":{"line":2143,"column":20},"end":{"line":2143,"column":36}}},"154":{"name":"(anonymous_154)","line":2154,"loc":{"start":{"line":2154,"column":35},"end":{"line":2154,"column":46}}},"155":{"name":"formatPendingTasksAsString","line":2161,"loc":{"start":{"line":2161,"column":2},"end":{"line":2161,"column":45}}},"156":{"name":"(anonymous_156)","line":2163,"loc":{"start":{"line":2163,"column":27},"end":{"line":2163,"column":42}}},"157":{"name":"(anonymous_157)","line":2173,"loc":{"start":{"line":2173,"column":43},"end":{"line":2173,"column":63}}},"158":{"name":"(anonymous_158)","line":2174,"loc":{"start":{"line":2174,"column":14},"end":{"line":2174,"column":27}}},"159":{"name":"(anonymous_159)","line":2177,"loc":{"start":{"line":2177,"column":11},"end":{"line":2177,"column":22}}},"160":{"name":"(anonymous_160)","line":2185,"loc":{"start":{"line":2185,"column":16},"end":{"line":2185,"column":27}}},"161":{"name":"(anonymous_161)","line":2205,"loc":{"start":{"line":2205,"column":36},"end":{"line":2205,"column":47}}},"162":{"name":"(anonymous_162)","line":2206,"loc":{"start":{"line":2206,"column":28},"end":{"line":2206,"column":48}}},"163":{"name":"createControllerDecorator","line":2281,"loc":{"start":{"line":2281,"column":0},"end":{"line":2281,"column":52}}},"164":{"name":"(anonymous_164)","line":2282,"loc":{"start":{"line":2282,"column":52},"end":{"line":2282,"column":72}}},"165":{"name":"(anonymous_165)","line":2283,"loc":{"start":{"line":2283,"column":11},"end":{"line":2283,"column":54}}},"166":{"name":"ComponentControllerProvider","line":2333,"loc":{"start":{"line":2333,"column":4},"end":{"line":2333,"column":59}}},"167":{"name":"(anonymous_167)","line":2334,"loc":{"start":{"line":2334,"column":56},"end":{"line":2334,"column":101}}},"168":{"name":"$componentController","line":2335,"loc":{"start":{"line":2335,"column":11},"end":{"line":2335,"column":81}}},"169":{"name":"(anonymous_169)","line":2339,"loc":{"start":{"line":2339,"column":50},"end":{"line":2339,"column":74}}},"170":{"name":"(anonymous_170)","line":2413,"loc":{"start":{"line":2413,"column":43},"end":{"line":2413,"column":80}}},"171":{"name":"(anonymous_171)","line":2432,"loc":{"start":{"line":2432,"column":56},"end":{"line":2432,"column":75}}},"172":{"name":"(anonymous_172)","line":2737,"loc":{"start":{"line":2737,"column":49},"end":{"line":2737,"column":69}}},"173":{"name":"countChildScopes","line":2760,"loc":{"start":{"line":2760,"column":2},"end":{"line":2760,"column":30}}},"174":{"name":"countWatchers","line":2792,"loc":{"start":{"line":2792,"column":2},"end":{"line":2792,"column":27}}},"175":{"name":"(anonymous_175)","line":2812,"loc":{"start":{"line":2812,"column":1},"end":{"line":2812,"column":26}}},"176":{"name":"(anonymous_176)","line":2821,"loc":{"start":{"line":2821,"column":27},"end":{"line":2821,"column":38}}},"177":{"name":"(anonymous_177)","line":2826,"loc":{"start":{"line":2826,"column":32},"end":{"line":2826,"column":45}}},"178":{"name":"(anonymous_178)","line":2853,"loc":{"start":{"line":2853,"column":53},"end":{"line":2853,"column":64}}},"179":{"name":"workFn","line":2857,"loc":{"start":{"line":2857,"column":4},"end":{"line":2857,"column":22}}},"180":{"name":"(anonymous_180)","line":2862,"loc":{"start":{"line":2862,"column":35},"end":{"line":2862,"column":52}}},"181":{"name":"(anonymous_181)","line":2864,"loc":{"start":{"line":2864,"column":30},"end":{"line":2864,"column":49}}},"182":{"name":"(anonymous_182)","line":2865,"loc":{"start":{"line":2865,"column":38},"end":{"line":2865,"column":59}}},"183":{"name":"(anonymous_183)","line":2886,"loc":{"start":{"line":2886,"column":25},"end":{"line":2886,"column":38}}},"184":{"name":"(anonymous_184)","line":2943,"loc":{"start":{"line":2943,"column":26},"end":{"line":2943,"column":37}}},"185":{"name":"(anonymous_185)","line":2950,"loc":{"start":{"line":2950,"column":40},"end":{"line":2950,"column":51}}},"186":{"name":"(anonymous_186)","line":2960,"loc":{"start":{"line":2960,"column":26},"end":{"line":2960,"column":37}}},"187":{"name":"(anonymous_187)","line":2970,"loc":{"start":{"line":2970,"column":24},"end":{"line":2970,"column":35}}},"188":{"name":"(anonymous_188)","line":2974,"loc":{"start":{"line":2974,"column":87},"end":{"line":2974,"column":99}}},"189":{"name":"(anonymous_189)","line":2985,"loc":{"start":{"line":2985,"column":23},"end":{"line":2985,"column":34}}},"190":{"name":"(anonymous_190)","line":2991,"loc":{"start":{"line":2991,"column":21},"end":{"line":2991,"column":32}}},"191":{"name":"(anonymous_191)","line":2994,"loc":{"start":{"line":2994,"column":31},"end":{"line":2994,"column":44}}},"192":{"name":"(anonymous_192)","line":3020,"loc":{"start":{"line":3020,"column":47},"end":{"line":3020,"column":66}}},"193":{"name":"(anonymous_193)","line":3026,"loc":{"start":{"line":3026,"column":39},"end":{"line":3026,"column":58}}},"194":{"name":"ErrorAddingDeclarationLocationStack","line":3123,"loc":{"start":{"line":3123,"column":44},"end":{"line":3123,"column":107}}},"195":{"name":"(anonymous_195)","line":3134,"loc":{"start":{"line":3134,"column":40},"end":{"line":3134,"column":51}}},"196":{"name":"WorkFn","line":3145,"loc":{"start":{"line":3145,"column":4},"end":{"line":3145,"column":22}}},"197":{"name":"(anonymous_197)","line":3148,"loc":{"start":{"line":3148,"column":36},"end":{"line":3148,"column":56}}},"198":{"name":"(anonymous_198)","line":3157,"loc":{"start":{"line":3157,"column":35},"end":{"line":3157,"column":54}}},"199":{"name":"(anonymous_199)","line":3187,"loc":{"start":{"line":3187,"column":33},"end":{"line":3187,"column":49}}},"200":{"name":"workFn","line":3191,"loc":{"start":{"line":3191,"column":4},"end":{"line":3191,"column":22}}},"201":{"name":"InjectorState","line":3202,"loc":{"start":{"line":3202,"column":2},"end":{"line":3202,"column":27}}},"202":{"name":"(anonymous_202)","line":3206,"loc":{"start":{"line":3206,"column":28},"end":{"line":3206,"column":39}}},"203":{"name":"(anonymous_203)","line":3214,"loc":{"start":{"line":3214,"column":1},"end":{"line":3214,"column":12}}},"204":{"name":"browserTrigger","line":3224,"loc":{"start":{"line":3224,"column":26},"end":{"line":3224,"column":81}}},"205":{"name":"pressed","line":3261,"loc":{"start":{"line":3261,"column":4},"end":{"line":3261,"column":26}}},"206":{"name":"(anonymous_206)","line":3326,"loc":{"start":{"line":3326,"column":26},"end":{"line":3326,"column":37}}},"207":{"name":"supportsTouchEvents","line":3344,"loc":{"start":{"line":3344,"column":2},"end":{"line":3344,"column":33}}},"208":{"name":"createTouchEvent","line":3362,"loc":{"start":{"line":3362,"column":2},"end":{"line":3362,"column":54}}},"209":{"name":"supportsEventBubblingInDetachedTree","line":3375,"loc":{"start":{"line":3375,"column":2},"end":{"line":3375,"column":49}}},"210":{"name":"(anonymous_210)","line":3385,"loc":{"start":{"line":3385,"column":35},"end":{"line":3385,"column":46}}},"211":{"name":"triggerForPath","line":3395,"loc":{"start":{"line":3395,"column":2},"end":{"line":3395,"column":41}}},"212":{"name":"(anonymous_212)","line":3399,"loc":{"start":{"line":3399,"column":27},"end":{"line":3399,"column":38}}},"213":{"name":"patchEventTargetForBubbling","line":3410,"loc":{"start":{"line":3410,"column":2},"end":{"line":3410,"column":54}}},"214":{"name":"(anonymous_214)","line":3412,"loc":{"start":{"line":3412,"column":49},"end":{"line":3412,"column":60}}},"215":{"name":"isAttachedToDocument","line":3415,"loc":{"start":{"line":3415,"column":2},"end":{"line":3415,"column":41}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":3426,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":18}},"3":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"4":{"start":{"line":34,"column":2},"end":{"line":36,"column":4}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":39}},"6":{"start":{"line":39,"column":0},"end":{"line":167,"column":2}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"8":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"9":{"start":{"line":43,"column":2},"end":{"line":43,"column":32}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":30}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":34}},"13":{"start":{"line":50,"column":2},"end":{"line":50,"column":39}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":80}},"15":{"start":{"line":51,"column":51},"end":{"line":51,"column":77}},"16":{"start":{"line":52,"column":2},"end":{"line":63,"column":4}},"17":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"18":{"start":{"line":54,"column":6},"end":{"line":54,"column":11}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":32}},"20":{"start":{"line":57,"column":6},"end":{"line":61,"column":7}},"21":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"22":{"start":{"line":59,"column":10},"end":{"line":59,"column":46}},"23":{"start":{"line":64,"column":2},"end":{"line":70,"column":4}},"24":{"start":{"line":65,"column":4},"end":{"line":69,"column":5}},"25":{"start":{"line":66,"column":6},"end":{"line":66,"column":49}},"26":{"start":{"line":68,"column":6},"end":{"line":68,"column":17}},"27":{"start":{"line":74,"column":2},"end":{"line":86,"column":4}},"28":{"start":{"line":75,"column":4},"end":{"line":83,"column":6}},"29":{"start":{"line":77,"column":8},"end":{"line":81,"column":9}},"30":{"start":{"line":78,"column":10},"end":{"line":78,"column":38}},"31":{"start":{"line":79,"column":10},"end":{"line":79,"column":42}},"32":{"start":{"line":80,"column":10},"end":{"line":80,"column":45}},"33":{"start":{"line":85,"column":4},"end":{"line":85,"column":20}},"34":{"start":{"line":88,"column":2},"end":{"line":88,"column":45}},"35":{"start":{"line":89,"column":2},"end":{"line":89,"column":39}},"36":{"start":{"line":91,"column":2},"end":{"line":91,"column":24}},"37":{"start":{"line":92,"column":2},"end":{"line":92,"column":26}},"38":{"start":{"line":94,"column":2},"end":{"line":101,"column":4}},"39":{"start":{"line":97,"column":4},"end":{"line":97,"column":23}},"40":{"start":{"line":98,"column":4},"end":{"line":98,"column":91}},"41":{"start":{"line":99,"column":4},"end":{"line":99,"column":69}},"42":{"start":{"line":99,"column":43},"end":{"line":99,"column":66}},"43":{"start":{"line":100,"column":4},"end":{"line":100,"column":33}},"44":{"start":{"line":110,"column":2},"end":{"line":110,"column":21}},"45":{"start":{"line":113,"column":2},"end":{"line":126,"column":4}},"46":{"start":{"line":114,"column":4},"end":{"line":114,"column":16}},"47":{"start":{"line":116,"column":4},"end":{"line":118,"column":7}},"48":{"start":{"line":117,"column":6},"end":{"line":117,"column":45}},"49":{"start":{"line":117,"column":29},"end":{"line":117,"column":45}},"50":{"start":{"line":120,"column":4},"end":{"line":123,"column":5}},"51":{"start":{"line":121,"column":6},"end":{"line":121,"column":42}},"52":{"start":{"line":122,"column":6},"end":{"line":122,"column":18}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":17}},"54":{"start":{"line":137,"column":2},"end":{"line":161,"column":4}},"55":{"start":{"line":138,"column":4},"end":{"line":138,"column":17}},"56":{"start":{"line":140,"column":4},"end":{"line":151,"column":5}},"57":{"start":{"line":142,"column":6},"end":{"line":142,"column":40}},"58":{"start":{"line":144,"column":6},"end":{"line":150,"column":7}},"59":{"start":{"line":146,"column":8},"end":{"line":146,"column":70}},"60":{"start":{"line":149,"column":8},"end":{"line":149,"column":59}},"61":{"start":{"line":153,"column":4},"end":{"line":157,"column":5}},"62":{"start":{"line":155,"column":6},"end":{"line":155,"column":48}},"63":{"start":{"line":156,"column":6},"end":{"line":156,"column":36}},"64":{"start":{"line":160,"column":4},"end":{"line":160,"column":30}},"65":{"start":{"line":163,"column":2},"end":{"line":163,"column":24}},"66":{"start":{"line":164,"column":2},"end":{"line":166,"column":4}},"67":{"start":{"line":165,"column":4},"end":{"line":165,"column":27}},"68":{"start":{"line":168,"column":0},"end":{"line":199,"column":2}},"69":{"start":{"line":177,"column":4},"end":{"line":179,"column":7}},"70":{"start":{"line":178,"column":6},"end":{"line":178,"column":15}},"71":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"72":{"start":{"line":184,"column":6},"end":{"line":184,"column":19}},"73":{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},"74":{"start":{"line":187,"column":6},"end":{"line":187,"column":23}},"75":{"start":{"line":189,"column":6},"end":{"line":189,"column":41}},"76":{"start":{"line":190,"column":6},"end":{"line":190,"column":18}},"77":{"start":{"line":193,"column":4},"end":{"line":193,"column":22}},"78":{"start":{"line":197,"column":4},"end":{"line":197,"column":24}},"79":{"start":{"line":245,"column":0},"end":{"line":294,"column":2}},"80":{"start":{"line":246,"column":2},"end":{"line":246,"column":14}},"81":{"start":{"line":266,"column":2},"end":{"line":287,"column":4}},"82":{"start":{"line":268,"column":4},"end":{"line":286,"column":5}},"83":{"start":{"line":271,"column":8},"end":{"line":271,"column":24}},"84":{"start":{"line":272,"column":8},"end":{"line":281,"column":10}},"85":{"start":{"line":273,"column":10},"end":{"line":277,"column":11}},"86":{"start":{"line":274,"column":12},"end":{"line":274,"column":27}},"87":{"start":{"line":276,"column":12},"end":{"line":276,"column":53}},"88":{"start":{"line":278,"column":10},"end":{"line":280,"column":11}},"89":{"start":{"line":279,"column":12},"end":{"line":279,"column":20}},"90":{"start":{"line":282,"column":8},"end":{"line":282,"column":32}},"91":{"start":{"line":283,"column":8},"end":{"line":283,"column":14}},"92":{"start":{"line":285,"column":8},"end":{"line":285,"column":102}},"93":{"start":{"line":289,"column":2},"end":{"line":291,"column":4}},"94":{"start":{"line":290,"column":4},"end":{"line":290,"column":19}},"95":{"start":{"line":293,"column":2},"end":{"line":293,"column":23}},"96":{"start":{"line":307,"column":0},"end":{"line":445,"column":2}},"97":{"start":{"line":308,"column":2},"end":{"line":308,"column":19}},"98":{"start":{"line":310,"column":2},"end":{"line":312,"column":3}},"99":{"start":{"line":311,"column":4},"end":{"line":311,"column":68}},"100":{"start":{"line":314,"column":2},"end":{"line":321,"column":4}},"101":{"start":{"line":315,"column":4},"end":{"line":320,"column":5}},"102":{"start":{"line":316,"column":6},"end":{"line":316,"column":19}},"103":{"start":{"line":317,"column":6},"end":{"line":317,"column":18}},"104":{"start":{"line":319,"column":6},"end":{"line":319,"column":19}},"105":{"start":{"line":323,"column":2},"end":{"line":444,"column":4}},"106":{"start":{"line":324,"column":4},"end":{"line":334,"column":6}},"107":{"start":{"line":325,"column":24},"end":{"line":325,"column":69}},"108":{"start":{"line":326,"column":25},"end":{"line":326,"column":71}},"109":{"start":{"line":327,"column":25},"end":{"line":327,"column":71}},"110":{"start":{"line":328,"column":26},"end":{"line":328,"column":73}},"111":{"start":{"line":330,"column":8},"end":{"line":332,"column":9}},"112":{"start":{"line":331,"column":10},"end":{"line":331,"column":57}},"113":{"start":{"line":343,"column":4},"end":{"line":414,"column":6}},"114":{"start":{"line":357,"column":6},"end":{"line":357,"column":25}},"115":{"start":{"line":371,"column":6},"end":{"line":371,"column":26}},"116":{"start":{"line":385,"column":6},"end":{"line":385,"column":26}},"117":{"start":{"line":399,"column":6},"end":{"line":399,"column":27}},"118":{"start":{"line":413,"column":6},"end":{"line":413,"column":27}},"119":{"start":{"line":424,"column":4},"end":{"line":440,"column":6}},"120":{"start":{"line":425,"column":6},"end":{"line":425,"column":22}},"121":{"start":{"line":426,"column":6},"end":{"line":433,"column":9}},"122":{"start":{"line":427,"column":8},"end":{"line":432,"column":11}},"123":{"start":{"line":428,"column":10},"end":{"line":431,"column":13}},"124":{"start":{"line":429,"column":12},"end":{"line":430,"column":47}},"125":{"start":{"line":434,"column":6},"end":{"line":439,"column":7}},"126":{"start":{"line":435,"column":8},"end":{"line":436,"column":66}},"127":{"start":{"line":437,"column":8},"end":{"line":437,"column":24}},"128":{"start":{"line":438,"column":8},"end":{"line":438,"column":54}},"129":{"start":{"line":442,"column":4},"end":{"line":442,"column":17}},"130":{"start":{"line":443,"column":4},"end":{"line":443,"column":16}},"131":{"start":{"line":468,"column":0},"end":{"line":577,"column":2}},"132":{"start":{"line":469,"column":2},"end":{"line":576,"column":5}},"133":{"start":{"line":471,"column":4},"end":{"line":473,"column":16}},"134":{"start":{"line":475,"column":4},"end":{"line":524,"column":6}},"135":{"start":{"line":476,"column":6},"end":{"line":481,"column":37}},"136":{"start":{"line":483,"column":6},"end":{"line":483,"column":53}},"137":{"start":{"line":484,"column":6},"end":{"line":486,"column":9}},"138":{"start":{"line":485,"column":8},"end":{"line":485,"column":29}},"139":{"start":{"line":488,"column":6},"end":{"line":488,"column":42}},"140":{"start":{"line":490,"column":6},"end":{"line":511,"column":7}},"141":{"start":{"line":491,"column":8},"end":{"line":491,"column":37}},"142":{"start":{"line":493,"column":8},"end":{"line":504,"column":9}},"143":{"start":{"line":494,"column":10},"end":{"line":494,"column":22}},"144":{"start":{"line":495,"column":10},"end":{"line":495,"column":38}},"145":{"start":{"line":497,"column":10},"end":{"line":499,"column":13}},"146":{"start":{"line":498,"column":12},"end":{"line":498,"column":64}},"147":{"start":{"line":498,"column":48},"end":{"line":498,"column":64}},"148":{"start":{"line":501,"column":10},"end":{"line":503,"column":11}},"149":{"start":{"line":502,"column":12},"end":{"line":502,"column":41}},"150":{"start":{"line":506,"column":8},"end":{"line":510,"column":9}},"151":{"start":{"line":507,"column":10},"end":{"line":507,"column":33}},"152":{"start":{"line":509,"column":10},"end":{"line":509,"column":30}},"153":{"start":{"line":513,"column":6},"end":{"line":519,"column":9}},"154":{"start":{"line":520,"column":6},"end":{"line":520,"column":72}},"155":{"start":{"line":520,"column":38},"end":{"line":520,"column":69}},"156":{"start":{"line":522,"column":6},"end":{"line":522,"column":21}},"157":{"start":{"line":523,"column":6},"end":{"line":523,"column":21}},"158":{"start":{"line":535,"column":4},"end":{"line":551,"column":6}},"159":{"start":{"line":536,"column":6},"end":{"line":536,"column":33}},"160":{"start":{"line":536,"column":20},"end":{"line":536,"column":33}},"161":{"start":{"line":537,"column":6},"end":{"line":537,"column":18}},"162":{"start":{"line":539,"column":6},"end":{"line":541,"column":9}},"163":{"start":{"line":540,"column":8},"end":{"line":540,"column":60}},"164":{"start":{"line":540,"column":44},"end":{"line":540,"column":60}},"165":{"start":{"line":543,"column":6},"end":{"line":548,"column":7}},"166":{"start":{"line":544,"column":8},"end":{"line":544,"column":75}},"167":{"start":{"line":545,"column":8},"end":{"line":545,"column":55}},"168":{"start":{"line":546,"column":8},"end":{"line":546,"column":37}},"169":{"start":{"line":547,"column":8},"end":{"line":547,"column":20}},"170":{"start":{"line":550,"column":6},"end":{"line":550,"column":19}},"171":{"start":{"line":564,"column":4},"end":{"line":573,"column":6}},"172":{"start":{"line":565,"column":6},"end":{"line":565,"column":20}},"173":{"start":{"line":566,"column":6},"end":{"line":571,"column":7}},"174":{"start":{"line":567,"column":8},"end":{"line":567,"column":32}},"175":{"start":{"line":568,"column":8},"end":{"line":568,"column":18}},"176":{"start":{"line":569,"column":8},"end":{"line":569,"column":36}},"177":{"start":{"line":570,"column":8},"end":{"line":570,"column":74}},"178":{"start":{"line":570,"column":40},"end":{"line":570,"column":71}},"179":{"start":{"line":572,"column":6},"end":{"line":572,"column":20}},"180":{"start":{"line":575,"column":4},"end":{"line":575,"column":21}},"181":{"start":{"line":580,"column":0},"end":{"line":602,"column":1}},"182":{"start":{"line":583,"column":2},"end":{"line":583,"column":128}},"183":{"start":{"line":585,"column":2},"end":{"line":585,"column":12}},"184":{"start":{"line":586,"column":2},"end":{"line":600,"column":3}},"185":{"start":{"line":587,"column":4},"end":{"line":589,"column":19}},"186":{"start":{"line":590,"column":4},"end":{"line":593,"column":5}},"187":{"start":{"line":591,"column":6},"end":{"line":591,"column":43}},"188":{"start":{"line":592,"column":6},"end":{"line":592,"column":42}},"189":{"start":{"line":594,"column":4},"end":{"line":594,"column":79}},"190":{"start":{"line":595,"column":4},"end":{"line":598,"column":43}},"191":{"start":{"line":599,"column":4},"end":{"line":599,"column":16}},"192":{"start":{"line":601,"column":2},"end":{"line":601,"column":16}},"193":{"start":{"line":604,"column":0},"end":{"line":606,"column":1}},"194":{"start":{"line":605,"column":2},"end":{"line":605,"column":27}},"195":{"start":{"line":608,"column":0},"end":{"line":620,"column":1}},"196":{"start":{"line":609,"column":2},"end":{"line":609,"column":15}},"197":{"start":{"line":610,"column":2},"end":{"line":613,"column":3}},"198":{"start":{"line":611,"column":4},"end":{"line":611,"column":15}},"199":{"start":{"line":612,"column":4},"end":{"line":612,"column":15}},"200":{"start":{"line":614,"column":2},"end":{"line":614,"column":17}},"201":{"start":{"line":615,"column":2},"end":{"line":615,"column":46}},"202":{"start":{"line":615,"column":30},"end":{"line":615,"column":46}},"203":{"start":{"line":616,"column":2},"end":{"line":618,"column":3}},"204":{"start":{"line":617,"column":4},"end":{"line":617,"column":42}},"205":{"start":{"line":619,"column":2},"end":{"line":619,"column":19}},"206":{"start":{"line":660,"column":0},"end":{"line":783,"column":2}},"207":{"start":{"line":661,"column":2},"end":{"line":661,"column":25}},"208":{"start":{"line":662,"column":2},"end":{"line":677,"column":3}},"209":{"start":{"line":663,"column":4},"end":{"line":663,"column":26}},"210":{"start":{"line":665,"column":4},"end":{"line":665,"column":48}},"211":{"start":{"line":667,"column":4},"end":{"line":667,"column":40}},"212":{"start":{"line":668,"column":4},"end":{"line":674,"column":5}},"213":{"start":{"line":670,"column":6},"end":{"line":673,"column":8}},"214":{"start":{"line":676,"column":4},"end":{"line":676,"column":40}},"215":{"start":{"line":679,"column":2},"end":{"line":679,"column":60}},"216":{"start":{"line":680,"column":2},"end":{"line":680,"column":70}},"217":{"start":{"line":681,"column":2},"end":{"line":681,"column":52}},"218":{"start":{"line":683,"column":2},"end":{"line":685,"column":4}},"219":{"start":{"line":684,"column":4},"end":{"line":684,"column":49}},"220":{"start":{"line":687,"column":2},"end":{"line":689,"column":4}},"221":{"start":{"line":688,"column":4},"end":{"line":688,"column":42}},"222":{"start":{"line":691,"column":2},"end":{"line":693,"column":4}},"223":{"start":{"line":692,"column":4},"end":{"line":692,"column":35}},"224":{"start":{"line":695,"column":2},"end":{"line":697,"column":4}},"225":{"start":{"line":696,"column":4},"end":{"line":696,"column":32}},"226":{"start":{"line":699,"column":2},"end":{"line":701,"column":4}},"227":{"start":{"line":700,"column":4},"end":{"line":700,"column":31}},"228":{"start":{"line":703,"column":2},"end":{"line":705,"column":4}},"229":{"start":{"line":704,"column":4},"end":{"line":704,"column":32}},"230":{"start":{"line":707,"column":2},"end":{"line":709,"column":4}},"231":{"start":{"line":708,"column":4},"end":{"line":708,"column":34}},"232":{"start":{"line":711,"column":2},"end":{"line":713,"column":4}},"233":{"start":{"line":712,"column":4},"end":{"line":712,"column":34}},"234":{"start":{"line":715,"column":2},"end":{"line":717,"column":4}},"235":{"start":{"line":716,"column":4},"end":{"line":716,"column":39}},"236":{"start":{"line":719,"column":2},"end":{"line":721,"column":4}},"237":{"start":{"line":720,"column":4},"end":{"line":720,"column":23}},"238":{"start":{"line":723,"column":2},"end":{"line":725,"column":4}},"239":{"start":{"line":724,"column":4},"end":{"line":724,"column":42}},"240":{"start":{"line":727,"column":2},"end":{"line":729,"column":4}},"241":{"start":{"line":728,"column":4},"end":{"line":728,"column":39}},"242":{"start":{"line":731,"column":2},"end":{"line":733,"column":4}},"243":{"start":{"line":732,"column":4},"end":{"line":732,"column":38}},"244":{"start":{"line":735,"column":2},"end":{"line":737,"column":4}},"245":{"start":{"line":736,"column":4},"end":{"line":736,"column":39}},"246":{"start":{"line":739,"column":2},"end":{"line":741,"column":4}},"247":{"start":{"line":740,"column":4},"end":{"line":740,"column":41}},"248":{"start":{"line":743,"column":2},"end":{"line":745,"column":4}},"249":{"start":{"line":744,"column":4},"end":{"line":744,"column":41}},"250":{"start":{"line":747,"column":2},"end":{"line":749,"column":4}},"251":{"start":{"line":748,"column":4},"end":{"line":748,"column":46}},"252":{"start":{"line":751,"column":2},"end":{"line":753,"column":4}},"253":{"start":{"line":752,"column":4},"end":{"line":752,"column":30}},"254":{"start":{"line":756,"column":2},"end":{"line":766,"column":3}},"255":{"start":{"line":757,"column":4},"end":{"line":765,"column":6}},"256":{"start":{"line":758,"column":6},"end":{"line":764,"column":73}},"257":{"start":{"line":769,"column":2},"end":{"line":774,"column":94}},"258":{"start":{"line":776,"column":2},"end":{"line":780,"column":5}},"259":{"start":{"line":777,"column":4},"end":{"line":779,"column":6}},"260":{"start":{"line":778,"column":6},"end":{"line":778,"column":93}},"261":{"start":{"line":782,"column":2},"end":{"line":782,"column":14}},"262":{"start":{"line":786,"column":0},"end":{"line":786,"column":47}},"263":{"start":{"line":799,"column":0},"end":{"line":956,"column":6}},"264":{"start":{"line":804,"column":4},"end":{"line":810,"column":7}},"265":{"start":{"line":805,"column":6},"end":{"line":807,"column":7}},"266":{"start":{"line":806,"column":8},"end":{"line":806,"column":32}},"267":{"start":{"line":808,"column":6},"end":{"line":808,"column":32}},"268":{"start":{"line":809,"column":6},"end":{"line":809,"column":22}},"269":{"start":{"line":812,"column":4},"end":{"line":830,"column":7}},"270":{"start":{"line":813,"column":6},"end":{"line":813,"column":21}},"271":{"start":{"line":814,"column":6},"end":{"line":818,"column":8}},"272":{"start":{"line":815,"column":8},"end":{"line":817,"column":10}},"273":{"start":{"line":816,"column":10},"end":{"line":816,"column":25}},"274":{"start":{"line":819,"column":6},"end":{"line":828,"column":8}},"275":{"start":{"line":820,"column":8},"end":{"line":820,"column":45}},"276":{"start":{"line":820,"column":32},"end":{"line":820,"column":45}},"277":{"start":{"line":822,"column":8},"end":{"line":824,"column":9}},"278":{"start":{"line":823,"column":10},"end":{"line":823,"column":21}},"279":{"start":{"line":825,"column":8},"end":{"line":825,"column":19}},"280":{"start":{"line":827,"column":8},"end":{"line":827,"column":20}},"281":{"start":{"line":829,"column":6},"end":{"line":829,"column":21}},"282":{"start":{"line":832,"column":4},"end":{"line":852,"column":8}},"283":{"start":{"line":833,"column":6},"end":{"line":833,"column":23}},"284":{"start":{"line":835,"column":6},"end":{"line":842,"column":8}},"285":{"start":{"line":836,"column":8},"end":{"line":836,"column":61}},"286":{"start":{"line":838,"column":8},"end":{"line":840,"column":9}},"287":{"start":{"line":839,"column":10},"end":{"line":839,"column":33}},"288":{"start":{"line":841,"column":8},"end":{"line":841,"column":24}},"289":{"start":{"line":844,"column":6},"end":{"line":849,"column":8}},"290":{"start":{"line":845,"column":8},"end":{"line":847,"column":11}},"291":{"start":{"line":846,"column":10},"end":{"line":846,"column":23}},"292":{"start":{"line":848,"column":8},"end":{"line":848,"column":21}},"293":{"start":{"line":851,"column":6},"end":{"line":851,"column":34}},"294":{"start":{"line":854,"column":4},"end":{"line":871,"column":8}},"295":{"start":{"line":855,"column":6},"end":{"line":855,"column":23}},"296":{"start":{"line":857,"column":6},"end":{"line":861,"column":8}},"297":{"start":{"line":858,"column":8},"end":{"line":858,"column":51}},"298":{"start":{"line":859,"column":8},"end":{"line":859,"column":31}},"299":{"start":{"line":860,"column":8},"end":{"line":860,"column":24}},"300":{"start":{"line":863,"column":6},"end":{"line":868,"column":8}},"301":{"start":{"line":864,"column":8},"end":{"line":866,"column":11}},"302":{"start":{"line":865,"column":10},"end":{"line":865,"column":23}},"303":{"start":{"line":867,"column":8},"end":{"line":867,"column":21}},"304":{"start":{"line":870,"column":6},"end":{"line":870,"column":35}},"305":{"start":{"line":873,"column":4},"end":{"line":954,"column":8}},"306":{"start":{"line":877,"column":6},"end":{"line":938,"column":8}},"307":{"start":{"line":884,"column":10},"end":{"line":884,"column":44}},"308":{"start":{"line":901,"column":10},"end":{"line":901,"column":27}},"309":{"start":{"line":902,"column":10},"end":{"line":902,"column":39}},"310":{"start":{"line":903,"column":10},"end":{"line":903,"column":39}},"311":{"start":{"line":904,"column":10},"end":{"line":904,"column":23}},"312":{"start":{"line":916,"column":10},"end":{"line":916,"column":31}},"313":{"start":{"line":918,"column":10},"end":{"line":918,"column":50}},"314":{"start":{"line":919,"column":10},"end":{"line":930,"column":30}},"315":{"start":{"line":920,"column":12},"end":{"line":920,"column":30}},"316":{"start":{"line":922,"column":12},"end":{"line":925,"column":13}},"317":{"start":{"line":923,"column":14},"end":{"line":923,"column":28}},"318":{"start":{"line":924,"column":14},"end":{"line":924,"column":50}},"319":{"start":{"line":927,"column":12},"end":{"line":929,"column":13}},"320":{"start":{"line":928,"column":14},"end":{"line":928,"column":50}},"321":{"start":{"line":932,"column":10},"end":{"line":934,"column":11}},"322":{"start":{"line":933,"column":12},"end":{"line":933,"column":83}},"323":{"start":{"line":936,"column":10},"end":{"line":936,"column":31}},"324":{"start":{"line":940,"column":6},"end":{"line":951,"column":9}},"325":{"start":{"line":942,"column":8},"end":{"line":950,"column":10}},"326":{"start":{"line":943,"column":10},"end":{"line":948,"column":13}},"327":{"start":{"line":949,"column":10},"end":{"line":949,"column":63}},"328":{"start":{"line":953,"column":6},"end":{"line":953,"column":21}},"329":{"start":{"line":972,"column":0},"end":{"line":1024,"column":2}},"330":{"start":{"line":973,"column":2},"end":{"line":973,"column":27}},"331":{"start":{"line":975,"column":2},"end":{"line":1006,"column":3}},"332":{"start":{"line":976,"column":4},"end":{"line":976,"column":12}},"333":{"start":{"line":978,"column":4},"end":{"line":1003,"column":5}},"334":{"start":{"line":979,"column":6},"end":{"line":979,"column":39}},"335":{"start":{"line":980,"column":6},"end":{"line":980,"column":43}},"336":{"start":{"line":981,"column":6},"end":{"line":983,"column":9}},"337":{"start":{"line":982,"column":8},"end":{"line":982,"column":53}},"338":{"start":{"line":984,"column":6},"end":{"line":984,"column":23}},"339":{"start":{"line":985,"column":11},"end":{"line":1003,"column":5}},"340":{"start":{"line":986,"column":6},"end":{"line":986,"column":15}},"341":{"start":{"line":987,"column":6},"end":{"line":989,"column":9}},"342":{"start":{"line":988,"column":8},"end":{"line":988,"column":31}},"343":{"start":{"line":990,"column":6},"end":{"line":990,"column":41}},"344":{"start":{"line":991,"column":11},"end":{"line":1003,"column":5}},"345":{"start":{"line":992,"column":6},"end":{"line":1000,"column":7}},"346":{"start":{"line":993,"column":8},"end":{"line":993,"column":37}},"347":{"start":{"line":994,"column":13},"end":{"line":1000,"column":7}},"348":{"start":{"line":995,"column":8},"end":{"line":995,"column":73}},"349":{"start":{"line":999,"column":8},"end":{"line":999,"column":43}},"350":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":27}},"351":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":15}},"352":{"start":{"line":1008,"column":2},"end":{"line":1023,"column":3}},"353":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":29}},"354":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":55}},"355":{"start":{"line":1011,"column":4},"end":{"line":1015,"column":5}},"356":{"start":{"line":1012,"column":6},"end":{"line":1014,"column":7}},"357":{"start":{"line":1013,"column":8},"end":{"line":1013,"column":65}},"358":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":34}},"359":{"start":{"line":1017,"column":4},"end":{"line":1020,"column":5}},"360":{"start":{"line":1018,"column":6},"end":{"line":1018,"column":53}},"361":{"start":{"line":1019,"column":6},"end":{"line":1019,"column":34}},"362":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":18}},"363":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":35}},"364":{"start":{"line":1326,"column":0},"end":{"line":1327,"column":65}},"365":{"start":{"line":1343,"column":0},"end":{"line":1940,"column":1}},"366":{"start":{"line":1344,"column":2},"end":{"line":1351,"column":73}},"367":{"start":{"line":1353,"column":2},"end":{"line":1361,"column":3}},"368":{"start":{"line":1354,"column":4},"end":{"line":1354,"column":50}},"369":{"start":{"line":1354,"column":36},"end":{"line":1354,"column":50}},"370":{"start":{"line":1356,"column":4},"end":{"line":1360,"column":6}},"371":{"start":{"line":1357,"column":6},"end":{"line":1359,"column":41}},"372":{"start":{"line":1364,"column":2},"end":{"line":1445,"column":3}},"373":{"start":{"line":1366,"column":4},"end":{"line":1368,"column":28}},"374":{"start":{"line":1370,"column":4},"end":{"line":1370,"column":33}},"375":{"start":{"line":1371,"column":4},"end":{"line":1371,"column":46}},"376":{"start":{"line":1373,"column":4},"end":{"line":1377,"column":5}},"377":{"start":{"line":1374,"column":6},"end":{"line":1376,"column":33}},"378":{"start":{"line":1379,"column":4},"end":{"line":1406,"column":5}},"379":{"start":{"line":1380,"column":6},"end":{"line":1386,"column":7}},"380":{"start":{"line":1381,"column":8},"end":{"line":1385,"column":9}},"381":{"start":{"line":1382,"column":10},"end":{"line":1382,"column":38}},"382":{"start":{"line":1384,"column":10},"end":{"line":1384,"column":43}},"383":{"start":{"line":1388,"column":6},"end":{"line":1388,"column":28}},"384":{"start":{"line":1390,"column":6},"end":{"line":1395,"column":7}},"385":{"start":{"line":1391,"column":8},"end":{"line":1391,"column":89}},"386":{"start":{"line":1392,"column":8},"end":{"line":1392,"column":40}},"387":{"start":{"line":1393,"column":8},"end":{"line":1394,"column":42}},"388":{"start":{"line":1397,"column":6},"end":{"line":1405,"column":7}},"389":{"start":{"line":1398,"column":8},"end":{"line":1404,"column":9}},"390":{"start":{"line":1399,"column":10},"end":{"line":1403,"column":11}},"391":{"start":{"line":1400,"column":12},"end":{"line":1400,"column":35}},"392":{"start":{"line":1401,"column":12},"end":{"line":1401,"column":40}},"393":{"start":{"line":1402,"column":12},"end":{"line":1402,"column":18}},"394":{"start":{"line":1408,"column":4},"end":{"line":1427,"column":5}},"395":{"start":{"line":1409,"column":6},"end":{"line":1412,"column":7}},"396":{"start":{"line":1410,"column":8},"end":{"line":1411,"column":82}},"397":{"start":{"line":1414,"column":6},"end":{"line":1418,"column":7}},"398":{"start":{"line":1415,"column":8},"end":{"line":1417,"column":46}},"399":{"start":{"line":1420,"column":6},"end":{"line":1420,"column":27}},"400":{"start":{"line":1422,"column":6},"end":{"line":1425,"column":7}},"401":{"start":{"line":1423,"column":8},"end":{"line":1423,"column":50}},"402":{"start":{"line":1424,"column":8},"end":{"line":1424,"column":15}},"403":{"start":{"line":1426,"column":6},"end":{"line":1426,"column":25}},"404":{"start":{"line":1429,"column":4},"end":{"line":1429,"column":27}},"405":{"start":{"line":1430,"column":4},"end":{"line":1440,"column":5}},"406":{"start":{"line":1431,"column":6},"end":{"line":1439,"column":7}},"407":{"start":{"line":1432,"column":8},"end":{"line":1437,"column":56}},"408":{"start":{"line":1434,"column":10},"end":{"line":1434,"column":80}},"409":{"start":{"line":1435,"column":15},"end":{"line":1437,"column":56}},"410":{"start":{"line":1436,"column":10},"end":{"line":1436,"column":144}},"411":{"start":{"line":1437,"column":15},"end":{"line":1437,"column":56}},"412":{"start":{"line":1438,"column":8},"end":{"line":1438,"column":15}},"413":{"start":{"line":1441,"column":4},"end":{"line":1444,"column":90}},"414":{"start":{"line":1475,"column":2},"end":{"line":1498,"column":4}},"415":{"start":{"line":1477,"column":4},"end":{"line":1477,"column":42}},"416":{"start":{"line":1479,"column":4},"end":{"line":1486,"column":10}},"417":{"start":{"line":1482,"column":12},"end":{"line":1482,"column":47}},"418":{"start":{"line":1483,"column":12},"end":{"line":1483,"column":84}},"419":{"start":{"line":1484,"column":12},"end":{"line":1484,"column":25}},"420":{"start":{"line":1488,"column":4},"end":{"line":1494,"column":5}},"421":{"start":{"line":1489,"column":6},"end":{"line":1493,"column":8}},"422":{"start":{"line":1490,"column":8},"end":{"line":1490,"column":40}},"423":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":38}},"424":{"start":{"line":1492,"column":8},"end":{"line":1492,"column":21}},"425":{"start":{"line":1496,"column":4},"end":{"line":1496,"column":33}},"426":{"start":{"line":1497,"column":4},"end":{"line":1497,"column":17}},"427":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":29}},"428":{"start":{"line":1606,"column":2},"end":{"line":1609,"column":4}},"429":{"start":{"line":1607,"column":4},"end":{"line":1607,"column":34}},"430":{"start":{"line":1608,"column":4},"end":{"line":1608,"column":89}},"431":{"start":{"line":1611,"column":2},"end":{"line":1639,"column":3}},"432":{"start":{"line":1612,"column":4},"end":{"line":1615,"column":25}},"433":{"start":{"line":1617,"column":4},"end":{"line":1617,"column":51}},"434":{"start":{"line":1617,"column":40},"end":{"line":1617,"column":51}},"435":{"start":{"line":1619,"column":4},"end":{"line":1635,"column":35}},"436":{"start":{"line":1622,"column":8},"end":{"line":1622,"column":54}},"437":{"start":{"line":1623,"column":8},"end":{"line":1623,"column":50}},"438":{"start":{"line":1624,"column":8},"end":{"line":1624,"column":55}},"439":{"start":{"line":1625,"column":8},"end":{"line":1625,"column":28}},"440":{"start":{"line":1626,"column":8},"end":{"line":1633,"column":29}},"441":{"start":{"line":1637,"column":4},"end":{"line":1637,"column":44}},"442":{"start":{"line":1638,"column":4},"end":{"line":1638,"column":15}},"443":{"start":{"line":1670,"column":2},"end":{"line":1684,"column":4}},"444":{"start":{"line":1672,"column":4},"end":{"line":1672,"column":42}},"445":{"start":{"line":1674,"column":4},"end":{"line":1680,"column":10}},"446":{"start":{"line":1677,"column":12},"end":{"line":1677,"column":85}},"447":{"start":{"line":1678,"column":12},"end":{"line":1678,"column":25}},"448":{"start":{"line":1682,"column":4},"end":{"line":1682,"column":35}},"449":{"start":{"line":1683,"column":4},"end":{"line":1683,"column":17}},"450":{"start":{"line":1798,"column":2},"end":{"line":1798,"column":31}},"451":{"start":{"line":1812,"column":2},"end":{"line":1815,"column":4}},"452":{"start":{"line":1813,"column":4},"end":{"line":1813,"column":34}},"453":{"start":{"line":1814,"column":4},"end":{"line":1814,"column":91}},"454":{"start":{"line":1835,"column":2},"end":{"line":1853,"column":4}},"455":{"start":{"line":1836,"column":4},"end":{"line":1836,"column":47}},"456":{"start":{"line":1836,"column":26},"end":{"line":1836,"column":47}},"457":{"start":{"line":1838,"column":4},"end":{"line":1838,"column":21}},"458":{"start":{"line":1839,"column":4},"end":{"line":1839,"column":83}},"459":{"start":{"line":1839,"column":34},"end":{"line":1839,"column":83}},"460":{"start":{"line":1841,"column":4},"end":{"line":1851,"column":5}},"461":{"start":{"line":1842,"column":6},"end":{"line":1846,"column":7}},"462":{"start":{"line":1843,"column":8},"end":{"line":1843,"column":45}},"463":{"start":{"line":1844,"column":8},"end":{"line":1844,"column":80}},"464":{"start":{"line":1844,"column":26},"end":{"line":1844,"column":80}},"465":{"start":{"line":1845,"column":8},"end":{"line":1845,"column":18}},"466":{"start":{"line":1848,"column":6},"end":{"line":1850,"column":7}},"467":{"start":{"line":1849,"column":8},"end":{"line":1849,"column":39}},"468":{"start":{"line":1852,"column":4},"end":{"line":1852,"column":56}},"469":{"start":{"line":1870,"column":2},"end":{"line":1875,"column":4}},"470":{"start":{"line":1871,"column":4},"end":{"line":1871,"column":47}},"471":{"start":{"line":1871,"column":26},"end":{"line":1871,"column":47}},"472":{"start":{"line":1872,"column":4},"end":{"line":1874,"column":5}},"473":{"start":{"line":1873,"column":6},"end":{"line":1873,"column":74}},"474":{"start":{"line":1891,"column":2},"end":{"line":1896,"column":4}},"475":{"start":{"line":1892,"column":4},"end":{"line":1892,"column":47}},"476":{"start":{"line":1892,"column":26},"end":{"line":1892,"column":47}},"477":{"start":{"line":1893,"column":4},"end":{"line":1895,"column":5}},"478":{"start":{"line":1894,"column":6},"end":{"line":1894,"column":65}},"479":{"start":{"line":1907,"column":2},"end":{"line":1910,"column":4}},"480":{"start":{"line":1908,"column":4},"end":{"line":1908,"column":28}},"481":{"start":{"line":1909,"column":4},"end":{"line":1909,"column":25}},"482":{"start":{"line":1912,"column":2},"end":{"line":1912,"column":59}},"483":{"start":{"line":1914,"column":2},"end":{"line":1914,"column":22}},"484":{"start":{"line":1917,"column":2},"end":{"line":1939,"column":3}},"485":{"start":{"line":1918,"column":4},"end":{"line":1927,"column":7}},"486":{"start":{"line":1919,"column":5},"end":{"line":1926,"column":7}},"487":{"start":{"line":1920,"column":8},"end":{"line":1920,"column":46}},"488":{"start":{"line":1923,"column":8},"end":{"line":1923,"column":49}},"489":{"start":{"line":1923,"column":38},"end":{"line":1923,"column":49}},"490":{"start":{"line":1925,"column":7},"end":{"line":1925,"column":74}},"491":{"start":{"line":1929,"column":4},"end":{"line":1938,"column":7}},"492":{"start":{"line":1930,"column":6},"end":{"line":1937,"column":8}},"493":{"start":{"line":1931,"column":8},"end":{"line":1931,"column":46}},"494":{"start":{"line":1934,"column":8},"end":{"line":1934,"column":49}},"495":{"start":{"line":1934,"column":38},"end":{"line":1934,"column":49}},"496":{"start":{"line":1936,"column":8},"end":{"line":1936,"column":70}},"497":{"start":{"line":1942,"column":0},"end":{"line":1946,"column":1}},"498":{"start":{"line":1943,"column":2},"end":{"line":1945,"column":3}},"499":{"start":{"line":1944,"column":4},"end":{"line":1944,"column":99}},"500":{"start":{"line":1949,"column":0},"end":{"line":2052,"column":1}},"501":{"start":{"line":1951,"column":2},"end":{"line":1954,"column":3}},"502":{"start":{"line":1952,"column":4},"end":{"line":1952,"column":56}},"503":{"start":{"line":1953,"column":4},"end":{"line":1953,"column":25}},"504":{"start":{"line":1956,"column":2},"end":{"line":1959,"column":3}},"505":{"start":{"line":1957,"column":4},"end":{"line":1958,"column":59}},"506":{"start":{"line":1961,"column":2},"end":{"line":1961,"column":19}},"507":{"start":{"line":1962,"column":2},"end":{"line":1962,"column":25}},"508":{"start":{"line":1964,"column":2},"end":{"line":1970,"column":4}},"509":{"start":{"line":1965,"column":4},"end":{"line":1965,"column":35}},"510":{"start":{"line":1965,"column":22},"end":{"line":1965,"column":35}},"511":{"start":{"line":1966,"column":4},"end":{"line":1966,"column":40}},"512":{"start":{"line":1966,"column":27},"end":{"line":1966,"column":40}},"513":{"start":{"line":1967,"column":4},"end":{"line":1967,"column":65}},"514":{"start":{"line":1967,"column":52},"end":{"line":1967,"column":65}},"515":{"start":{"line":1968,"column":4},"end":{"line":1968,"column":68}},"516":{"start":{"line":1968,"column":55},"end":{"line":1968,"column":68}},"517":{"start":{"line":1969,"column":4},"end":{"line":1969,"column":16}},"518":{"start":{"line":1972,"column":2},"end":{"line":1977,"column":4}},"519":{"start":{"line":1973,"column":4},"end":{"line":1973,"column":26}},"520":{"start":{"line":1973,"column":14},"end":{"line":1973,"column":26}},"521":{"start":{"line":1974,"column":4},"end":{"line":1974,"column":57}},"522":{"start":{"line":1974,"column":38},"end":{"line":1974,"column":57}},"523":{"start":{"line":1975,"column":4},"end":{"line":1975,"column":47}},"524":{"start":{"line":1975,"column":33},"end":{"line":1975,"column":47}},"525":{"start":{"line":1976,"column":4},"end":{"line":1976,"column":40}},"526":{"start":{"line":1979,"column":2},"end":{"line":1983,"column":4}},"527":{"start":{"line":1980,"column":4},"end":{"line":1980,"column":50}},"528":{"start":{"line":1980,"column":38},"end":{"line":1980,"column":50}},"529":{"start":{"line":1981,"column":4},"end":{"line":1981,"column":55}},"530":{"start":{"line":1981,"column":37},"end":{"line":1981,"column":55}},"531":{"start":{"line":1982,"column":4},"end":{"line":1982,"column":38}},"532":{"start":{"line":1985,"column":2},"end":{"line":1994,"column":4}},"533":{"start":{"line":1986,"column":4},"end":{"line":1986,"column":47}},"534":{"start":{"line":1986,"column":35},"end":{"line":1986,"column":47}},"535":{"start":{"line":1987,"column":4},"end":{"line":1987,"column":67}},"536":{"start":{"line":1987,"column":47},"end":{"line":1987,"column":67}},"537":{"start":{"line":1988,"column":4},"end":{"line":1988,"column":57}},"538":{"start":{"line":1988,"column":42},"end":{"line":1988,"column":57}},"539":{"start":{"line":1989,"column":4},"end":{"line":1991,"column":5}},"540":{"start":{"line":1990,"column":6},"end":{"line":1990,"column":89}},"541":{"start":{"line":1993,"column":4},"end":{"line":1993,"column":21}},"542":{"start":{"line":1996,"column":2},"end":{"line":1998,"column":4}},"543":{"start":{"line":1997,"column":4},"end":{"line":1997,"column":30}},"544":{"start":{"line":2000,"column":2},"end":{"line":2051,"column":4}},"545":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":54}},"546":{"start":{"line":2003,"column":4},"end":{"line":2018,"column":5}},"547":{"start":{"line":2004,"column":6},"end":{"line":2004,"column":22}},"548":{"start":{"line":2005,"column":6},"end":{"line":2005,"column":93}},"549":{"start":{"line":2005,"column":79},"end":{"line":2005,"column":93}},"550":{"start":{"line":2007,"column":6},"end":{"line":2007,"column":26}},"551":{"start":{"line":2008,"column":6},"end":{"line":2008,"column":28}},"552":{"start":{"line":2008,"column":14},"end":{"line":2008,"column":28}},"553":{"start":{"line":2009,"column":6},"end":{"line":2015,"column":7}},"554":{"start":{"line":2010,"column":8},"end":{"line":2010,"column":30}},"555":{"start":{"line":2011,"column":8},"end":{"line":2011,"column":23}},"556":{"start":{"line":2012,"column":8},"end":{"line":2014,"column":9}},"557":{"start":{"line":2013,"column":10},"end":{"line":2013,"column":40}},"558":{"start":{"line":2017,"column":6},"end":{"line":2017,"column":20}},"559":{"start":{"line":2020,"column":4},"end":{"line":2043,"column":5}},"560":{"start":{"line":2021,"column":6},"end":{"line":2024,"column":15}},"561":{"start":{"line":2026,"column":6},"end":{"line":2041,"column":9}},"562":{"start":{"line":2027,"column":8},"end":{"line":2040,"column":9}},"563":{"start":{"line":2028,"column":10},"end":{"line":2028,"column":63}},"564":{"start":{"line":2029,"column":10},"end":{"line":2029,"column":52}},"565":{"start":{"line":2030,"column":10},"end":{"line":2039,"column":11}},"566":{"start":{"line":2031,"column":12},"end":{"line":2031,"column":99}},"567":{"start":{"line":2032,"column":12},"end":{"line":2038,"column":13}},"568":{"start":{"line":2033,"column":14},"end":{"line":2033,"column":29}},"569":{"start":{"line":2034,"column":19},"end":{"line":2038,"column":13}},"570":{"start":{"line":2035,"column":14},"end":{"line":2035,"column":33}},"571":{"start":{"line":2037,"column":14},"end":{"line":2037,"column":40}},"572":{"start":{"line":2042,"column":6},"end":{"line":2042,"column":17}},"573":{"start":{"line":2044,"column":4},"end":{"line":2050,"column":5}},"574":{"start":{"line":2045,"column":6},"end":{"line":2049,"column":7}},"575":{"start":{"line":2046,"column":8},"end":{"line":2046,"column":41}},"576":{"start":{"line":2054,"column":0},"end":{"line":2056,"column":1}},"577":{"start":{"line":2055,"column":2},"end":{"line":2055,"column":23}},"578":{"start":{"line":2058,"column":0},"end":{"line":2120,"column":1}},"579":{"start":{"line":2061,"column":2},"end":{"line":2061,"column":32}},"580":{"start":{"line":2063,"column":2},"end":{"line":2069,"column":4}},"581":{"start":{"line":2064,"column":4},"end":{"line":2064,"column":27}},"582":{"start":{"line":2065,"column":4},"end":{"line":2065,"column":21}},"583":{"start":{"line":2066,"column":4},"end":{"line":2066,"column":25}},"584":{"start":{"line":2067,"column":4},"end":{"line":2067,"column":27}},"585":{"start":{"line":2068,"column":4},"end":{"line":2068,"column":28}},"586":{"start":{"line":2071,"column":2},"end":{"line":2073,"column":4}},"587":{"start":{"line":2072,"column":4},"end":{"line":2072,"column":23}},"588":{"start":{"line":2075,"column":2},"end":{"line":2077,"column":4}},"589":{"start":{"line":2076,"column":4},"end":{"line":2076,"column":35}},"590":{"start":{"line":2079,"column":2},"end":{"line":2094,"column":4}},"591":{"start":{"line":2082,"column":4},"end":{"line":2082,"column":42}},"592":{"start":{"line":2083,"column":4},"end":{"line":2083,"column":30}},"593":{"start":{"line":2083,"column":16},"end":{"line":2083,"column":30}},"594":{"start":{"line":2085,"column":4},"end":{"line":2085,"column":35}},"595":{"start":{"line":2086,"column":4},"end":{"line":2086,"column":38}},"596":{"start":{"line":2087,"column":4},"end":{"line":2087,"column":30}},"597":{"start":{"line":2087,"column":16},"end":{"line":2087,"column":30}},"598":{"start":{"line":2089,"column":4},"end":{"line":2089,"column":23}},"599":{"start":{"line":2090,"column":4},"end":{"line":2092,"column":7}},"600":{"start":{"line":2091,"column":6},"end":{"line":2091,"column":80}},"601":{"start":{"line":2091,"column":61},"end":{"line":2091,"column":80}},"602":{"start":{"line":2093,"column":4},"end":{"line":2093,"column":18}},"603":{"start":{"line":2096,"column":2},"end":{"line":2103,"column":4}},"604":{"start":{"line":2097,"column":4},"end":{"line":2097,"column":19}},"605":{"start":{"line":2099,"column":4},"end":{"line":2101,"column":7}},"606":{"start":{"line":2100,"column":6},"end":{"line":2100,"column":37}},"607":{"start":{"line":2102,"column":4},"end":{"line":2102,"column":28}},"608":{"start":{"line":2105,"column":2},"end":{"line":2105,"column":28}},"609":{"start":{"line":2110,"column":2},"end":{"line":2110,"column":21}},"610":{"start":{"line":2111,"column":2},"end":{"line":2114,"column":4}},"611":{"start":{"line":2112,"column":4},"end":{"line":2112,"column":75}},"612":{"start":{"line":2112,"column":50},"end":{"line":2112,"column":75}},"613":{"start":{"line":2113,"column":4},"end":{"line":2113,"column":39}},"614":{"start":{"line":2116,"column":2},"end":{"line":2119,"column":4}},"615":{"start":{"line":2132,"column":0},"end":{"line":2171,"column":3}},"616":{"start":{"line":2143,"column":2},"end":{"line":2145,"column":4}},"617":{"start":{"line":2144,"column":4},"end":{"line":2144,"column":32}},"618":{"start":{"line":2154,"column":2},"end":{"line":2159,"column":4}},"619":{"start":{"line":2155,"column":4},"end":{"line":2158,"column":5}},"620":{"start":{"line":2156,"column":6},"end":{"line":2157,"column":60}},"621":{"start":{"line":2161,"column":2},"end":{"line":2168,"column":3}},"622":{"start":{"line":2162,"column":4},"end":{"line":2162,"column":20}},"623":{"start":{"line":2163,"column":4},"end":{"line":2165,"column":7}},"624":{"start":{"line":2164,"column":6},"end":{"line":2164,"column":68}},"625":{"start":{"line":2167,"column":4},"end":{"line":2167,"column":29}},"626":{"start":{"line":2170,"column":2},"end":{"line":2170,"column":19}},"627":{"start":{"line":2173,"column":0},"end":{"line":2199,"column":3}},"628":{"start":{"line":2174,"column":2},"end":{"line":2180,"column":4}},"629":{"start":{"line":2175,"column":4},"end":{"line":2175,"column":35}},"630":{"start":{"line":2176,"column":4},"end":{"line":2176,"column":25}},"631":{"start":{"line":2177,"column":4},"end":{"line":2179,"column":6}},"632":{"start":{"line":2178,"column":6},"end":{"line":2178,"column":35}},"633":{"start":{"line":2182,"column":2},"end":{"line":2182,"column":19}},"634":{"start":{"line":2183,"column":2},"end":{"line":2183,"column":40}},"635":{"start":{"line":2185,"column":2},"end":{"line":2196,"column":4}},"636":{"start":{"line":2186,"column":4},"end":{"line":2188,"column":5}},"637":{"start":{"line":2187,"column":6},"end":{"line":2187,"column":50}},"638":{"start":{"line":2190,"column":4},"end":{"line":2190,"column":36}},"639":{"start":{"line":2191,"column":4},"end":{"line":2193,"column":5}},"640":{"start":{"line":2192,"column":6},"end":{"line":2192,"column":23}},"641":{"start":{"line":2195,"column":4},"end":{"line":2195,"column":39}},"642":{"start":{"line":2198,"column":2},"end":{"line":2198,"column":15}},"643":{"start":{"line":2204,"column":0},"end":{"line":2204,"column":24}},"644":{"start":{"line":2205,"column":0},"end":{"line":2210,"column":2}},"645":{"start":{"line":2206,"column":2},"end":{"line":2209,"column":5}},"646":{"start":{"line":2207,"column":4},"end":{"line":2207,"column":93}},"647":{"start":{"line":2208,"column":4},"end":{"line":2208,"column":31}},"648":{"start":{"line":2281,"column":0},"end":{"line":2304,"column":1}},"649":{"start":{"line":2282,"column":2},"end":{"line":2301,"column":5}},"650":{"start":{"line":2283,"column":4},"end":{"line":2300,"column":6}},"651":{"start":{"line":2284,"column":6},"end":{"line":2298,"column":7}},"652":{"start":{"line":2285,"column":8},"end":{"line":2285,"column":82}},"653":{"start":{"line":2287,"column":8},"end":{"line":2287,"column":69}},"654":{"start":{"line":2288,"column":8},"end":{"line":2290,"column":9}},"655":{"start":{"line":2289,"column":10},"end":{"line":2289,"column":54}},"656":{"start":{"line":2292,"column":8},"end":{"line":2292,"column":37}},"657":{"start":{"line":2293,"column":8},"end":{"line":2295,"column":9}},"658":{"start":{"line":2294,"column":10},"end":{"line":2294,"column":42}},"659":{"start":{"line":2297,"column":8},"end":{"line":2297,"column":24}},"660":{"start":{"line":2299,"column":6},"end":{"line":2299,"column":57}},"661":{"start":{"line":2303,"column":2},"end":{"line":2303,"column":43}},"662":{"start":{"line":2332,"column":0},"end":{"line":2358,"column":3}},"663":{"start":{"line":2334,"column":2},"end":{"line":2357,"column":5}},"664":{"start":{"line":2335,"column":4},"end":{"line":2356,"column":6}},"665":{"start":{"line":2337,"column":6},"end":{"line":2337,"column":66}},"666":{"start":{"line":2339,"column":6},"end":{"line":2342,"column":9}},"667":{"start":{"line":2341,"column":8},"end":{"line":2341,"column":104}},"668":{"start":{"line":2344,"column":6},"end":{"line":2346,"column":7}},"669":{"start":{"line":2345,"column":8},"end":{"line":2345,"column":46}},"670":{"start":{"line":2347,"column":6},"end":{"line":2349,"column":7}},"671":{"start":{"line":2348,"column":8},"end":{"line":2348,"column":53}},"672":{"start":{"line":2351,"column":6},"end":{"line":2351,"column":49}},"673":{"start":{"line":2353,"column":6},"end":{"line":2353,"column":28}},"674":{"start":{"line":2354,"column":6},"end":{"line":2354,"column":61}},"675":{"start":{"line":2355,"column":6},"end":{"line":2355,"column":106}},"676":{"start":{"line":2406,"column":0},"end":{"line":2419,"column":38}},"677":{"start":{"line":2414,"column":2},"end":{"line":2414,"column":65}},"678":{"start":{"line":2415,"column":2},"end":{"line":2415,"column":58}},"679":{"start":{"line":2416,"column":2},"end":{"line":2416,"column":69}},"680":{"start":{"line":2417,"column":2},"end":{"line":2417,"column":81}},"681":{"start":{"line":2418,"column":2},"end":{"line":2418,"column":73}},"682":{"start":{"line":2432,"column":0},"end":{"line":2434,"column":38}},"683":{"start":{"line":2433,"column":2},"end":{"line":2433,"column":77}},"684":{"start":{"line":2721,"column":0},"end":{"line":2721,"column":22}},"685":{"start":{"line":2722,"column":0},"end":{"line":2723,"column":77}},"686":{"start":{"line":2737,"column":0},"end":{"line":2809,"column":3}},"687":{"start":{"line":2739,"column":2},"end":{"line":2739,"column":61}},"688":{"start":{"line":2741,"column":2},"end":{"line":2741,"column":59}},"689":{"start":{"line":2742,"column":2},"end":{"line":2742,"column":53}},"690":{"start":{"line":2744,"column":2},"end":{"line":2744,"column":19}},"691":{"start":{"line":2760,"column":2},"end":{"line":2776,"column":3}},"692":{"start":{"line":2761,"column":4},"end":{"line":2761,"column":18}},"693":{"start":{"line":2762,"column":4},"end":{"line":2762,"column":47}},"694":{"start":{"line":2763,"column":4},"end":{"line":2763,"column":21}},"695":{"start":{"line":2765,"column":4},"end":{"line":2773,"column":5}},"696":{"start":{"line":2766,"column":6},"end":{"line":2766,"column":47}},"697":{"start":{"line":2768,"column":6},"end":{"line":2772,"column":7}},"698":{"start":{"line":2769,"column":8},"end":{"line":2769,"column":19}},"699":{"start":{"line":2770,"column":8},"end":{"line":2770,"column":57}},"700":{"start":{"line":2771,"column":8},"end":{"line":2771,"column":50}},"701":{"start":{"line":2775,"column":4},"end":{"line":2775,"column":17}},"702":{"start":{"line":2792,"column":2},"end":{"line":2808,"column":3}},"703":{"start":{"line":2793,"column":4},"end":{"line":2793,"column":61}},"704":{"start":{"line":2794,"column":4},"end":{"line":2794,"column":47}},"705":{"start":{"line":2795,"column":4},"end":{"line":2795,"column":21}},"706":{"start":{"line":2797,"column":4},"end":{"line":2805,"column":5}},"707":{"start":{"line":2798,"column":6},"end":{"line":2798,"column":47}},"708":{"start":{"line":2800,"column":6},"end":{"line":2804,"column":7}},"709":{"start":{"line":2801,"column":8},"end":{"line":2801,"column":78}},"710":{"start":{"line":2802,"column":8},"end":{"line":2802,"column":57}},"711":{"start":{"line":2803,"column":8},"end":{"line":2803,"column":50}},"712":{"start":{"line":2807,"column":4},"end":{"line":2807,"column":17}},"713":{"start":{"line":2812,"column":0},"end":{"line":3210,"column":35}},"714":{"start":{"line":2814,"column":2},"end":{"line":2816,"column":3}},"715":{"start":{"line":2815,"column":4},"end":{"line":2815,"column":11}},"716":{"start":{"line":2818,"column":2},"end":{"line":2823,"column":8}},"717":{"start":{"line":2822,"column":8},"end":{"line":2822,"column":29}},"718":{"start":{"line":2825,"column":2},"end":{"line":2825,"column":56}},"719":{"start":{"line":2826,"column":2},"end":{"line":2831,"column":4}},"720":{"start":{"line":2827,"column":4},"end":{"line":2829,"column":5}},"721":{"start":{"line":2828,"column":6},"end":{"line":2828,"column":34}},"722":{"start":{"line":2830,"column":4},"end":{"line":2830,"column":58}},"723":{"start":{"line":2853,"column":2},"end":{"line":2880,"column":4}},"724":{"start":{"line":2854,"column":4},"end":{"line":2854,"column":61}},"725":{"start":{"line":2855,"column":4},"end":{"line":2855,"column":52}},"726":{"start":{"line":2857,"column":4},"end":{"line":2879,"column":5}},"727":{"start":{"line":2858,"column":6},"end":{"line":2878,"column":7}},"728":{"start":{"line":2859,"column":8},"end":{"line":2859,"column":80}},"729":{"start":{"line":2861,"column":8},"end":{"line":2861,"column":78}},"730":{"start":{"line":2862,"column":8},"end":{"line":2877,"column":11}},"731":{"start":{"line":2863,"column":10},"end":{"line":2871,"column":11}},"732":{"start":{"line":2864,"column":12},"end":{"line":2868,"column":15}},"733":{"start":{"line":2865,"column":14},"end":{"line":2867,"column":17}},"734":{"start":{"line":2866,"column":16},"end":{"line":2866,"column":43}},"735":{"start":{"line":2870,"column":12},"end":{"line":2870,"column":24}},"736":{"start":{"line":2872,"column":10},"end":{"line":2876,"column":11}},"737":{"start":{"line":2873,"column":12},"end":{"line":2873,"column":53}},"738":{"start":{"line":2875,"column":12},"end":{"line":2875,"column":29}},"739":{"start":{"line":2882,"column":2},"end":{"line":2882,"column":63}},"740":{"start":{"line":2883,"column":2},"end":{"line":2883,"column":60}},"741":{"start":{"line":2886,"column":2},"end":{"line":2889,"column":4}},"742":{"start":{"line":2887,"column":4},"end":{"line":2887,"column":42}},"743":{"start":{"line":2887,"column":32},"end":{"line":2887,"column":42}},"744":{"start":{"line":2888,"column":4},"end":{"line":2888,"column":21}},"745":{"start":{"line":2943,"column":2},"end":{"line":2968,"column":4}},"746":{"start":{"line":2944,"column":4},"end":{"line":2946,"column":5}},"747":{"start":{"line":2945,"column":6},"end":{"line":2945,"column":104}},"748":{"start":{"line":2948,"column":4},"end":{"line":2948,"column":28}},"749":{"start":{"line":2950,"column":4},"end":{"line":2958,"column":7}},"750":{"start":{"line":2951,"column":6},"end":{"line":2954,"column":7}},"751":{"start":{"line":2952,"column":8},"end":{"line":2952,"column":137}},"752":{"start":{"line":2953,"column":8},"end":{"line":2953,"column":40}},"753":{"start":{"line":2955,"column":6},"end":{"line":2955,"column":25}},"754":{"start":{"line":2956,"column":6},"end":{"line":2956,"column":25}},"755":{"start":{"line":2957,"column":6},"end":{"line":2957,"column":34}},"756":{"start":{"line":2960,"column":4},"end":{"line":2967,"column":7}},"757":{"start":{"line":2961,"column":6},"end":{"line":2966,"column":7}},"758":{"start":{"line":2962,"column":8},"end":{"line":2962,"column":44}},"759":{"start":{"line":2963,"column":8},"end":{"line":2963,"column":27}},"760":{"start":{"line":2965,"column":8},"end":{"line":2965,"column":41}},"761":{"start":{"line":2970,"column":2},"end":{"line":2983,"column":4}},"762":{"start":{"line":2971,"column":4},"end":{"line":2982,"column":5}},"763":{"start":{"line":2972,"column":6},"end":{"line":2972,"column":30}},"764":{"start":{"line":2973,"column":6},"end":{"line":2973,"column":25}},"765":{"start":{"line":2974,"column":6},"end":{"line":2977,"column":9}},"766":{"start":{"line":2975,"column":8},"end":{"line":2975,"column":34}},"767":{"start":{"line":2976,"column":8},"end":{"line":2976,"column":24}},"768":{"start":{"line":2979,"column":6},"end":{"line":2979,"column":25}},"769":{"start":{"line":2980,"column":6},"end":{"line":2980,"column":33}},"770":{"start":{"line":2981,"column":6},"end":{"line":2981,"column":30}},"771":{"start":{"line":2985,"column":2},"end":{"line":2989,"column":4}},"772":{"start":{"line":2986,"column":4},"end":{"line":2988,"column":5}},"773":{"start":{"line":2987,"column":6},"end":{"line":2987,"column":25}},"774":{"start":{"line":2991,"column":2},"end":{"line":3030,"column":4}},"775":{"start":{"line":2992,"column":4},"end":{"line":2992,"column":41}},"776":{"start":{"line":2994,"column":4},"end":{"line":2996,"column":7}},"777":{"start":{"line":2995,"column":6},"end":{"line":2995,"column":24}},"778":{"start":{"line":2998,"column":4},"end":{"line":2998,"column":33}},"779":{"start":{"line":2999,"column":4},"end":{"line":2999,"column":32}},"780":{"start":{"line":3000,"column":4},"end":{"line":3000,"column":41}},"781":{"start":{"line":3001,"column":4},"end":{"line":3001,"column":23}},"782":{"start":{"line":3003,"column":4},"end":{"line":3017,"column":5}},"783":{"start":{"line":3005,"column":6},"end":{"line":3005,"column":54}},"784":{"start":{"line":3006,"column":6},"end":{"line":3006,"column":53}},"785":{"start":{"line":3007,"column":6},"end":{"line":3007,"column":78}},"786":{"start":{"line":3008,"column":6},"end":{"line":3010,"column":7}},"787":{"start":{"line":3009,"column":8},"end":{"line":3009,"column":36}},"788":{"start":{"line":3011,"column":6},"end":{"line":3011,"column":46}},"789":{"start":{"line":3015,"column":6},"end":{"line":3015,"column":50}},"790":{"start":{"line":3016,"column":6},"end":{"line":3016,"column":67}},"791":{"start":{"line":3016,"column":45},"end":{"line":3016,"column":67}},"792":{"start":{"line":3020,"column":4},"end":{"line":3022,"column":7}},"793":{"start":{"line":3021,"column":6},"end":{"line":3021,"column":44}},"794":{"start":{"line":3024,"column":4},"end":{"line":3024,"column":34}},"795":{"start":{"line":3026,"column":4},"end":{"line":3028,"column":7}},"796":{"start":{"line":3027,"column":6},"end":{"line":3027,"column":36}},"797":{"start":{"line":3029,"column":4},"end":{"line":3029,"column":36}},"798":{"start":{"line":3032,"column":2},"end":{"line":3032,"column":59}},"799":{"start":{"line":3033,"column":2},"end":{"line":3033,"column":60}},"800":{"start":{"line":3123,"column":2},"end":{"line":3131,"column":4}},"801":{"start":{"line":3124,"column":4},"end":{"line":3124,"column":29}},"802":{"start":{"line":3125,"column":4},"end":{"line":3125,"column":23}},"803":{"start":{"line":3126,"column":4},"end":{"line":3126,"column":35}},"804":{"start":{"line":3126,"column":16},"end":{"line":3126,"column":35}},"805":{"start":{"line":3127,"column":4},"end":{"line":3127,"column":47}},"806":{"start":{"line":3127,"column":20},"end":{"line":3127,"column":47}},"807":{"start":{"line":3128,"column":4},"end":{"line":3129,"column":56}},"808":{"start":{"line":3129,"column":6},"end":{"line":3129,"column":56}},"809":{"start":{"line":3130,"column":4},"end":{"line":3130,"column":53}},"810":{"start":{"line":3130,"column":22},"end":{"line":3130,"column":53}},"811":{"start":{"line":3132,"column":2},"end":{"line":3132,"column":66}},"812":{"start":{"line":3134,"column":2},"end":{"line":3184,"column":4}},"813":{"start":{"line":3135,"column":4},"end":{"line":3135,"column":60}},"814":{"start":{"line":3136,"column":4},"end":{"line":3136,"column":58}},"815":{"start":{"line":3138,"column":4},"end":{"line":3142,"column":5}},"816":{"start":{"line":3139,"column":6},"end":{"line":3141,"column":33}},"817":{"start":{"line":3140,"column":8},"end":{"line":3140,"column":28}},"818":{"start":{"line":3143,"column":4},"end":{"line":3143,"column":68}},"819":{"start":{"line":3145,"column":4},"end":{"line":3183,"column":5}},"820":{"start":{"line":3146,"column":6},"end":{"line":3146,"column":47}},"821":{"start":{"line":3147,"column":6},"end":{"line":3147,"column":51}},"822":{"start":{"line":3148,"column":6},"end":{"line":3150,"column":10}},"823":{"start":{"line":3149,"column":8},"end":{"line":3149,"column":50}},"824":{"start":{"line":3151,"column":6},"end":{"line":3151,"column":32}},"825":{"start":{"line":3152,"column":6},"end":{"line":3152,"column":28}},"826":{"start":{"line":3153,"column":6},"end":{"line":3153,"column":43}},"827":{"start":{"line":3154,"column":6},"end":{"line":3165,"column":7}},"828":{"start":{"line":3155,"column":8},"end":{"line":3162,"column":9}},"829":{"start":{"line":3157,"column":10},"end":{"line":3161,"column":13}},"830":{"start":{"line":3158,"column":12},"end":{"line":3160,"column":13}},"831":{"start":{"line":3159,"column":14},"end":{"line":3159,"column":52}},"832":{"start":{"line":3163,"column":8},"end":{"line":3163,"column":79}},"833":{"start":{"line":3164,"column":8},"end":{"line":3164,"column":47}},"834":{"start":{"line":3166,"column":6},"end":{"line":3182,"column":7}},"835":{"start":{"line":3167,"column":8},"end":{"line":3171,"column":9}},"836":{"start":{"line":3170,"column":10},"end":{"line":3170,"column":41}},"837":{"start":{"line":3172,"column":8},"end":{"line":3181,"column":9}},"838":{"start":{"line":3173,"column":10},"end":{"line":3173,"column":61}},"839":{"start":{"line":3175,"column":10},"end":{"line":3177,"column":11}},"840":{"start":{"line":3176,"column":12},"end":{"line":3176,"column":76}},"841":{"start":{"line":3178,"column":10},"end":{"line":3178,"column":18}},"842":{"start":{"line":3180,"column":10},"end":{"line":3180,"column":31}},"843":{"start":{"line":3187,"column":2},"end":{"line":3200,"column":4}},"844":{"start":{"line":3188,"column":4},"end":{"line":3188,"column":46}},"845":{"start":{"line":3189,"column":4},"end":{"line":3189,"column":52}},"846":{"start":{"line":3191,"column":4},"end":{"line":3199,"column":5}},"847":{"start":{"line":3192,"column":6},"end":{"line":3198,"column":7}},"848":{"start":{"line":3193,"column":8},"end":{"line":3197,"column":9}},"849":{"start":{"line":3194,"column":10},"end":{"line":3194,"column":89}},"850":{"start":{"line":3196,"column":10},"end":{"line":3196,"column":46}},"851":{"start":{"line":3202,"column":2},"end":{"line":3209,"column":3}},"852":{"start":{"line":3203,"column":4},"end":{"line":3203,"column":24}},"853":{"start":{"line":3204,"column":4},"end":{"line":3204,"column":28}},"854":{"start":{"line":3206,"column":4},"end":{"line":3208,"column":6}},"855":{"start":{"line":3207,"column":6},"end":{"line":3207,"column":46}},"856":{"start":{"line":3212,"column":0},"end":{"line":3212,"column":13}},"857":{"start":{"line":3214,"column":0},"end":{"line":3423,"column":5}},"858":{"start":{"line":3224,"column":2},"end":{"line":3342,"column":4}},"859":{"start":{"line":3225,"column":4},"end":{"line":3225,"column":59}},"860":{"start":{"line":3225,"column":38},"end":{"line":3225,"column":59}},"861":{"start":{"line":3226,"column":4},"end":{"line":3226,"column":25}},"862":{"start":{"line":3226,"column":18},"end":{"line":3226,"column":25}},"863":{"start":{"line":3228,"column":4},"end":{"line":3228,"column":32}},"864":{"start":{"line":3229,"column":4},"end":{"line":3229,"column":59}},"865":{"start":{"line":3230,"column":4},"end":{"line":3230,"column":30}},"866":{"start":{"line":3231,"column":4},"end":{"line":3231,"column":24}},"867":{"start":{"line":3232,"column":4},"end":{"line":3232,"column":24}},"868":{"start":{"line":3234,"column":4},"end":{"line":3235,"column":50}},"869":{"start":{"line":3236,"column":4},"end":{"line":3252,"column":5}},"870":{"start":{"line":3237,"column":6},"end":{"line":3251,"column":34}},"871":{"start":{"line":3254,"column":4},"end":{"line":3258,"column":5}},"872":{"start":{"line":3255,"column":6},"end":{"line":3255,"column":47}},"873":{"start":{"line":3256,"column":6},"end":{"line":3256,"column":35}},"874":{"start":{"line":3257,"column":6},"end":{"line":3257,"column":27}},"875":{"start":{"line":3260,"column":4},"end":{"line":3260,"column":22}},"876":{"start":{"line":3261,"column":4},"end":{"line":3263,"column":5}},"877":{"start":{"line":3262,"column":6},"end":{"line":3262,"column":38}},"878":{"start":{"line":3265,"column":4},"end":{"line":3265,"column":13}},"879":{"start":{"line":3266,"column":4},"end":{"line":3309,"column":5}},"880":{"start":{"line":3267,"column":6},"end":{"line":3277,"column":7}},"881":{"start":{"line":3268,"column":8},"end":{"line":3268,"column":70}},"882":{"start":{"line":3269,"column":8},"end":{"line":3269,"column":47}},"883":{"start":{"line":3271,"column":8},"end":{"line":3276,"column":9}},"884":{"start":{"line":3272,"column":10},"end":{"line":3272,"column":66}},"885":{"start":{"line":3274,"column":10},"end":{"line":3274,"column":64}},"886":{"start":{"line":3275,"column":10},"end":{"line":3275,"column":92}},"887":{"start":{"line":3278,"column":11},"end":{"line":3309,"column":5}},"888":{"start":{"line":3279,"column":6},"end":{"line":3289,"column":7}},"889":{"start":{"line":3280,"column":8},"end":{"line":3280,"column":69}},"890":{"start":{"line":3281,"column":8},"end":{"line":3281,"column":47}},"891":{"start":{"line":3283,"column":8},"end":{"line":3288,"column":9}},"892":{"start":{"line":3284,"column":10},"end":{"line":3284,"column":65}},"893":{"start":{"line":3286,"column":10},"end":{"line":3286,"column":63}},"894":{"start":{"line":3287,"column":10},"end":{"line":3287,"column":91}},"895":{"start":{"line":3290,"column":11},"end":{"line":3309,"column":5}},"896":{"start":{"line":3291,"column":6},"end":{"line":3291,"column":56}},"897":{"start":{"line":3292,"column":11},"end":{"line":3309,"column":5}},"898":{"start":{"line":3293,"column":6},"end":{"line":3293,"column":51}},"899":{"start":{"line":3294,"column":6},"end":{"line":3294,"column":73}},"900":{"start":{"line":3295,"column":6},"end":{"line":3295,"column":25}},"901":{"start":{"line":3296,"column":6},"end":{"line":3296,"column":37}},"902":{"start":{"line":3297,"column":6},"end":{"line":3297,"column":35}},"903":{"start":{"line":3298,"column":6},"end":{"line":3298,"column":39}},"904":{"start":{"line":3299,"column":6},"end":{"line":3299,"column":37}},"905":{"start":{"line":3300,"column":6},"end":{"line":3300,"column":39}},"906":{"start":{"line":3301,"column":6},"end":{"line":3301,"column":41}},"907":{"start":{"line":3302,"column":6},"end":{"line":3302,"column":35}},"908":{"start":{"line":3304,"column":6},"end":{"line":3304,"column":56}},"909":{"start":{"line":3305,"column":6},"end":{"line":3305,"column":17}},"910":{"start":{"line":3306,"column":6},"end":{"line":3306,"column":17}},"911":{"start":{"line":3307,"column":6},"end":{"line":3308,"column":79}},"912":{"start":{"line":3314,"column":4},"end":{"line":3314,"column":48}},"913":{"start":{"line":3316,"column":4},"end":{"line":3316,"column":22}},"914":{"start":{"line":3316,"column":15},"end":{"line":3316,"column":22}},"915":{"start":{"line":3318,"column":4},"end":{"line":3322,"column":42}},"916":{"start":{"line":3325,"column":4},"end":{"line":3325,"column":48}},"917":{"start":{"line":3326,"column":4},"end":{"line":3329,"column":6}},"918":{"start":{"line":3327,"column":6},"end":{"line":3327,"column":33}},"919":{"start":{"line":3328,"column":6},"end":{"line":3328,"column":59}},"920":{"start":{"line":3331,"column":4},"end":{"line":3335,"column":5}},"921":{"start":{"line":3332,"column":6},"end":{"line":3332,"column":34}},"922":{"start":{"line":3334,"column":6},"end":{"line":3334,"column":36}},"923":{"start":{"line":3337,"column":4},"end":{"line":3337,"column":88}},"924":{"start":{"line":3339,"column":4},"end":{"line":3339,"column":47}},"925":{"start":{"line":3341,"column":4},"end":{"line":3341,"column":31}},"926":{"start":{"line":3344,"column":2},"end":{"line":3360,"column":3}},"927":{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}},"928":{"start":{"line":3346,"column":6},"end":{"line":3346,"column":41}},"929":{"start":{"line":3348,"column":4},"end":{"line":3351,"column":5}},"930":{"start":{"line":3349,"column":6},"end":{"line":3349,"column":42}},"931":{"start":{"line":3350,"column":6},"end":{"line":3350,"column":19}},"932":{"start":{"line":3352,"column":4},"end":{"line":3357,"column":5}},"933":{"start":{"line":3353,"column":6},"end":{"line":3353,"column":48}},"934":{"start":{"line":3355,"column":6},"end":{"line":3355,"column":42}},"935":{"start":{"line":3356,"column":6},"end":{"line":3356,"column":19}},"936":{"start":{"line":3358,"column":4},"end":{"line":3358,"column":39}},"937":{"start":{"line":3359,"column":4},"end":{"line":3359,"column":16}},"938":{"start":{"line":3362,"column":2},"end":{"line":3373,"column":3}},"939":{"start":{"line":3363,"column":4},"end":{"line":3363,"column":43}},"940":{"start":{"line":3364,"column":4},"end":{"line":3364,"column":15}},"941":{"start":{"line":3365,"column":4},"end":{"line":3365,"column":15}},"942":{"start":{"line":3367,"column":4},"end":{"line":3367,"column":85}},"943":{"start":{"line":3368,"column":4},"end":{"line":3368,"column":57}},"944":{"start":{"line":3370,"column":4},"end":{"line":3370,"column":27}},"945":{"start":{"line":3372,"column":4},"end":{"line":3372,"column":16}},"946":{"start":{"line":3375,"column":2},"end":{"line":3393,"column":3}},"947":{"start":{"line":3376,"column":4},"end":{"line":3378,"column":5}},"948":{"start":{"line":3377,"column":6},"end":{"line":3377,"column":57}},"949":{"start":{"line":3379,"column":4},"end":{"line":3379,"column":56}},"950":{"start":{"line":3380,"column":4},"end":{"line":3380,"column":30}},"951":{"start":{"line":3381,"column":4},"end":{"line":3391,"column":5}},"952":{"start":{"line":3382,"column":6},"end":{"line":3383,"column":37}},"953":{"start":{"line":3384,"column":6},"end":{"line":3384,"column":32}},"954":{"start":{"line":3385,"column":6},"end":{"line":3387,"column":9}},"955":{"start":{"line":3386,"column":8},"end":{"line":3386,"column":59}},"956":{"start":{"line":3388,"column":6},"end":{"line":3388,"column":55}},"957":{"start":{"line":3389,"column":6},"end":{"line":3389,"column":38}},"958":{"start":{"line":3390,"column":6},"end":{"line":3390,"column":32}},"959":{"start":{"line":3392,"column":4},"end":{"line":3392,"column":55}},"960":{"start":{"line":3395,"column":2},"end":{"line":3408,"column":3}},"961":{"start":{"line":3396,"column":4},"end":{"line":3396,"column":21}},"962":{"start":{"line":3398,"column":4},"end":{"line":3398,"column":48}},"963":{"start":{"line":3399,"column":4},"end":{"line":3402,"column":6}},"964":{"start":{"line":3400,"column":6},"end":{"line":3400,"column":18}},"965":{"start":{"line":3401,"column":6},"end":{"line":3401,"column":46}},"966":{"start":{"line":3403,"column":4},"end":{"line":3403,"column":47}},"967":{"start":{"line":3404,"column":4},"end":{"line":3407,"column":54}},"968":{"start":{"line":3405,"column":6},"end":{"line":3405,"column":34}},"969":{"start":{"line":3410,"column":2},"end":{"line":3413,"column":3}},"970":{"start":{"line":3411,"column":4},"end":{"line":3411,"column":27}},"971":{"start":{"line":3412,"column":4},"end":{"line":3412,"column":86}},"972":{"start":{"line":3412,"column":62},"end":{"line":3412,"column":82}},"973":{"start":{"line":3415,"column":2},"end":{"line":3422,"column":3}},"974":{"start":{"line":3416,"column":4},"end":{"line":3420,"column":5}},"975":{"start":{"line":3417,"column":8},"end":{"line":3419,"column":9}},"976":{"start":{"line":3418,"column":12},"end":{"line":3418,"column":24}},"977":{"start":{"line":3421,"column":4},"end":{"line":3421,"column":17}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]},"4":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":41}},{"start":{"line":77,"column":45},"end":{"line":77,"column":78}}]},"5":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":17}},{"start":{"line":97,"column":21},"end":{"line":97,"column":22}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"8":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"9":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"10":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":11},"end":{"line":153,"column":34}},{"start":{"line":153,"column":38},"end":{"line":153,"column":74}}]},"11":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"12":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"13":{"line":268,"type":"switch","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":17}},{"start":{"line":270,"column":6},"end":{"line":283,"column":14}},{"start":{"line":284,"column":6},"end":{"line":285,"column":102}}]},"14":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":10},"end":{"line":273,"column":10}},{"start":{"line":273,"column":10},"end":{"line":273,"column":10}}]},"15":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":10},"end":{"line":278,"column":10}},{"start":{"line":278,"column":10},"end":{"line":278,"column":10}}]},"16":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"17":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":8}},{"start":{"line":330,"column":8},"end":{"line":330,"column":8}}]},"18":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":25},"end":{"line":430,"column":38}},{"start":{"line":430,"column":42},"end":{"line":430,"column":44}}]},"19":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":6},"end":{"line":434,"column":6}},{"start":{"line":434,"column":6},"end":{"line":434,"column":6}}]},"20":{"line":477,"type":"cond-expr","locations":[{"start":{"line":477,"column":29},"end":{"line":477,"column":69}},{"start":{"line":477,"column":72},"end":{"line":477,"column":74}}]},"21":{"line":479,"type":"binary-expr","locations":[{"start":{"line":479,"column":23},"end":{"line":479,"column":53}},{"start":{"line":479,"column":57},"end":{"line":479,"column":69}}]},"22":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":34},"end":{"line":480,"column":37}},{"start":{"line":480,"column":40},"end":{"line":480,"column":42}}]},"23":{"line":483,"type":"cond-expr","locations":[{"start":{"line":483,"column":43},"end":{"line":483,"column":48}},{"start":{"line":483,"column":51},"end":{"line":483,"column":52}}]},"24":{"line":484,"type":"cond-expr","locations":[{"start":{"line":484,"column":55},"end":{"line":484,"column":57}},{"start":{"line":484,"column":60},"end":{"line":486,"column":7}}]},"25":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":8},"end":{"line":493,"column":8}},{"start":{"line":493,"column":8},"end":{"line":493,"column":8}}]},"26":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":12},"end":{"line":493,"column":21}},{"start":{"line":493,"column":25},"end":{"line":493,"column":43}}]},"27":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":12},"end":{"line":498,"column":12}},{"start":{"line":498,"column":12},"end":{"line":498,"column":12}}]},"28":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":10},"end":{"line":501,"column":10}},{"start":{"line":501,"column":10},"end":{"line":501,"column":10}}]},"29":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":8},"end":{"line":506,"column":8}},{"start":{"line":506,"column":8},"end":{"line":506,"column":8}}]},"30":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":6},"end":{"line":536,"column":6}},{"start":{"line":536,"column":6},"end":{"line":536,"column":6}}]},"31":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":8},"end":{"line":540,"column":8}},{"start":{"line":540,"column":8},"end":{"line":540,"column":8}}]},"32":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":6},"end":{"line":543,"column":6}},{"start":{"line":543,"column":6},"end":{"line":543,"column":6}}]},"33":{"line":566,"type":"binary-expr","locations":[{"start":{"line":566,"column":13},"end":{"line":566,"column":29}},{"start":{"line":566,"column":33},"end":{"line":566,"column":61}}]},"34":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":586,"column":2}},{"start":{"line":586,"column":2},"end":{"line":586,"column":2}}]},"35":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":590,"column":4}},{"start":{"line":590,"column":4},"end":{"line":590,"column":4}}]},"36":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":27},"end":{"line":595,"column":35}},{"start":{"line":595,"column":39},"end":{"line":595,"column":40}}]},"37":{"line":596,"type":"binary-expr","locations":[{"start":{"line":596,"column":27},"end":{"line":596,"column":35}},{"start":{"line":596,"column":39},"end":{"line":596,"column":40}}]},"38":{"line":597,"type":"binary-expr","locations":[{"start":{"line":597,"column":27},"end":{"line":597,"column":35}},{"start":{"line":597,"column":39},"end":{"line":597,"column":40}}]},"39":{"line":598,"type":"binary-expr","locations":[{"start":{"line":598,"column":27},"end":{"line":598,"column":35}},{"start":{"line":598,"column":39},"end":{"line":598,"column":40}}]},"40":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":2},"end":{"line":610,"column":2}},{"start":{"line":610,"column":2},"end":{"line":610,"column":2}}]},"41":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":2},"end":{"line":616,"column":2}},{"start":{"line":616,"column":2},"end":{"line":616,"column":2}}]},"42":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":2},"end":{"line":662,"column":2}},{"start":{"line":662,"column":2},"end":{"line":662,"column":2}}]},"43":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":4},"end":{"line":668,"column":4}},{"start":{"line":668,"column":4},"end":{"line":668,"column":4}}]},"44":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":2},"end":{"line":756,"column":2}},{"start":{"line":756,"column":2},"end":{"line":756,"column":2}}]},"45":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":8},"end":{"line":820,"column":8}},{"start":{"line":820,"column":8},"end":{"line":820,"column":8}}]},"46":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":8},"end":{"line":838,"column":8}},{"start":{"line":838,"column":8},"end":{"line":838,"column":8}}]},"47":{"line":922,"type":"if","locations":[{"start":{"line":922,"column":12},"end":{"line":922,"column":12}},{"start":{"line":922,"column":12},"end":{"line":922,"column":12}}]},"48":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":12},"end":{"line":927,"column":12}},{"start":{"line":927,"column":12},"end":{"line":927,"column":12}}]},"49":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":10},"end":{"line":932,"column":10}},{"start":{"line":932,"column":10},"end":{"line":932,"column":10}}]},"50":{"line":932,"type":"binary-expr","locations":[{"start":{"line":932,"column":14},"end":{"line":932,"column":31}},{"start":{"line":932,"column":35},"end":{"line":932,"column":46}}]},"51":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"52":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":11},"end":{"line":985,"column":11}},{"start":{"line":985,"column":11},"end":{"line":985,"column":11}}]},"53":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":11},"end":{"line":991,"column":11}},{"start":{"line":991,"column":11},"end":{"line":991,"column":11}}]},"54":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":6},"end":{"line":992,"column":6}},{"start":{"line":992,"column":6},"end":{"line":992,"column":6}}]},"55":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":10},"end":{"line":992,"column":42}},{"start":{"line":992,"column":46},"end":{"line":992,"column":79}}]},"56":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":13},"end":{"line":994,"column":13}},{"start":{"line":994,"column":13},"end":{"line":994,"column":13}}]},"57":{"line":995,"type":"binary-expr","locations":[{"start":{"line":995,"column":14},"end":{"line":995,"column":26}},{"start":{"line":995,"column":31},"end":{"line":995,"column":71}}]},"58":{"line":1009,"type":"binary-expr","locations":[{"start":{"line":1009,"column":13},"end":{"line":1009,"column":19}},{"start":{"line":1009,"column":24},"end":{"line":1009,"column":28}}]},"59":{"line":1012,"type":"if","locations":[{"start":{"line":1012,"column":6},"end":{"line":1012,"column":6}},{"start":{"line":1012,"column":6},"end":{"line":1012,"column":6}}]},"60":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":10},"end":{"line":1012,"column":58}},{"start":{"line":1012,"column":62},"end":{"line":1012,"column":86}}]},"61":{"line":1351,"type":"binary-expr","locations":[{"start":{"line":1351,"column":28},"end":{"line":1351,"column":59}},{"start":{"line":1351,"column":63},"end":{"line":1351,"column":72}}]},"62":{"line":1354,"type":"if","locations":[{"start":{"line":1354,"column":4},"end":{"line":1354,"column":4}},{"start":{"line":1354,"column":4},"end":{"line":1354,"column":4}}]},"63":{"line":1357,"type":"cond-expr","locations":[{"start":{"line":1358,"column":12},"end":{"line":1358,"column":47}},{"start":{"line":1359,"column":12},"end":{"line":1359,"column":40}}]},"64":{"line":1374,"type":"cond-expr","locations":[{"start":{"line":1375,"column":12},"end":{"line":1375,"column":16}},{"start":{"line":1376,"column":12},"end":{"line":1376,"column":32}}]},"65":{"line":1374,"type":"binary-expr","locations":[{"start":{"line":1374,"column":14},"end":{"line":1374,"column":36}},{"start":{"line":1374,"column":40},"end":{"line":1374,"column":64}},{"start":{"line":1374,"column":68},"end":{"line":1374,"column":90}}]},"66":{"line":1380,"type":"if","locations":[{"start":{"line":1380,"column":6},"end":{"line":1380,"column":6}},{"start":{"line":1380,"column":6},"end":{"line":1380,"column":6}}]},"67":{"line":1380,"type":"binary-expr","locations":[{"start":{"line":1380,"column":10},"end":{"line":1380,"column":19}},{"start":{"line":1380,"column":23},"end":{"line":1380,"column":30}}]},"68":{"line":1381,"type":"if","locations":[{"start":{"line":1381,"column":8},"end":{"line":1381,"column":8}},{"start":{"line":1381,"column":8},"end":{"line":1381,"column":8}}]},"69":{"line":1394,"type":"binary-expr","locations":[{"start":{"line":1394,"column":22},"end":{"line":1394,"column":33}},{"start":{"line":1394,"column":37},"end":{"line":1394,"column":39}}]},"70":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":10},"end":{"line":1399,"column":10}},{"start":{"line":1399,"column":10},"end":{"line":1399,"column":10}}]},"71":{"line":1408,"type":"if","locations":[{"start":{"line":1408,"column":4},"end":{"line":1408,"column":4}},{"start":{"line":1408,"column":4},"end":{"line":1408,"column":4}}]},"72":{"line":1408,"type":"binary-expr","locations":[{"start":{"line":1408,"column":8},"end":{"line":1408,"column":19}},{"start":{"line":1408,"column":23},"end":{"line":1408,"column":53}}]},"73":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":6},"end":{"line":1409,"column":6}},{"start":{"line":1409,"column":6},"end":{"line":1409,"column":6}}]},"74":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":6},"end":{"line":1414,"column":6}},{"start":{"line":1414,"column":6},"end":{"line":1414,"column":6}}]},"75":{"line":1422,"type":"if","locations":[{"start":{"line":1422,"column":6},"end":{"line":1422,"column":6}},{"start":{"line":1422,"column":6},"end":{"line":1422,"column":6}}]},"76":{"line":1431,"type":"if","locations":[{"start":{"line":1431,"column":6},"end":{"line":1431,"column":6}},{"start":{"line":1431,"column":6},"end":{"line":1431,"column":6}}]},"77":{"line":1431,"type":"binary-expr","locations":[{"start":{"line":1431,"column":46},"end":{"line":1431,"column":53}},{"start":{"line":1431,"column":57},"end":{"line":1431,"column":59}}]},"78":{"line":1432,"type":"if","locations":[{"start":{"line":1432,"column":8},"end":{"line":1432,"column":8}},{"start":{"line":1432,"column":8},"end":{"line":1432,"column":8}}]},"79":{"line":1434,"type":"cond-expr","locations":[{"start":{"line":1434,"column":22},"end":{"line":1434,"column":36}},{"start":{"line":1434,"column":39},"end":{"line":1434,"column":52}}]},"80":{"line":1435,"type":"if","locations":[{"start":{"line":1435,"column":15},"end":{"line":1435,"column":15}},{"start":{"line":1435,"column":15},"end":{"line":1435,"column":15}}]},"81":{"line":1441,"type":"cond-expr","locations":[{"start":{"line":1442,"column":8},"end":{"line":1442,"column":42}},{"start":{"line":1443,"column":8},"end":{"line":1444,"column":89}}]},"82":{"line":1444,"type":"cond-expr","locations":[{"start":{"line":1444,"column":33},"end":{"line":1444,"column":58}},{"start":{"line":1444,"column":61},"end":{"line":1444,"column":87}}]},"83":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":4},"end":{"line":1488,"column":4}},{"start":{"line":1488,"column":4},"end":{"line":1488,"column":4}}]},"84":{"line":1617,"type":"if","locations":[{"start":{"line":1617,"column":4},"end":{"line":1617,"column":4}},{"start":{"line":1617,"column":4},"end":{"line":1617,"column":4}}]},"85":{"line":1617,"type":"binary-expr","locations":[{"start":{"line":1617,"column":8},"end":{"line":1617,"column":12}},{"start":{"line":1617,"column":16},"end":{"line":1617,"column":38}}]},"86":{"line":1622,"type":"cond-expr","locations":[{"start":{"line":1622,"column":40},"end":{"line":1622,"column":46}},{"start":{"line":1622,"column":49},"end":{"line":1622,"column":53}}]},"87":{"line":1623,"type":"cond-expr","locations":[{"start":{"line":1623,"column":36},"end":{"line":1623,"column":42}},{"start":{"line":1623,"column":45},"end":{"line":1623,"column":49}}]},"88":{"line":1625,"type":"binary-expr","locations":[{"start":{"line":1625,"column":16},"end":{"line":1625,"column":21}},{"start":{"line":1625,"column":25},"end":{"line":1625,"column":27}}]},"89":{"line":1627,"type":"cond-expr","locations":[{"start":{"line":1627,"column":24},"end":{"line":1627,"column":26}},{"start":{"line":1627,"column":29},"end":{"line":1627,"column":34}}]},"90":{"line":1629,"type":"cond-expr","locations":[{"start":{"line":1629,"column":24},"end":{"line":1629,"column":29}},{"start":{"line":1629,"column":32},"end":{"line":1629,"column":34}}]},"91":{"line":1630,"type":"binary-expr","locations":[{"start":{"line":1630,"column":13},"end":{"line":1630,"column":17}},{"start":{"line":1630,"column":21},"end":{"line":1630,"column":28}},{"start":{"line":1630,"column":32},"end":{"line":1630,"column":41}}]},"92":{"line":1631,"type":"binary-expr","locations":[{"start":{"line":1631,"column":13},"end":{"line":1631,"column":21}},{"start":{"line":1631,"column":25},"end":{"line":1631,"column":27}}]},"93":{"line":1633,"type":"binary-expr","locations":[{"start":{"line":1633,"column":13},"end":{"line":1633,"column":21}},{"start":{"line":1633,"column":25},"end":{"line":1633,"column":27}}]},"94":{"line":1836,"type":"if","locations":[{"start":{"line":1836,"column":4},"end":{"line":1836,"column":4}},{"start":{"line":1836,"column":4},"end":{"line":1836,"column":4}}]},"95":{"line":1838,"type":"binary-expr","locations":[{"start":{"line":1838,"column":11},"end":{"line":1838,"column":15}},{"start":{"line":1838,"column":19},"end":{"line":1838,"column":20}}]},"96":{"line":1839,"type":"if","locations":[{"start":{"line":1839,"column":4},"end":{"line":1839,"column":4}},{"start":{"line":1839,"column":4},"end":{"line":1839,"column":4}}]},"97":{"line":1841,"type":"if","locations":[{"start":{"line":1841,"column":4},"end":{"line":1841,"column":4}},{"start":{"line":1841,"column":4},"end":{"line":1841,"column":4}}]},"98":{"line":1841,"type":"binary-expr","locations":[{"start":{"line":1841,"column":8},"end":{"line":1841,"column":32}},{"start":{"line":1841,"column":36},"end":{"line":1841,"column":50}}]},"99":{"line":1844,"type":"if","locations":[{"start":{"line":1844,"column":8},"end":{"line":1844,"column":8}},{"start":{"line":1844,"column":8},"end":{"line":1844,"column":8}}]},"100":{"line":1871,"type":"if","locations":[{"start":{"line":1871,"column":4},"end":{"line":1871,"column":4}},{"start":{"line":1871,"column":4},"end":{"line":1871,"column":4}}]},"101":{"line":1872,"type":"if","locations":[{"start":{"line":1872,"column":4},"end":{"line":1872,"column":4}},{"start":{"line":1872,"column":4},"end":{"line":1872,"column":4}}]},"102":{"line":1892,"type":"if","locations":[{"start":{"line":1892,"column":4},"end":{"line":1892,"column":4}},{"start":{"line":1892,"column":4},"end":{"line":1892,"column":4}}]},"103":{"line":1893,"type":"if","locations":[{"start":{"line":1893,"column":4},"end":{"line":1893,"column":4}},{"start":{"line":1893,"column":4},"end":{"line":1893,"column":4}}]},"104":{"line":1923,"type":"if","locations":[{"start":{"line":1923,"column":8},"end":{"line":1923,"column":8}},{"start":{"line":1923,"column":8},"end":{"line":1923,"column":8}}]},"105":{"line":1934,"type":"if","locations":[{"start":{"line":1934,"column":8},"end":{"line":1934,"column":8}},{"start":{"line":1934,"column":8},"end":{"line":1934,"column":8}}]},"106":{"line":1943,"type":"if","locations":[{"start":{"line":1943,"column":2},"end":{"line":1943,"column":2}},{"start":{"line":1943,"column":2},"end":{"line":1943,"column":2}}]},"107":{"line":1943,"type":"binary-expr","locations":[{"start":{"line":1943,"column":6},"end":{"line":1943,"column":25}},{"start":{"line":1943,"column":29},"end":{"line":1943,"column":61}}]},"108":{"line":1957,"type":"binary-expr","locations":[{"start":{"line":1957,"column":12},"end":{"line":1957,"column":73}},{"start":{"line":1958,"column":6},"end":{"line":1958,"column":57}}]},"109":{"line":1965,"type":"if","locations":[{"start":{"line":1965,"column":4},"end":{"line":1965,"column":4}},{"start":{"line":1965,"column":4},"end":{"line":1965,"column":4}}]},"110":{"line":1966,"type":"if","locations":[{"start":{"line":1966,"column":4},"end":{"line":1966,"column":4}},{"start":{"line":1966,"column":4},"end":{"line":1966,"column":4}}]},"111":{"line":1967,"type":"if","locations":[{"start":{"line":1967,"column":4},"end":{"line":1967,"column":4}},{"start":{"line":1967,"column":4},"end":{"line":1967,"column":4}}]},"112":{"line":1967,"type":"binary-expr","locations":[{"start":{"line":1967,"column":8},"end":{"line":1967,"column":28}},{"start":{"line":1967,"column":32},"end":{"line":1967,"column":50}}]},"113":{"line":1968,"type":"if","locations":[{"start":{"line":1968,"column":4},"end":{"line":1968,"column":4}},{"start":{"line":1968,"column":4},"end":{"line":1968,"column":4}}]},"114":{"line":1968,"type":"binary-expr","locations":[{"start":{"line":1968,"column":8},"end":{"line":1968,"column":28}},{"start":{"line":1968,"column":32},"end":{"line":1968,"column":53}}]},"115":{"line":1973,"type":"if","locations":[{"start":{"line":1973,"column":4},"end":{"line":1973,"column":4}},{"start":{"line":1973,"column":4},"end":{"line":1973,"column":4}}]},"116":{"line":1974,"type":"if","locations":[{"start":{"line":1974,"column":4},"end":{"line":1974,"column":4}},{"start":{"line":1974,"column":4},"end":{"line":1974,"column":4}}]},"117":{"line":1975,"type":"if","locations":[{"start":{"line":1975,"column":4},"end":{"line":1975,"column":4}},{"start":{"line":1975,"column":4},"end":{"line":1975,"column":4}}]},"118":{"line":1976,"type":"binary-expr","locations":[{"start":{"line":1976,"column":12},"end":{"line":1976,"column":21}},{"start":{"line":1976,"column":25},"end":{"line":1976,"column":38}}]},"119":{"line":1980,"type":"if","locations":[{"start":{"line":1980,"column":4},"end":{"line":1980,"column":4}},{"start":{"line":1980,"column":4},"end":{"line":1980,"column":4}}]},"120":{"line":1981,"type":"if","locations":[{"start":{"line":1981,"column":4},"end":{"line":1981,"column":4}},{"start":{"line":1981,"column":4},"end":{"line":1981,"column":4}}]},"121":{"line":1986,"type":"if","locations":[{"start":{"line":1986,"column":4},"end":{"line":1986,"column":4}},{"start":{"line":1986,"column":4},"end":{"line":1986,"column":4}}]},"122":{"line":1987,"type":"if","locations":[{"start":{"line":1987,"column":4},"end":{"line":1987,"column":4}},{"start":{"line":1987,"column":4},"end":{"line":1987,"column":4}}]},"123":{"line":1987,"type":"binary-expr","locations":[{"start":{"line":1987,"column":8},"end":{"line":1987,"column":12}},{"start":{"line":1987,"column":16},"end":{"line":1987,"column":45}}]},"124":{"line":1988,"type":"if","locations":[{"start":{"line":1988,"column":4},"end":{"line":1988,"column":4}},{"start":{"line":1988,"column":4},"end":{"line":1988,"column":4}}]},"125":{"line":1988,"type":"binary-expr","locations":[{"start":{"line":1988,"column":8},"end":{"line":1988,"column":12}},{"start":{"line":1988,"column":16},"end":{"line":1988,"column":40}}]},"126":{"line":1989,"type":"if","locations":[{"start":{"line":1989,"column":4},"end":{"line":1989,"column":4}},{"start":{"line":1989,"column":4},"end":{"line":1989,"column":4}}]},"127":{"line":1989,"type":"binary-expr","locations":[{"start":{"line":1989,"column":8},"end":{"line":1989,"column":12}},{"start":{"line":1989,"column":16},"end":{"line":1989,"column":39}}]},"128":{"line":2005,"type":"if","locations":[{"start":{"line":2005,"column":6},"end":{"line":2005,"column":6}},{"start":{"line":2005,"column":6},"end":{"line":2005,"column":6}}]},"129":{"line":2005,"type":"binary-expr","locations":[{"start":{"line":2005,"column":10},"end":{"line":2005,"column":14}},{"start":{"line":2005,"column":18},"end":{"line":2005,"column":47}},{"start":{"line":2005,"column":51},"end":{"line":2005,"column":56}},{"start":{"line":2005,"column":60},"end":{"line":2005,"column":77}}]},"130":{"line":2008,"type":"if","locations":[{"start":{"line":2008,"column":6},"end":{"line":2008,"column":6}},{"start":{"line":2008,"column":6},"end":{"line":2008,"column":6}}]},"131":{"line":2012,"type":"if","locations":[{"start":{"line":2012,"column":8},"end":{"line":2012,"column":8}},{"start":{"line":2012,"column":8},"end":{"line":2012,"column":8}}]},"132":{"line":2012,"type":"binary-expr","locations":[{"start":{"line":2012,"column":12},"end":{"line":2012,"column":15}},{"start":{"line":2012,"column":19},"end":{"line":2012,"column":22}}]},"133":{"line":2013,"type":"binary-expr","locations":[{"start":{"line":2013,"column":17},"end":{"line":2013,"column":25}},{"start":{"line":2013,"column":29},"end":{"line":2013,"column":32}}]},"134":{"line":2022,"type":"cond-expr","locations":[{"start":{"line":2023,"column":12},"end":{"line":2023,"column":43}},{"start":{"line":2024,"column":12},"end":{"line":2024,"column":14}}]},"135":{"line":2027,"type":"if","locations":[{"start":{"line":2027,"column":8},"end":{"line":2027,"column":8}},{"start":{"line":2027,"column":8},"end":{"line":2027,"column":8}}]},"136":{"line":2030,"type":"if","locations":[{"start":{"line":2030,"column":10},"end":{"line":2030,"column":10}},{"start":{"line":2030,"column":10},"end":{"line":2030,"column":10}}]},"137":{"line":2031,"type":"cond-expr","locations":[{"start":{"line":2031,"column":56},"end":{"line":2031,"column":91}},{"start":{"line":2031,"column":94},"end":{"line":2031,"column":98}}]},"138":{"line":2032,"type":"if","locations":[{"start":{"line":2032,"column":12},"end":{"line":2032,"column":12}},{"start":{"line":2032,"column":12},"end":{"line":2032,"column":12}}]},"139":{"line":2034,"type":"if","locations":[{"start":{"line":2034,"column":19},"end":{"line":2034,"column":19}},{"start":{"line":2034,"column":19},"end":{"line":2034,"column":19}}]},"140":{"line":2083,"type":"if","locations":[{"start":{"line":2083,"column":4},"end":{"line":2083,"column":4}},{"start":{"line":2083,"column":4},"end":{"line":2083,"column":4}}]},"141":{"line":2087,"type":"if","locations":[{"start":{"line":2087,"column":4},"end":{"line":2087,"column":4}},{"start":{"line":2087,"column":4},"end":{"line":2087,"column":4}}]},"142":{"line":2091,"type":"if","locations":[{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}},{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}}]},"143":{"line":2091,"type":"binary-expr","locations":[{"start":{"line":2091,"column":10},"end":{"line":2091,"column":17}},{"start":{"line":2091,"column":21},"end":{"line":2091,"column":59}}]},"144":{"line":2112,"type":"if","locations":[{"start":{"line":2112,"column":4},"end":{"line":2112,"column":4}},{"start":{"line":2112,"column":4},"end":{"line":2112,"column":4}}]},"145":{"line":2155,"type":"if","locations":[{"start":{"line":2155,"column":4},"end":{"line":2155,"column":4}},{"start":{"line":2155,"column":4},"end":{"line":2155,"column":4}}]},"146":{"line":2186,"type":"if","locations":[{"start":{"line":2186,"column":4},"end":{"line":2186,"column":4}},{"start":{"line":2186,"column":4},"end":{"line":2186,"column":4}}]},"147":{"line":2284,"type":"if","locations":[{"start":{"line":2284,"column":6},"end":{"line":2284,"column":6}},{"start":{"line":2284,"column":6},"end":{"line":2284,"column":6}}]},"148":{"line":2284,"type":"binary-expr","locations":[{"start":{"line":2284,"column":10},"end":{"line":2284,"column":15}},{"start":{"line":2284,"column":19},"end":{"line":2284,"column":44}}]},"149":{"line":2288,"type":"if","locations":[{"start":{"line":2288,"column":8},"end":{"line":2288,"column":8}},{"start":{"line":2288,"column":8},"end":{"line":2288,"column":8}}]},"150":{"line":2293,"type":"if","locations":[{"start":{"line":2293,"column":8},"end":{"line":2293,"column":8}},{"start":{"line":2293,"column":8},"end":{"line":2293,"column":8}}]},"151":{"line":2293,"type":"binary-expr","locations":[{"start":{"line":2293,"column":12},"end":{"line":2293,"column":37}},{"start":{"line":2293,"column":41},"end":{"line":2293,"column":74}}]},"152":{"line":2341,"type":"binary-expr","locations":[{"start":{"line":2341,"column":15},"end":{"line":2341,"column":39}},{"start":{"line":2341,"column":43},"end":{"line":2341,"column":69}},{"start":{"line":2341,"column":73},"end":{"line":2341,"column":103}}]},"153":{"line":2344,"type":"if","locations":[{"start":{"line":2344,"column":6},"end":{"line":2344,"column":6}},{"start":{"line":2344,"column":6},"end":{"line":2344,"column":6}}]},"154":{"line":2347,"type":"if","locations":[{"start":{"line":2347,"column":6},"end":{"line":2347,"column":6}},{"start":{"line":2347,"column":6},"end":{"line":2347,"column":6}}]},"155":{"line":2353,"type":"binary-expr","locations":[{"start":{"line":2353,"column":15},"end":{"line":2353,"column":21}},{"start":{"line":2353,"column":25},"end":{"line":2353,"column":27}}]},"156":{"line":2354,"type":"binary-expr","locations":[{"start":{"line":2354,"column":22},"end":{"line":2354,"column":35}},{"start":{"line":2354,"column":39},"end":{"line":2354,"column":60}}]},"157":{"line":2355,"type":"binary-expr","locations":[{"start":{"line":2355,"column":69},"end":{"line":2355,"column":74}},{"start":{"line":2355,"column":78},"end":{"line":2355,"column":104}}]},"158":{"line":2793,"type":"cond-expr","locations":[{"start":{"line":2793,"column":34},"end":{"line":2793,"column":56}},{"start":{"line":2793,"column":59},"end":{"line":2793,"column":60}}]},"159":{"line":2801,"type":"cond-expr","locations":[{"start":{"line":2801,"column":43},"end":{"line":2801,"column":73}},{"start":{"line":2801,"column":76},"end":{"line":2801,"column":77}}]},"160":{"line":2814,"type":"if","locations":[{"start":{"line":2814,"column":2},"end":{"line":2814,"column":2}},{"start":{"line":2814,"column":2},"end":{"line":2814,"column":2}}]},"161":{"line":2827,"type":"if","locations":[{"start":{"line":2827,"column":4},"end":{"line":2827,"column":4}},{"start":{"line":2827,"column":4},"end":{"line":2827,"column":4}}]},"162":{"line":2827,"type":"binary-expr","locations":[{"start":{"line":2827,"column":8},"end":{"line":2827,"column":32}},{"start":{"line":2827,"column":36},"end":{"line":2827,"column":47}}]},"163":{"line":2855,"type":"cond-expr","locations":[{"start":{"line":2855,"column":34},"end":{"line":2855,"column":42}},{"start":{"line":2855,"column":45},"end":{"line":2855,"column":51}}]},"164":{"line":2858,"type":"if","locations":[{"start":{"line":2858,"column":6},"end":{"line":2858,"column":6}},{"start":{"line":2858,"column":6},"end":{"line":2858,"column":6}}]},"165":{"line":2861,"type":"binary-expr","locations":[{"start":{"line":2861,"column":26},"end":{"line":2861,"column":46}},{"start":{"line":2861,"column":51},"end":{"line":2861,"column":76}}]},"166":{"line":2863,"type":"if","locations":[{"start":{"line":2863,"column":10},"end":{"line":2863,"column":10}},{"start":{"line":2863,"column":10},"end":{"line":2863,"column":10}}]},"167":{"line":2863,"type":"binary-expr","locations":[{"start":{"line":2863,"column":14},"end":{"line":2863,"column":38}},{"start":{"line":2863,"column":42},"end":{"line":2863,"column":66}}]},"168":{"line":2872,"type":"if","locations":[{"start":{"line":2872,"column":10},"end":{"line":2872,"column":10}},{"start":{"line":2872,"column":10},"end":{"line":2872,"column":10}}]},"169":{"line":2882,"type":"binary-expr","locations":[{"start":{"line":2882,"column":28},"end":{"line":2882,"column":41}},{"start":{"line":2882,"column":45},"end":{"line":2882,"column":61}}]},"170":{"line":2883,"type":"binary-expr","locations":[{"start":{"line":2883,"column":27},"end":{"line":2883,"column":39}},{"start":{"line":2883,"column":43},"end":{"line":2883,"column":58}}]},"171":{"line":2887,"type":"if","locations":[{"start":{"line":2887,"column":4},"end":{"line":2887,"column":4}},{"start":{"line":2887,"column":4},"end":{"line":2887,"column":4}}]},"172":{"line":2944,"type":"if","locations":[{"start":{"line":2944,"column":4},"end":{"line":2944,"column":4}},{"start":{"line":2944,"column":4},"end":{"line":2944,"column":4}}]},"173":{"line":2944,"type":"binary-expr","locations":[{"start":{"line":2944,"column":10},"end":{"line":2944,"column":32}},{"start":{"line":2944,"column":36},"end":{"line":2944,"column":57}}]},"174":{"line":2951,"type":"if","locations":[{"start":{"line":2951,"column":6},"end":{"line":2951,"column":6}},{"start":{"line":2951,"column":6},"end":{"line":2951,"column":6}}]},"175":{"line":2961,"type":"if","locations":[{"start":{"line":2961,"column":6},"end":{"line":2961,"column":6}},{"start":{"line":2961,"column":6},"end":{"line":2961,"column":6}}]},"176":{"line":2971,"type":"if","locations":[{"start":{"line":2971,"column":4},"end":{"line":2971,"column":4}},{"start":{"line":2971,"column":4},"end":{"line":2971,"column":4}}]},"177":{"line":2971,"type":"binary-expr","locations":[{"start":{"line":2971,"column":8},"end":{"line":2971,"column":28}},{"start":{"line":2971,"column":32},"end":{"line":2971,"column":43}},{"start":{"line":2971,"column":47},"end":{"line":2971,"column":67}}]},"178":{"line":2986,"type":"if","locations":[{"start":{"line":2986,"column":4},"end":{"line":2986,"column":4}},{"start":{"line":2986,"column":4},"end":{"line":2986,"column":4}}]},"179":{"line":3003,"type":"if","locations":[{"start":{"line":3003,"column":4},"end":{"line":3003,"column":4}},{"start":{"line":3003,"column":4},"end":{"line":3003,"column":4}}]},"180":{"line":3006,"type":"binary-expr","locations":[{"start":{"line":3006,"column":21},"end":{"line":3006,"column":33}},{"start":{"line":3006,"column":37},"end":{"line":3006,"column":52}}]},"181":{"line":3007,"type":"cond-expr","locations":[{"start":{"line":3007,"column":48},"end":{"line":3007,"column":50}},{"start":{"line":3007,"column":53},"end":{"line":3007,"column":77}}]},"182":{"line":3008,"type":"if","locations":[{"start":{"line":3008,"column":6},"end":{"line":3008,"column":6}},{"start":{"line":3008,"column":6},"end":{"line":3008,"column":6}}]},"183":{"line":3008,"type":"binary-expr","locations":[{"start":{"line":3008,"column":10},"end":{"line":3008,"column":18}},{"start":{"line":3008,"column":23},"end":{"line":3008,"column":43}},{"start":{"line":3008,"column":47},"end":{"line":3008,"column":82}}]},"184":{"line":3016,"type":"if","locations":[{"start":{"line":3016,"column":6},"end":{"line":3016,"column":6}},{"start":{"line":3016,"column":6},"end":{"line":3016,"column":6}}]},"185":{"line":3016,"type":"binary-expr","locations":[{"start":{"line":3016,"column":10},"end":{"line":3016,"column":20}},{"start":{"line":3016,"column":24},"end":{"line":3016,"column":43}}]},"186":{"line":3032,"type":"binary-expr","locations":[{"start":{"line":3032,"column":3},"end":{"line":3032,"column":20}},{"start":{"line":3032,"column":24},"end":{"line":3032,"column":36}}]},"187":{"line":3033,"type":"binary-expr","locations":[{"start":{"line":3033,"column":3},"end":{"line":3033,"column":19}},{"start":{"line":3033,"column":23},"end":{"line":3033,"column":38}}]},"188":{"line":3126,"type":"if","locations":[{"start":{"line":3126,"column":4},"end":{"line":3126,"column":4}},{"start":{"line":3126,"column":4},"end":{"line":3126,"column":4}}]},"189":{"line":3127,"type":"if","locations":[{"start":{"line":3127,"column":4},"end":{"line":3127,"column":4}},{"start":{"line":3127,"column":4},"end":{"line":3127,"column":4}}]},"190":{"line":3128,"type":"if","locations":[{"start":{"line":3128,"column":4},"end":{"line":3128,"column":4}},{"start":{"line":3128,"column":4},"end":{"line":3128,"column":4}}]},"191":{"line":3128,"type":"binary-expr","locations":[{"start":{"line":3128,"column":8},"end":{"line":3128,"column":15}},{"start":{"line":3128,"column":19},"end":{"line":3128,"column":32}}]},"192":{"line":3130,"type":"if","locations":[{"start":{"line":3130,"column":4},"end":{"line":3130,"column":4}},{"start":{"line":3130,"column":4},"end":{"line":3130,"column":4}}]},"193":{"line":3138,"type":"if","locations":[{"start":{"line":3138,"column":4},"end":{"line":3138,"column":4}},{"start":{"line":3138,"column":4},"end":{"line":3138,"column":4}}]},"194":{"line":3143,"type":"cond-expr","locations":[{"start":{"line":3143,"column":34},"end":{"line":3143,"column":58}},{"start":{"line":3143,"column":61},"end":{"line":3143,"column":67}}]},"195":{"line":3146,"type":"binary-expr","locations":[{"start":{"line":3146,"column":20},"end":{"line":3146,"column":40}},{"start":{"line":3146,"column":44},"end":{"line":3146,"column":46}}]},"196":{"line":3154,"type":"if","locations":[{"start":{"line":3154,"column":6},"end":{"line":3154,"column":6}},{"start":{"line":3154,"column":6},"end":{"line":3154,"column":6}}]},"197":{"line":3155,"type":"if","locations":[{"start":{"line":3155,"column":8},"end":{"line":3155,"column":8}},{"start":{"line":3155,"column":8},"end":{"line":3155,"column":8}}]},"198":{"line":3158,"type":"if","locations":[{"start":{"line":3158,"column":12},"end":{"line":3158,"column":12}},{"start":{"line":3158,"column":12},"end":{"line":3158,"column":12}}]},"199":{"line":3167,"type":"if","locations":[{"start":{"line":3167,"column":8},"end":{"line":3167,"column":8}},{"start":{"line":3167,"column":8},"end":{"line":3167,"column":8}}]},"200":{"line":3173,"type":"binary-expr","locations":[{"start":{"line":3173,"column":26},"end":{"line":3173,"column":37}},{"start":{"line":3173,"column":41},"end":{"line":3173,"column":53}}]},"201":{"line":3175,"type":"if","locations":[{"start":{"line":3175,"column":10},"end":{"line":3175,"column":10}},{"start":{"line":3175,"column":10},"end":{"line":3175,"column":10}}]},"202":{"line":3175,"type":"binary-expr","locations":[{"start":{"line":3175,"column":14},"end":{"line":3175,"column":21}},{"start":{"line":3175,"column":25},"end":{"line":3175,"column":38}}]},"203":{"line":3188,"type":"cond-expr","locations":[{"start":{"line":3188,"column":31},"end":{"line":3188,"column":38}},{"start":{"line":3188,"column":41},"end":{"line":3188,"column":45}}]},"204":{"line":3189,"type":"cond-expr","locations":[{"start":{"line":3189,"column":34},"end":{"line":3189,"column":42}},{"start":{"line":3189,"column":45},"end":{"line":3189,"column":51}}]},"205":{"line":3192,"type":"if","locations":[{"start":{"line":3192,"column":6},"end":{"line":3192,"column":6}},{"start":{"line":3192,"column":6},"end":{"line":3192,"column":6}}]},"206":{"line":3193,"type":"if","locations":[{"start":{"line":3193,"column":8},"end":{"line":3193,"column":8}},{"start":{"line":3193,"column":8},"end":{"line":3193,"column":8}}]},"207":{"line":3207,"type":"binary-expr","locations":[{"start":{"line":3207,"column":13},"end":{"line":3207,"column":25}},{"start":{"line":3207,"column":29},"end":{"line":3207,"column":45}}]},"208":{"line":3210,"type":"binary-expr","locations":[{"start":{"line":3210,"column":3},"end":{"line":3210,"column":17}},{"start":{"line":3210,"column":21},"end":{"line":3210,"column":33}}]},"209":{"line":3225,"type":"if","locations":[{"start":{"line":3225,"column":4},"end":{"line":3225,"column":4}},{"start":{"line":3225,"column":4},"end":{"line":3225,"column":4}}]},"210":{"line":3225,"type":"binary-expr","locations":[{"start":{"line":3225,"column":8},"end":{"line":3225,"column":15}},{"start":{"line":3225,"column":19},"end":{"line":3225,"column":36}}]},"211":{"line":3226,"type":"if","locations":[{"start":{"line":3226,"column":4},"end":{"line":3226,"column":4}},{"start":{"line":3226,"column":4},"end":{"line":3226,"column":4}}]},"212":{"line":3228,"type":"binary-expr","locations":[{"start":{"line":3228,"column":16},"end":{"line":3228,"column":25}},{"start":{"line":3228,"column":29},"end":{"line":3228,"column":31}}]},"213":{"line":3229,"type":"binary-expr","locations":[{"start":{"line":3229,"column":24},"end":{"line":3229,"column":47}},{"start":{"line":3229,"column":51},"end":{"line":3229,"column":58}}]},"214":{"line":3234,"type":"cond-expr","locations":[{"start":{"line":3234,"column":37},"end":{"line":3234,"column":63}},{"start":{"line":3234,"column":66},"end":{"line":3234,"column":70}}]},"215":{"line":3236,"type":"if","locations":[{"start":{"line":3236,"column":4},"end":{"line":3236,"column":4}},{"start":{"line":3236,"column":4},"end":{"line":3236,"column":4}}]},"216":{"line":3251,"type":"binary-expr","locations":[{"start":{"line":3251,"column":8},"end":{"line":3251,"column":17}},{"start":{"line":3251,"column":21},"end":{"line":3251,"column":32}}]},"217":{"line":3254,"type":"if","locations":[{"start":{"line":3254,"column":4},"end":{"line":3254,"column":4}},{"start":{"line":3254,"column":4},"end":{"line":3254,"column":4}}]},"218":{"line":3260,"type":"binary-expr","locations":[{"start":{"line":3260,"column":11},"end":{"line":3260,"column":15}},{"start":{"line":3260,"column":19},"end":{"line":3260,"column":21}}]},"219":{"line":3266,"type":"if","locations":[{"start":{"line":3266,"column":4},"end":{"line":3266,"column":4}},{"start":{"line":3266,"column":4},"end":{"line":3266,"column":4}}]},"220":{"line":3267,"type":"if","locations":[{"start":{"line":3267,"column":6},"end":{"line":3267,"column":6}},{"start":{"line":3267,"column":6},"end":{"line":3267,"column":6}}]},"221":{"line":3275,"type":"binary-expr","locations":[{"start":{"line":3275,"column":64},"end":{"line":3275,"column":85}},{"start":{"line":3275,"column":89},"end":{"line":3275,"column":90}}]},"222":{"line":3278,"type":"if","locations":[{"start":{"line":3278,"column":11},"end":{"line":3278,"column":11}},{"start":{"line":3278,"column":11},"end":{"line":3278,"column":11}}]},"223":{"line":3279,"type":"if","locations":[{"start":{"line":3279,"column":6},"end":{"line":3279,"column":6}},{"start":{"line":3279,"column":6},"end":{"line":3279,"column":6}}]},"224":{"line":3287,"type":"binary-expr","locations":[{"start":{"line":3287,"column":63},"end":{"line":3287,"column":84}},{"start":{"line":3287,"column":88},"end":{"line":3287,"column":89}}]},"225":{"line":3290,"type":"if","locations":[{"start":{"line":3290,"column":11},"end":{"line":3290,"column":11}},{"start":{"line":3290,"column":11},"end":{"line":3290,"column":11}}]},"226":{"line":3290,"type":"binary-expr","locations":[{"start":{"line":3290,"column":15},"end":{"line":3290,"column":38}},{"start":{"line":3290,"column":42},"end":{"line":3290,"column":63}}]},"227":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":11},"end":{"line":3292,"column":11}},{"start":{"line":3292,"column":11},"end":{"line":3292,"column":11}}]},"228":{"line":3305,"type":"binary-expr","locations":[{"start":{"line":3305,"column":10},"end":{"line":3305,"column":11}},{"start":{"line":3305,"column":15},"end":{"line":3305,"column":16}}]},"229":{"line":3306,"type":"binary-expr","locations":[{"start":{"line":3306,"column":10},"end":{"line":3306,"column":11}},{"start":{"line":3306,"column":15},"end":{"line":3306,"column":16}}]},"230":{"line":3316,"type":"if","locations":[{"start":{"line":3316,"column":4},"end":{"line":3316,"column":4}},{"start":{"line":3316,"column":4},"end":{"line":3316,"column":4}}]},"231":{"line":3322,"type":"binary-expr","locations":[{"start":{"line":3322,"column":18},"end":{"line":3322,"column":35}},{"start":{"line":3322,"column":39},"end":{"line":3322,"column":41}}]},"232":{"line":3331,"type":"if","locations":[{"start":{"line":3331,"column":4},"end":{"line":3331,"column":4}},{"start":{"line":3331,"column":4},"end":{"line":3331,"column":4}}]},"233":{"line":3331,"type":"binary-expr","locations":[{"start":{"line":3331,"column":8},"end":{"line":3331,"column":26}},{"start":{"line":3331,"column":30},"end":{"line":3331,"column":67}},{"start":{"line":3331,"column":71},"end":{"line":3331,"column":100}}]},"234":{"line":3337,"type":"binary-expr","locations":[{"start":{"line":3337,"column":28},"end":{"line":3337,"column":63}},{"start":{"line":3337,"column":67},"end":{"line":3337,"column":86}}]},"235":{"line":3345,"type":"if","locations":[{"start":{"line":3345,"column":4},"end":{"line":3345,"column":4}},{"start":{"line":3345,"column":4},"end":{"line":3345,"column":4}}]},"236":{"line":3348,"type":"if","locations":[{"start":{"line":3348,"column":4},"end":{"line":3348,"column":4}},{"start":{"line":3348,"column":4},"end":{"line":3348,"column":4}}]},"237":{"line":3348,"type":"binary-expr","locations":[{"start":{"line":3348,"column":8},"end":{"line":3348,"column":36}},{"start":{"line":3348,"column":40},"end":{"line":3348,"column":72}}]},"238":{"line":3364,"type":"binary-expr","locations":[{"start":{"line":3364,"column":8},"end":{"line":3364,"column":9}},{"start":{"line":3364,"column":13},"end":{"line":3364,"column":14}}]},"239":{"line":3365,"type":"binary-expr","locations":[{"start":{"line":3365,"column":8},"end":{"line":3365,"column":9}},{"start":{"line":3365,"column":13},"end":{"line":3365,"column":14}}]},"240":{"line":3376,"type":"if","locations":[{"start":{"line":3376,"column":4},"end":{"line":3376,"column":4}},{"start":{"line":3376,"column":4},"end":{"line":3376,"column":4}}]},"241":{"line":3381,"type":"if","locations":[{"start":{"line":3381,"column":4},"end":{"line":3381,"column":4}},{"start":{"line":3381,"column":4},"end":{"line":3381,"column":4}}]},"242":{"line":3407,"type":"binary-expr","locations":[{"start":{"line":3407,"column":13},"end":{"line":3407,"column":18}},{"start":{"line":3407,"column":23},"end":{"line":3407,"column":51}}]},"243":{"line":3417,"type":"if","locations":[{"start":{"line":3417,"column":8},"end":{"line":3417,"column":8}},{"start":{"line":3417,"column":8},"end":{"line":3417,"column":8}}]}},"code":["/**"," * @license AngularJS v1.6.4"," * (c) 2010-2017 Google, Inc. http://angularjs.org"," * License: MIT"," */","(function(window, angular) {","","'use strict';","","/**"," * @ngdoc object"," * @name angular.mock"," * @description"," *"," * Namespace from 'angular-mocks.js' which contains testing related code."," *"," */","angular.mock = {};","","/**"," * ! This is a private undocumented service !"," *"," * @name $browser"," *"," * @description"," * This service is a mock implementation of {@link ng.$browser}. It provides fake"," * implementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,"," * cookies, etc."," *"," * The api of this service is the same as that of the real {@link ng.$browser $browser}, except"," * that there are several helper methods available which can be used in tests."," */","angular.mock.$BrowserProvider = function() {","  this.$get = function() {","    return new angular.mock.$Browser();","  };","};","","angular.mock.$Browser = function() {","  var self = this;","","  this.isMock = true;","  self.$$url = 'http://server/';","  self.$$lastUrl = self.$$url; // used by url polling fn","  self.pollFns = [];","","  // Testability API","","  var outstandingRequestCount = 0;","  var outstandingRequestCallbacks = [];","  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };","  self.$$completeOutstandingRequest = function(fn) {","    try {","      fn();","    } finally {","      outstandingRequestCount--;","      if (!outstandingRequestCount) {","        while (outstandingRequestCallbacks.length) {","          outstandingRequestCallbacks.pop()();","        }","      }","    }","  };","  self.notifyWhenNoOutstandingRequests = function(callback) {","    if (outstandingRequestCount) {","      outstandingRequestCallbacks.push(callback);","    } else {","      callback();","    }","  };","","  // register url polling fn","","  self.onUrlChange = function(listener) {","    self.pollFns.push(","      function() {","        if (self.$$lastUrl !== self.$$url || self.$$state !== self.$$lastState) {","          self.$$lastUrl = self.$$url;","          self.$$lastState = self.$$state;","          listener(self.$$url, self.$$state);","        }","      }","    );","","    return listener;","  };","","  self.$$applicationDestroyed = angular.noop;","  self.$$checkUrlChange = angular.noop;","","  self.deferredFns = [];","  self.deferredNextId = 0;","","  self.defer = function(fn, delay) {","    // Note that we do not use `$$incOutstandingRequestCount` or `$$completeOutstandingRequest`","    // in this mock implementation.","    delay = delay || 0;","    self.deferredFns.push({time:(self.defer.now + delay), fn:fn, id: self.deferredNextId});","    self.deferredFns.sort(function(a, b) { return a.time - b.time;});","    return self.deferredNextId++;","  };","","","  /**","   * @name $browser#defer.now","   *","   * @description","   * Current milliseconds mock time.","   */","  self.defer.now = 0;","","","  self.defer.cancel = function(deferId) {","    var fnIndex;","","    angular.forEach(self.deferredFns, function(fn, index) {","      if (fn.id === deferId) fnIndex = index;","    });","","    if (angular.isDefined(fnIndex)) {","      self.deferredFns.splice(fnIndex, 1);","      return true;","    }","","    return false;","  };","","","  /**","   * @name $browser#defer.flush","   *","   * @description","   * Flushes all pending requests and executes the defer callbacks.","   *","   * @param {number=} number of milliseconds to flush. See {@link #defer.now}","   */","  self.defer.flush = function(delay) {","    var nextTime;","","    if (angular.isDefined(delay)) {","      // A delay was passed so compute the next time","      nextTime = self.defer.now + delay;","    } else {","      if (self.deferredFns.length) {","        // No delay was passed so set the next time so that it clears the deferred queue","        nextTime = self.deferredFns[self.deferredFns.length - 1].time;","      } else {","        // No delay passed, but there are no deferred tasks so flush - indicates an error!","        throw new Error('No deferred tasks to be flushed');","      }","    }","","    while (self.deferredFns.length && self.deferredFns[0].time <= nextTime) {","      // Increment the time and call the next deferred function","      self.defer.now = self.deferredFns[0].time;","      self.deferredFns.shift().fn();","    }","","    // Ensure that the current time is correct","    self.defer.now = nextTime;","  };","","  self.$$baseHref = '/';","  self.baseHref = function() {","    return this.$$baseHref;","  };","};","angular.mock.$Browser.prototype = {","","  /**","   * @name $browser#poll","   *","   * @description","   * run all fns in pollFns","   */","  poll: function poll() {","    angular.forEach(this.pollFns, function(pollFn) {","      pollFn();","    });","  },","","  url: function(url, replace, state) {","    if (angular.isUndefined(state)) {","      state = null;","    }","    if (url) {","      this.$$url = url;","      // Native pushState serializes & copies the object; simulate it.","      this.$$state = angular.copy(state);","      return this;","    }","","    return this.$$url;","  },","","  state: function() {","    return this.$$state;","  }","};","","","/**"," * @ngdoc provider"," * @name $exceptionHandlerProvider"," *"," * @description"," * Configures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors"," * passed to the `$exceptionHandler`."," */","","/**"," * @ngdoc service"," * @name $exceptionHandler"," *"," * @description"," * Mock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed"," * to it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration"," * information."," *"," *"," * ```js"," *   describe('$exceptionHandlerProvider', function() {"," *"," *     it('should capture log messages and exceptions', function() {"," *"," *       module(function($exceptionHandlerProvider) {"," *         $exceptionHandlerProvider.mode('log');"," *       });"," *"," *       inject(function($log, $exceptionHandler, $timeout) {"," *         $timeout(function() { $log.log(1); });"," *         $timeout(function() { $log.log(2); throw 'banana peel'; });"," *         $timeout(function() { $log.log(3); });"," *         expect($exceptionHandler.errors).toEqual([]);"," *         expect($log.assertEmpty());"," *         $timeout.flush();"," *         expect($exceptionHandler.errors).toEqual(['banana peel']);"," *         expect($log.log.logs).toEqual([[1], [2], [3]]);"," *       });"," *     });"," *   });"," * ```"," */","","angular.mock.$ExceptionHandlerProvider = function() {","  var handler;","","  /**","   * @ngdoc method","   * @name $exceptionHandlerProvider#mode","   *","   * @description","   * Sets the logging mode.","   *","   * @param {string} mode Mode of operation, defaults to `rethrow`.","   *","   *   - `log`: Sometimes it is desirable to test that an error is thrown, for this case the `log`","   *     mode stores an array of errors in `$exceptionHandler.errors`, to allow later assertion of","   *     them. See {@link ngMock.$log#assertEmpty assertEmpty()} and","   *     {@link ngMock.$log#reset reset()}.","   *   - `rethrow`: If any errors are passed to the handler in tests, it typically means that there","   *     is a bug in the application or test, so this mock will make these tests fail. For any","   *     implementations that expect exceptions to be thrown, the `rethrow` mode will also maintain","   *     a log of thrown errors in `$exceptionHandler.errors`.","   */","  this.mode = function(mode) {","","    switch (mode) {","      case 'log':","      case 'rethrow':","        var errors = [];","        handler = function(e) {","          if (arguments.length === 1) {","            errors.push(e);","          } else {","            errors.push([].slice.call(arguments, 0));","          }","          if (mode === 'rethrow') {","            throw e;","          }","        };","        handler.errors = errors;","        break;","      default:","        throw new Error('Unknown mode \\'' + mode + '\\', only \\'log\\'/\\'rethrow\\' modes are allowed!');","    }","  };","","  this.$get = function() {","    return handler;","  };","","  this.mode('rethrow');","};","","","/**"," * @ngdoc service"," * @name $log"," *"," * @description"," * Mock implementation of {@link ng.$log} that gathers all logged messages in arrays"," * (one array per logging level). These arrays are exposed as `logs` property of each of the"," * level-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`."," *"," */","angular.mock.$LogProvider = function() {","  var debug = true;","","  function concat(array1, array2, index) {","    return array1.concat(Array.prototype.slice.call(array2, index));","  }","","  this.debugEnabled = function(flag) {","    if (angular.isDefined(flag)) {","      debug = flag;","      return this;","    } else {","      return debug;","    }","  };","","  this.$get = function() {","    var $log = {","      log: function() { $log.log.logs.push(concat([], arguments, 0)); },","      warn: function() { $log.warn.logs.push(concat([], arguments, 0)); },","      info: function() { $log.info.logs.push(concat([], arguments, 0)); },","      error: function() { $log.error.logs.push(concat([], arguments, 0)); },","      debug: function() {","        if (debug) {","          $log.debug.logs.push(concat([], arguments, 0));","        }","      }","    };","","    /**","     * @ngdoc method","     * @name $log#reset","     *","     * @description","     * Reset all of the logging arrays to empty.","     */","    $log.reset = function() {","      /**","       * @ngdoc property","       * @name $log#log.logs","       *","       * @description","       * Array of messages logged using {@link ng.$log#log `log()`}.","       *","       * @example","       * ```js","       * $log.log('Some Log');","       * var first = $log.log.logs.unshift();","       * ```","       */","      $log.log.logs = [];","      /**","       * @ngdoc property","       * @name $log#info.logs","       *","       * @description","       * Array of messages logged using {@link ng.$log#info `info()`}.","       *","       * @example","       * ```js","       * $log.info('Some Info');","       * var first = $log.info.logs.unshift();","       * ```","       */","      $log.info.logs = [];","      /**","       * @ngdoc property","       * @name $log#warn.logs","       *","       * @description","       * Array of messages logged using {@link ng.$log#warn `warn()`}.","       *","       * @example","       * ```js","       * $log.warn('Some Warning');","       * var first = $log.warn.logs.unshift();","       * ```","       */","      $log.warn.logs = [];","      /**","       * @ngdoc property","       * @name $log#error.logs","       *","       * @description","       * Array of messages logged using {@link ng.$log#error `error()`}.","       *","       * @example","       * ```js","       * $log.error('Some Error');","       * var first = $log.error.logs.unshift();","       * ```","       */","      $log.error.logs = [];","        /**","       * @ngdoc property","       * @name $log#debug.logs","       *","       * @description","       * Array of messages logged using {@link ng.$log#debug `debug()`}.","       *","       * @example","       * ```js","       * $log.debug('Some Error');","       * var first = $log.debug.logs.unshift();","       * ```","       */","      $log.debug.logs = [];","    };","","    /**","     * @ngdoc method","     * @name $log#assertEmpty","     *","     * @description","     * Assert that all of the logging methods have no logged messages. If any messages are present,","     * an exception is thrown.","     */","    $log.assertEmpty = function() {","      var errors = [];","      angular.forEach(['error', 'warn', 'info', 'log', 'debug'], function(logLevel) {","        angular.forEach($log[logLevel].logs, function(log) {","          angular.forEach(log, function(logItem) {","            errors.push('MOCK $log (' + logLevel + '): ' + String(logItem) + '\\n' +","                        (logItem.stack || ''));","          });","        });","      });","      if (errors.length) {","        errors.unshift('Expected $log to be empty! Either a message was logged unexpectedly, or ' +","          'an expected log message was not checked and removed:');","        errors.push('');","        throw new Error(errors.join('\\n---------\\n'));","      }","    };","","    $log.reset();","    return $log;","  };","};","","","/**"," * @ngdoc service"," * @name $interval"," *"," * @description"," * Mock implementation of the $interval service."," *"," * Use {@link ngMock.$interval#flush `$interval.flush(millis)`} to"," * move forward by `millis` milliseconds and trigger any functions scheduled to run in that"," * time."," *"," * @param {function()} fn A function that should be called repeatedly."," * @param {number} delay Number of milliseconds between each function call."," * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat"," *   indefinitely."," * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise"," *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block."," * @param {...*=} Pass additional parameters to the executed function."," * @returns {promise} A promise which will be notified on each iteration."," */","angular.mock.$IntervalProvider = function() {","  this.$get = ['$browser', '$rootScope', '$q', '$$q',","       function($browser,   $rootScope,   $q,   $$q) {","    var repeatFns = [],","        nextRepeatId = 0,","        now = 0;","","    var $interval = function(fn, delay, count, invokeApply) {","      var hasParams = arguments.length > 4,","          args = hasParams ? Array.prototype.slice.call(arguments, 4) : [],","          iteration = 0,","          skipApply = (angular.isDefined(invokeApply) && !invokeApply),","          deferred = (skipApply ? $$q : $q).defer(),","          promise = deferred.promise;","","      count = (angular.isDefined(count)) ? count : 0;","      promise.then(null, function() {}, (!hasParams) ? fn : function() {","        fn.apply(null, args);","      });","","      promise.$$intervalId = nextRepeatId;","","      function tick() {","        deferred.notify(iteration++);","","        if (count > 0 && iteration >= count) {","          var fnIndex;","          deferred.resolve(iteration);","","          angular.forEach(repeatFns, function(fn, index) {","            if (fn.id === promise.$$intervalId) fnIndex = index;","          });","","          if (angular.isDefined(fnIndex)) {","            repeatFns.splice(fnIndex, 1);","          }","        }","","        if (skipApply) {","          $browser.defer.flush();","        } else {","          $rootScope.$apply();","        }","      }","","      repeatFns.push({","        nextTime:(now + delay),","        delay: delay,","        fn: tick,","        id: nextRepeatId,","        deferred: deferred","      });","      repeatFns.sort(function(a, b) { return a.nextTime - b.nextTime;});","","      nextRepeatId++;","      return promise;","    };","    /**","     * @ngdoc method","     * @name $interval#cancel","     *","     * @description","     * Cancels a task associated with the `promise`.","     *","     * @param {promise} promise A promise from calling the `$interval` function.","     * @returns {boolean} Returns `true` if the task was successfully cancelled.","     */","    $interval.cancel = function(promise) {","      if (!promise) return false;","      var fnIndex;","","      angular.forEach(repeatFns, function(fn, index) {","        if (fn.id === promise.$$intervalId) fnIndex = index;","      });","","      if (angular.isDefined(fnIndex)) {","        repeatFns[fnIndex].deferred.promise.then(undefined, function() {});","        repeatFns[fnIndex].deferred.reject('canceled');","        repeatFns.splice(fnIndex, 1);","        return true;","      }","","      return false;","    };","","    /**","     * @ngdoc method","     * @name $interval#flush","     * @description","     *","     * Runs interval tasks scheduled to be run in the next `millis` milliseconds.","     *","     * @param {number=} millis maximum timeout amount to flush up until.","     *","     * @return {number} The amount of time moved forward.","     */","    $interval.flush = function(millis) {","      now += millis;","      while (repeatFns.length && repeatFns[0].nextTime <= now) {","        var task = repeatFns[0];","        task.fn();","        task.nextTime += task.delay;","        repeatFns.sort(function(a, b) { return a.nextTime - b.nextTime;});","      }","      return millis;","    };","","    return $interval;","  }];","};","","","function jsonStringToDate(string) {","  // The R_ISO8061_STR regex is never going to fit into the 100 char limit!","  // eslit-disable-next-line max-len","  var R_ISO8061_STR = /^(-?\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d{3}))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d)))?$/;","","  var match;","  if ((match = string.match(R_ISO8061_STR))) {","    var date = new Date(0),","        tzHour = 0,","        tzMin  = 0;","    if (match[9]) {","      tzHour = toInt(match[9] + match[10]);","      tzMin = toInt(match[9] + match[11]);","    }","    date.setUTCFullYear(toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));","    date.setUTCHours(toInt(match[4] || 0) - tzHour,","                     toInt(match[5] || 0) - tzMin,","                     toInt(match[6] || 0),","                     toInt(match[7] || 0));","    return date;","  }","  return string;","}","","function toInt(str) {","  return parseInt(str, 10);","}","","function padNumberInMock(num, digits, trim) {","  var neg = '';","  if (num < 0) {","    neg =  '-';","    num = -num;","  }","  num = '' + num;","  while (num.length < digits) num = '0' + num;","  if (trim) {","    num = num.substr(num.length - digits);","  }","  return neg + num;","}","","","/**"," * @ngdoc type"," * @name angular.mock.TzDate"," * @description"," *"," * *NOTE*: this is not an injectable instance, just a globally available mock class of `Date`."," *"," * Mock of the Date type which has its timezone specified via constructor arg."," *"," * The main purpose is to create Date-like instances with timezone fixed to the specified timezone"," * offset, so that we can test code that depends on local timezone settings without dependency on"," * the time zone settings of the machine where the code is running."," *"," * @param {number} offset Offset of the *desired* timezone in hours (fractions will be honored)"," * @param {(number|string)} timestamp Timestamp representing the desired time in *UTC*"," *"," * @example"," * !!!! WARNING !!!!!"," * This is not a complete Date object so only methods that were implemented can be called safely."," * To make matters worse, TzDate instances inherit stuff from Date via a prototype."," *"," * We do our best to intercept calls to \"unimplemented\" methods, but since the list of methods is"," * incomplete we might be missing some non-standard methods. This can result in errors like:"," * \"Date.prototype.foo called on incompatible Object\"."," *"," * ```js"," * var newYearInBratislava = new TzDate(-1, '2009-12-31T23:00:00Z');"," * newYearInBratislava.getTimezoneOffset() => -60;"," * newYearInBratislava.getFullYear() => 2010;"," * newYearInBratislava.getMonth() => 0;"," * newYearInBratislava.getDate() => 1;"," * newYearInBratislava.getHours() => 0;"," * newYearInBratislava.getMinutes() => 0;"," * newYearInBratislava.getSeconds() => 0;"," * ```"," *"," */","angular.mock.TzDate = function(offset, timestamp) {","  var self = new Date(0);","  if (angular.isString(timestamp)) {","    var tsStr = timestamp;","","    self.origDate = jsonStringToDate(timestamp);","","    timestamp = self.origDate.getTime();","    if (isNaN(timestamp)) {","      // eslint-disable-next-line no-throw-literal","      throw {","        name: 'Illegal Argument',","        message: 'Arg \\'' + tsStr + '\\' passed into TzDate constructor is not a valid date string'","      };","    }","  } else {","    self.origDate = new Date(timestamp);","  }","","  var localOffset = new Date(timestamp).getTimezoneOffset();","  self.offsetDiff = localOffset * 60 * 1000 - offset * 1000 * 60 * 60;","  self.date = new Date(timestamp + self.offsetDiff);","","  self.getTime = function() {","    return self.date.getTime() - self.offsetDiff;","  };","","  self.toLocaleDateString = function() {","    return self.date.toLocaleDateString();","  };","","  self.getFullYear = function() {","    return self.date.getFullYear();","  };","","  self.getMonth = function() {","    return self.date.getMonth();","  };","","  self.getDate = function() {","    return self.date.getDate();","  };","","  self.getHours = function() {","    return self.date.getHours();","  };","","  self.getMinutes = function() {","    return self.date.getMinutes();","  };","","  self.getSeconds = function() {","    return self.date.getSeconds();","  };","","  self.getMilliseconds = function() {","    return self.date.getMilliseconds();","  };","","  self.getTimezoneOffset = function() {","    return offset * 60;","  };","","  self.getUTCFullYear = function() {","    return self.origDate.getUTCFullYear();","  };","","  self.getUTCMonth = function() {","    return self.origDate.getUTCMonth();","  };","","  self.getUTCDate = function() {","    return self.origDate.getUTCDate();","  };","","  self.getUTCHours = function() {","    return self.origDate.getUTCHours();","  };","","  self.getUTCMinutes = function() {","    return self.origDate.getUTCMinutes();","  };","","  self.getUTCSeconds = function() {","    return self.origDate.getUTCSeconds();","  };","","  self.getUTCMilliseconds = function() {","    return self.origDate.getUTCMilliseconds();","  };","","  self.getDay = function() {","    return self.date.getDay();","  };","","  // provide this method only on browsers that already have it","  if (self.toISOString) {","    self.toISOString = function() {","      return padNumberInMock(self.origDate.getUTCFullYear(), 4) + '-' +","            padNumberInMock(self.origDate.getUTCMonth() + 1, 2) + '-' +","            padNumberInMock(self.origDate.getUTCDate(), 2) + 'T' +","            padNumberInMock(self.origDate.getUTCHours(), 2) + ':' +","            padNumberInMock(self.origDate.getUTCMinutes(), 2) + ':' +","            padNumberInMock(self.origDate.getUTCSeconds(), 2) + '.' +","            padNumberInMock(self.origDate.getUTCMilliseconds(), 3) + 'Z';","    };","  }","","  //hide all methods not implemented in this mock that the Date prototype exposes","  var unimplementedMethods = ['getUTCDay',","      'getYear', 'setDate', 'setFullYear', 'setHours', 'setMilliseconds',","      'setMinutes', 'setMonth', 'setSeconds', 'setTime', 'setUTCDate', 'setUTCFullYear',","      'setUTCHours', 'setUTCMilliseconds', 'setUTCMinutes', 'setUTCMonth', 'setUTCSeconds',","      'setYear', 'toDateString', 'toGMTString', 'toJSON', 'toLocaleFormat', 'toLocaleString',","      'toLocaleTimeString', 'toSource', 'toString', 'toTimeString', 'toUTCString', 'valueOf'];","","  angular.forEach(unimplementedMethods, function(methodName) {","    self[methodName] = function() {","      throw new Error('Method \\'' + methodName + '\\' is not implemented in the TzDate mock');","    };","  });","","  return self;","};","","//make \"tzDateInstance instanceof Date\" return true","angular.mock.TzDate.prototype = Date.prototype;","","","/**"," * @ngdoc service"," * @name $animate"," *"," * @description"," * Mock implementation of the {@link ng.$animate `$animate`} service. Exposes two additional methods"," * for testing animations."," *"," * You need to require the `ngAnimateMock` module in your test suite for instance `beforeEach(module('ngAnimateMock'))`"," */","angular.mock.animate = angular.module('ngAnimateMock', ['ng'])","  .info({ angularVersion: '1.6.4' })","","  .config(['$provide', function($provide) {","","    $provide.factory('$$forceReflow', function() {","      function reflowFn() {","        reflowFn.totalReflows++;","      }","      reflowFn.totalReflows = 0;","      return reflowFn;","    });","","    $provide.factory('$$animateAsyncRun', function() {","      var queue = [];","      var queueFn = function() {","        return function(fn) {","          queue.push(fn);","        };","      };","      queueFn.flush = function() {","        if (queue.length === 0) return false;","","        for (var i = 0; i < queue.length; i++) {","          queue[i]();","        }","        queue = [];","","        return true;","      };","      return queueFn;","    });","","    $provide.decorator('$$animateJs', ['$delegate', function($delegate) {","      var runners = [];","","      var animateJsConstructor = function() {","        var animator = $delegate.apply($delegate, arguments);","        // If no javascript animation is found, animator is undefined","        if (animator) {","          runners.push(animator);","        }","        return animator;","      };","","      animateJsConstructor.$closeAndFlush = function() {","        runners.forEach(function(runner) {","          runner.end();","        });","        runners = [];","      };","","      return animateJsConstructor;","    }]);","","    $provide.decorator('$animateCss', ['$delegate', function($delegate) {","      var runners = [];","","      var animateCssConstructor = function(element, options) {","        var animator = $delegate(element, options);","        runners.push(animator);","        return animator;","      };","","      animateCssConstructor.$closeAndFlush = function() {","        runners.forEach(function(runner) {","          runner.end();","        });","        runners = [];","      };","","      return animateCssConstructor;","    }]);","","    $provide.decorator('$animate', ['$delegate', '$timeout', '$browser', '$$rAF', '$animateCss', '$$animateJs',","                                    '$$forceReflow', '$$animateAsyncRun', '$rootScope',","                            function($delegate,   $timeout,   $browser,   $$rAF,   $animateCss,   $$animateJs,","                                     $$forceReflow,   $$animateAsyncRun,  $rootScope) {","      var animate = {","        queue: [],","        cancel: $delegate.cancel,","        on: $delegate.on,","        off: $delegate.off,","        pin: $delegate.pin,","        get reflows() {","          return $$forceReflow.totalReflows;","        },","        enabled: $delegate.enabled,","        /**","         * @ngdoc method","         * @name $animate#closeAndFlush","         * @description","         *","         * This method will close all pending animations (both {@link ngAnimate#javascript-based-animations Javascript}","         * and {@link ngAnimate.$animateCss CSS}) and it will also flush any remaining animation frames and/or callbacks.","         */","        closeAndFlush: function() {","          // we allow the flush command to swallow the errors","          // because depending on whether CSS or JS animations are","          // used, there may not be a RAF flush. The primary flush","          // at the end of this function must throw an exception","          // because it will track if there were pending animations","          this.flush(true);","          $animateCss.$closeAndFlush();","          $$animateJs.$closeAndFlush();","          this.flush();","        },","        /**","         * @ngdoc method","         * @name $animate#flush","         * @description","         *","         * This method is used to flush the pending callbacks and animation frames to either start","         * an animation or conclude an animation. Note that this will not actually close an","         * actively running animation (see {@link ngMock.$animate#closeAndFlush `closeAndFlush()`} for that).","         */","        flush: function(hideErrors) {","          $rootScope.$digest();","","          var doNextRun, somethingFlushed = false;","          do {","            doNextRun = false;","","            if ($$rAF.queue.length) {","              $$rAF.flush();","              doNextRun = somethingFlushed = true;","            }","","            if ($$animateAsyncRun.flush()) {","              doNextRun = somethingFlushed = true;","            }","          } while (doNextRun);","","          if (!somethingFlushed && !hideErrors) {","            throw new Error('No pending animations ready to be closed or flushed');","          }","","          $rootScope.$digest();","        }","      };","","      angular.forEach(","        ['animate','enter','leave','move','addClass','removeClass','setClass'], function(method) {","        animate[method] = function() {","          animate.queue.push({","            event: method,","            element: arguments[0],","            options: arguments[arguments.length - 1],","            args: arguments","          });","          return $delegate[method].apply($delegate, arguments);","        };","      });","","      return animate;","    }]);","","  }]);","","","/**"," * @ngdoc function"," * @name angular.mock.dump"," * @description"," *"," * *NOTE*: This is not an injectable instance, just a globally available function."," *"," * Method for serializing common angular objects (scope, elements, etc..) into strings."," * It is useful for logging objects to the console when debugging."," *"," * @param {*} object - any object to turn into string."," * @return {string} a serialized string of the argument"," */","angular.mock.dump = function(object) {","  return serialize(object);","","  function serialize(object) {","    var out;","","    if (angular.isElement(object)) {","      object = angular.element(object);","      out = angular.element('<div></div>');","      angular.forEach(object, function(element) {","        out.append(angular.element(element).clone());","      });","      out = out.html();","    } else if (angular.isArray(object)) {","      out = [];","      angular.forEach(object, function(o) {","        out.push(serialize(o));","      });","      out = '[ ' + out.join(', ') + ' ]';","    } else if (angular.isObject(object)) {","      if (angular.isFunction(object.$eval) && angular.isFunction(object.$apply)) {","        out = serializeScope(object);","      } else if (object instanceof Error) {","        out = object.stack || ('' + object.name + ': ' + object.message);","      } else {","        // TODO(i): this prevents methods being logged,","        // we should have a better way to serialize objects","        out = angular.toJson(object, true);","      }","    } else {","      out = String(object);","    }","","    return out;","  }","","  function serializeScope(scope, offset) {","    offset = offset ||  '  ';","    var log = [offset + 'Scope(' + scope.$id + '): {'];","    for (var key in scope) {","      if (Object.prototype.hasOwnProperty.call(scope, key) && !key.match(/^(\\$|this)/)) {","        log.push('  ' + key + ': ' + angular.toJson(scope[key]));","      }","    }","    var child = scope.$$childHead;","    while (child) {","      log.push(serializeScope(child, offset + '  '));","      child = child.$$nextSibling;","    }","    log.push('}');","    return log.join('\\n' + offset);","  }","};","","/**"," * @ngdoc service"," * @name $httpBackend"," * @description"," * Fake HTTP backend implementation suitable for unit testing applications that use the"," * {@link ng.$http $http service}."," *"," * <div class=\"alert alert-info\">"," * **Note**: For fake HTTP backend implementation suitable for end-to-end testing or backend-less"," * development please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}."," * </div>"," *"," * During unit testing, we want our unit tests to run quickly and have no external dependencies so"," * we don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or"," * [JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is"," * to verify whether a certain request has been sent or not, or alternatively just let the"," * application make requests, respond with pre-trained responses and assert that the end result is"," * what we expect it to be."," *"," * This mock implementation can be used to respond with static or dynamic responses via the"," * `expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc)."," *"," * When an Angular application needs some data from a server, it calls the $http service, which"," * sends the request to a real server using $httpBackend service. With dependency injection, it is"," * easy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify"," * the requests and respond with some testing data without sending a request to a real server."," *"," * There are two ways to specify what test data should be returned as http responses by the mock"," * backend when the code under test makes http requests:"," *"," * - `$httpBackend.expect` - specifies a request expectation"," * - `$httpBackend.when` - specifies a backend definition"," *"," *"," * ## Request Expectations vs Backend Definitions"," *"," * Request expectations provide a way to make assertions about requests made by the application and"," * to define responses for those requests. The test will fail if the expected requests are not made"," * or they are made in the wrong order."," *"," * Backend definitions allow you to define a fake backend for your application which doesn't assert"," * if a particular request was made or not, it just returns a trained response if a request is made."," * The test will pass whether or not the request gets made during testing."," *"," *"," * <table class=\"table\">"," *   <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>"," *   <tr>"," *     <th>Syntax</th>"," *     <td>.expect(...).respond(...)</td>"," *     <td>.when(...).respond(...)</td>"," *   </tr>"," *   <tr>"," *     <th>Typical usage</th>"," *     <td>strict unit tests</td>"," *     <td>loose (black-box) unit testing</td>"," *   </tr>"," *   <tr>"," *     <th>Fulfills multiple requests</th>"," *     <td>NO</td>"," *     <td>YES</td>"," *   </tr>"," *   <tr>"," *     <th>Order of requests matters</th>"," *     <td>YES</td>"," *     <td>NO</td>"," *   </tr>"," *   <tr>"," *     <th>Request required</th>"," *     <td>YES</td>"," *     <td>NO</td>"," *   </tr>"," *   <tr>"," *     <th>Response required</th>"," *     <td>optional (see below)</td>"," *     <td>YES</td>"," *   </tr>"," * </table>"," *"," * In cases where both backend definitions and request expectations are specified during unit"," * testing, the request expectations are evaluated first."," *"," * If a request expectation has no response specified, the algorithm will search your backend"," * definitions for an appropriate response."," *"," * If a request didn't match any expectation or if the expectation doesn't have the response"," * defined, the backend definitions are evaluated in sequential order to see if any of them match"," * the request. The response from the first matched definition is returned."," *"," *"," * ## Flushing HTTP requests"," *"," * The $httpBackend used in production always responds to requests asynchronously. If we preserved"," * this behavior in unit testing, we'd have to create async unit tests, which are hard to write,"," * to follow and to maintain. But neither can the testing mock respond synchronously; that would"," * change the execution of the code under test. For this reason, the mock $httpBackend has a"," * `flush()` method, which allows the test to explicitly flush pending requests. This preserves"," * the async api of the backend, while allowing the test to execute synchronously."," *"," *"," * ## Unit testing with mock $httpBackend"," * The following code shows how to setup and use the mock backend when unit testing a controller."," * First we create the controller under test:"," *","  ```js","  // The module code","  angular","    .module('MyApp', [])","    .controller('MyController', MyController);","","  // The controller code","  function MyController($scope, $http) {","    var authToken;","","    $http.get('/auth.py').then(function(response) {","      authToken = response.headers('A-Token');","      $scope.user = response.data;","    }).catch(function() {","      $scope.status = 'Failed...';","    });","","    $scope.saveMessage = function(message) {","      var headers = { 'Authorization': authToken };","      $scope.status = 'Saving...';","","      $http.post('/add-msg.py', message, { headers: headers } ).then(function(response) {","        $scope.status = '';","      }).catch(function() {","        $scope.status = 'Failed...';","      });","    };","  }","  ```"," *"," * Now we setup the mock backend and create the test specs:"," *","  ```js","    // testing controller","    describe('MyController', function() {","       var $httpBackend, $rootScope, createController, authRequestHandler;","","       // Set up the module","       beforeEach(module('MyApp'));","","       beforeEach(inject(function($injector) {","         // Set up the mock http service responses","         $httpBackend = $injector.get('$httpBackend');","         // backend definition common for all tests","         authRequestHandler = $httpBackend.when('GET', '/auth.py')","                                .respond({userId: 'userX'}, {'A-Token': 'xxx'});","","         // Get hold of a scope (i.e. the root scope)","         $rootScope = $injector.get('$rootScope');","         // The $controller service is used to create instances of controllers","         var $controller = $injector.get('$controller');","","         createController = function() {","           return $controller('MyController', {'$scope' : $rootScope });","         };","       }));","","","       afterEach(function() {","         $httpBackend.verifyNoOutstandingExpectation();","         $httpBackend.verifyNoOutstandingRequest();","       });","","","       it('should fetch authentication token', function() {","         $httpBackend.expectGET('/auth.py');","         var controller = createController();","         $httpBackend.flush();","       });","","","       it('should fail authentication', function() {","","         // Notice how you can change the response even after it was set","         authRequestHandler.respond(401, '');","","         $httpBackend.expectGET('/auth.py');","         var controller = createController();","         $httpBackend.flush();","         expect($rootScope.status).toBe('Failed...');","       });","","","       it('should send msg to server', function() {","         var controller = createController();","         $httpBackend.flush();","","         // now you don’t care about the authentication, but","         // the controller will still send the request and","         // $httpBackend will respond without you having to","         // specify the expectation and response for this request","","         $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');","         $rootScope.saveMessage('message content');","         expect($rootScope.status).toBe('Saving...');","         $httpBackend.flush();","         expect($rootScope.status).toBe('');","       });","","","       it('should send auth header', function() {","         var controller = createController();","         $httpBackend.flush();","","         $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {","           // check if the header was sent, if it wasn't the expectation won't","           // match the request and the test will fail","           return headers['Authorization'] === 'xxx';","         }).respond(201, '');","","         $rootScope.saveMessage('whatever');","         $httpBackend.flush();","       });","    });","  ```"," *"," * ## Dynamic responses"," *"," * You define a response to a request by chaining a call to `respond()` onto a definition or expectation."," * If you provide a **callback** as the first parameter to `respond(callback)` then you can dynamically generate"," * a response based on the properties of the request."," *"," * The `callback` function should be of the form `function(method, url, data, headers, params)`."," *"," * ### Query parameters"," *"," * By default, query parameters on request URLs are parsed into the `params` object. So a request URL"," * of `/list?q=searchstr&orderby=-name` would set `params` to be `{q: 'searchstr', orderby: '-name'}`."," *"," * ### Regex parameter matching"," *"," * If an expectation or definition uses a **regex** to match the URL, you can provide an array of **keys** via a"," * `params` argument. The index of each **key** in the array will match the index of a **group** in the"," * **regex**."," *"," * The `params` object in the **callback** will now have properties with these keys, which hold the value of the"," * corresponding **group** in the **regex**."," *"," * This also applies to the `when` and `expect` shortcut methods."," *"," *"," * ```js"," *   $httpBackend.expect('GET', /\\/user\\/(.+)/, undefined, undefined, ['id'])"," *     .respond(function(method, url, data, headers, params) {"," *       // for requested url of '/user/1234' params is {id: '1234'}"," *     });"," *"," *   $httpBackend.whenPATCH(/\\/user\\/(.+)\\/article\\/(.+)/, undefined, undefined, ['user', 'article'])"," *     .respond(function(method, url, data, headers, params) {"," *       // for url of '/user/1234/article/567' params is {user: '1234', article: '567'}"," *     });"," * ```"," *"," * ## Matching route requests"," *"," * For extra convenience, `whenRoute` and `expectRoute` shortcuts are available. These methods offer colon"," * delimited matching of the url path, ignoring the query string. This allows declarations"," * similar to how application routes are configured with `$routeProvider`. Because these methods convert"," * the definition url to regex, declaration order is important. Combined with query parameter parsing,"," * the following is possible:"," *","  ```js","    $httpBackend.whenRoute('GET', '/users/:id')","      .respond(function(method, url, data, headers, params) {","        return [200, MockUserList[Number(params.id)]];","      });","","    $httpBackend.whenRoute('GET', '/users')","      .respond(function(method, url, data, headers, params) {","        var userList = angular.copy(MockUserList),","          defaultSort = 'lastName',","          count, pages, isPrevious, isNext;","","        // paged api response '/v1/users?page=2'","        params.page = Number(params.page) || 1;","","        // query for last names '/v1/users?q=Archer'","        if (params.q) {","          userList = $filter('filter')({lastName: params.q});","        }","","        pages = Math.ceil(userList.length / pagingLength);","        isPrevious = params.page > 1;","        isNext = params.page < pages;","","        return [200, {","          count:    userList.length,","          previous: isPrevious,","          next:     isNext,","          // sort field -> '/v1/users?sortBy=firstName'","          results:  $filter('orderBy')(userList, params.sortBy || defaultSort)","                      .splice((params.page - 1) * pagingLength, pagingLength)","        }];","      });","  ```"," */","angular.mock.$httpBackendDecorator =","  ['$rootScope', '$timeout', '$delegate', createHttpBackendMock];","","/**"," * General factory function for $httpBackend mock."," * Returns instance for unit testing (when no arguments specified):"," *   - passing through is disabled"," *   - auto flushing is disabled"," *"," * Returns instance for e2e testing (when `$delegate` and `$browser` specified):"," *   - passing through (delegating request to real backend) is enabled"," *   - auto flushing is enabled"," *"," * @param {Object=} $delegate Real $httpBackend instance (allow passing through if specified)"," * @param {Object=} $browser Auto-flushing enabled if specified"," * @return {Object} Instance of $httpBackend mock"," */","function createHttpBackendMock($rootScope, $timeout, $delegate, $browser) {","  var definitions = [],","      expectations = [],","      responses = [],","      responsesPush = angular.bind(responses, responses.push),","      copy = angular.copy,","      // We cache the original backend so that if both ngMock and ngMockE2E override the","      // service the ngMockE2E version can pass through to the real backend","      originalHttpBackend = $delegate.$$originalHttpBackend || $delegate;","","  function createResponse(status, data, headers, statusText) {","    if (angular.isFunction(status)) return status;","","    return function() {","      return angular.isNumber(status)","          ? [status, data, headers, statusText]","          : [200, status, data, headers];","    };","  }","","  // TODO(vojta): change params to: method, url, data, headers, callback","  function $httpBackend(method, url, data, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {","","    var xhr = new MockXhr(),","        expectation = expectations[0],","        wasExpected = false;","","    xhr.$$events = eventHandlers;","    xhr.upload.$$events = uploadEventHandlers;","","    function prettyPrint(data) {","      return (angular.isString(data) || angular.isFunction(data) || data instanceof RegExp)","          ? data","          : angular.toJson(data);","    }","","    function wrapResponse(wrapped) {","      if (!$browser && timeout) {","        if (timeout.then) {","          timeout.then(handleTimeout);","        } else {","          $timeout(handleTimeout, timeout);","        }","      }","","      return handleResponse;","","      function handleResponse() {","        var response = wrapped.response(method, url, data, headers, wrapped.params(url));","        xhr.$$respHeaders = response[2];","        callback(copy(response[0]), copy(response[1]), xhr.getAllResponseHeaders(),","                 copy(response[3] || ''));","      }","","      function handleTimeout() {","        for (var i = 0, ii = responses.length; i < ii; i++) {","          if (responses[i] === handleResponse) {","            responses.splice(i, 1);","            callback(-1, undefined, '');","            break;","          }","        }","      }","    }","","    if (expectation && expectation.match(method, url)) {","      if (!expectation.matchData(data)) {","        throw new Error('Expected ' + expectation + ' with different data\\n' +","            'EXPECTED: ' + prettyPrint(expectation.data) + '\\nGOT:      ' + data);","      }","","      if (!expectation.matchHeaders(headers)) {","        throw new Error('Expected ' + expectation + ' with different headers\\n' +","                        'EXPECTED: ' + prettyPrint(expectation.headers) + '\\nGOT:      ' +","                        prettyPrint(headers));","      }","","      expectations.shift();","","      if (expectation.response) {","        responses.push(wrapResponse(expectation));","        return;","      }","      wasExpected = true;","    }","","    var i = -1, definition;","    while ((definition = definitions[++i])) {","      if (definition.match(method, url, data, headers || {})) {","        if (definition.response) {","          // if $browser specified, we do auto flush all requests","          ($browser ? $browser.defer : responsesPush)(wrapResponse(definition));","        } else if (definition.passThrough) {","          originalHttpBackend(method, url, data, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers);","        } else throw new Error('No response defined !');","        return;","      }","    }","    throw wasExpected ?","        new Error('No response defined !') :","        new Error('Unexpected request: ' + method + ' ' + url + '\\n' +","                  (expectation ? 'Expected ' + expectation : 'No more request expected'));","  }","","  /**","   * @ngdoc method","   * @name $httpBackend#when","   * @description","   * Creates a new backend definition.","   *","   * @param {string} method HTTP method.","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives","   *   data string and returns true if the data is as expected.","   * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header","   *   object and returns true if the headers match the current definition.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   *","   *  - respond –","   *      ```js","   *      {function([status,] data[, headers, statusText])","   *      | function(function(method, url, data, headers, params)}","   *      ```","   *    – The respond method takes a set of static data to be returned or a function that can","   *    return an array containing response status (number), response data (Array|Object|string),","   *    response headers (Object), and the text for the status (string). The respond method returns","   *    the `requestHandler` object for possible overrides.","   */","  $httpBackend.when = function(method, url, data, headers, keys) {","","    assertArgDefined(arguments, 1, 'url');","","    var definition = new MockHttpExpectation(method, url, data, headers, keys),","        chain = {","          respond: function(status, data, headers, statusText) {","            definition.passThrough = undefined;","            definition.response = createResponse(status, data, headers, statusText);","            return chain;","          }","        };","","    if ($browser) {","      chain.passThrough = function() {","        definition.response = undefined;","        definition.passThrough = true;","        return chain;","      };","    }","","    definitions.push(definition);","    return chain;","  };","","  /**","   * @ngdoc method","   * @name $httpBackend#whenGET","   * @description","   * Creates a new backend definition for GET requests. For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(Object|function(Object))=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#whenHEAD","   * @description","   * Creates a new backend definition for HEAD requests. For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(Object|function(Object))=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#whenDELETE","   * @description","   * Creates a new backend definition for DELETE requests. For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(Object|function(Object))=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#whenPOST","   * @description","   * Creates a new backend definition for POST requests. For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives","   *   data string and returns true if the data is as expected.","   * @param {(Object|function(Object))=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#whenPUT","   * @description","   * Creates a new backend definition for PUT requests.  For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives","   *   data string and returns true if the data is as expected.","   * @param {(Object|function(Object))=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#whenJSONP","   * @description","   * Creates a new backend definition for JSONP requests. For more info see `when()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled.","   */","  createShortMethods('when');","","  /**","   * @ngdoc method","   * @name $httpBackend#whenRoute","   * @description","   * Creates a new backend definition that compares only with the requested route.","   *","   * @param {string} method HTTP method.","   * @param {string} url HTTP url string that supports colon param matching.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled. See #when for more info.","   */","  $httpBackend.whenRoute = function(method, url) {","    var pathObj = parseRoute(url);","    return $httpBackend.when(method, pathObj.regexp, undefined, undefined, pathObj.keys);","  };","","  function parseRoute(url) {","    var ret = {","      regexp: url","    },","    keys = ret.keys = [];","","    if (!url || !angular.isString(url)) return ret;","","    url = url","      .replace(/([().])/g, '\\\\$1')","      .replace(/(\\/)?:(\\w+)([?*])?/g, function(_, slash, key, option) {","        var optional = option === '?' ? option : null;","        var star = option === '*' ? option : null;","        keys.push({ name: key, optional: !!optional });","        slash = slash || '';","        return ''","          + (optional ? '' : slash)","          + '(?:'","          + (optional ? slash : '')","          + (star && '(.+?)' || '([^/]+)')","          + (optional || '')","          + ')'","          + (optional || '');","      })","      .replace(/([/$*])/g, '\\\\$1');","","    ret.regexp = new RegExp('^' + url, 'i');","    return ret;","  }","","  /**","   * @ngdoc method","   * @name $httpBackend#expect","   * @description","   * Creates a new request expectation.","   *","   * @param {string} method HTTP method.","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that","   *  receives data string and returns true if the data is as expected, or Object if request body","   *  is in JSON format.","   * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header","   *   object and returns true if the headers match the current expectation.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *  request is handled. You can save this object for later use and invoke `respond` again in","   *  order to change how a matched request is handled.","   *","   *  - respond –","   *    ```","   *    { function([status,] data[, headers, statusText])","   *    | function(function(method, url, data, headers, params)}","   *    ```","   *    – The respond method takes a set of static data to be returned or a function that can","   *    return an array containing response status (number), response data (Array|Object|string),","   *    response headers (Object), and the text for the status (string). The respond method returns","   *    the `requestHandler` object for possible overrides.","   */","  $httpBackend.expect = function(method, url, data, headers, keys) {","","    assertArgDefined(arguments, 1, 'url');","","    var expectation = new MockHttpExpectation(method, url, data, headers, keys),","        chain = {","          respond: function(status, data, headers, statusText) {","            expectation.response = createResponse(status, data, headers, statusText);","            return chain;","          }","        };","","    expectations.push(expectation);","    return chain;","  };","","  /**","   * @ngdoc method","   * @name $httpBackend#expectGET","   * @description","   * Creates a new request expectation for GET requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled. See #expect for more info.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectHEAD","   * @description","   * Creates a new request expectation for HEAD requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectDELETE","   * @description","   * Creates a new request expectation for DELETE requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectPOST","   * @description","   * Creates a new request expectation for POST requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that","   *  receives data string and returns true if the data is as expected, or Object if request body","   *  is in JSON format.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectPUT","   * @description","   * Creates a new request expectation for PUT requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that","   *  receives data string and returns true if the data is as expected, or Object if request body","   *  is in JSON format.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectPATCH","   * @description","   * Creates a new request expectation for PATCH requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url","   *   and returns true if the url matches the current definition.","   * @param {(string|RegExp|function(string)|Object)=} data HTTP request body or function that","   *  receives data string and returns true if the data is as expected, or Object if request body","   *  is in JSON format.","   * @param {Object=} headers HTTP headers.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","","  /**","   * @ngdoc method","   * @name $httpBackend#expectJSONP","   * @description","   * Creates a new request expectation for JSONP requests. For more info see `expect()`.","   *","   * @param {string|RegExp|function(string)=} url HTTP url or function that receives an url","   *   and returns true if the url matches the current definition.","   * @param {(Array)=} keys Array of keys to assign to regex matches in request url described above.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   *   request is handled. You can save this object for later use and invoke `respond` again in","   *   order to change how a matched request is handled.","   */","  createShortMethods('expect');","","  /**","   * @ngdoc method","   * @name $httpBackend#expectRoute","   * @description","   * Creates a new request expectation that compares only with the requested route.","   *","   * @param {string} method HTTP method.","   * @param {string} url HTTP url string that supports colon param matching.","   * @returns {requestHandler} Returns an object with `respond` method that controls how a matched","   * request is handled. You can save this object for later use and invoke `respond` again in","   * order to change how a matched request is handled. See #expect for more info.","   */","  $httpBackend.expectRoute = function(method, url) {","    var pathObj = parseRoute(url);","    return $httpBackend.expect(method, pathObj.regexp, undefined, undefined, pathObj.keys);","  };","","","  /**","   * @ngdoc method","   * @name $httpBackend#flush","   * @description","   * Flushes pending requests using the trained responses. Requests are flushed in the order they","   * were made, but it is also possible to skip one or more requests (for example to have them","   * flushed later). This is useful for simulating scenarios where responses arrive from the server","   * in any order.","   *","   * If there are no pending requests to flush when the method is called, an exception is thrown (as","   * this is typically a sign of programming error).","   *","   * @param {number=} count - Number of responses to flush. If undefined/null, all pending requests","   *     (starting after `skip`) will be flushed.","   * @param {number=} [skip=0] - Number of pending requests to skip. For example, a value of `5`","   *     would skip the first 5 pending requests and start flushing from the 6th onwards.","   */","  $httpBackend.flush = function(count, skip, digest) {","    if (digest !== false) $rootScope.$digest();","","    skip = skip || 0;","    if (skip >= responses.length) throw new Error('No pending request to flush !');","","    if (angular.isDefined(count) && count !== null) {","      while (count--) {","        var part = responses.splice(skip, 1);","        if (!part.length) throw new Error('No more pending request to flush !');","        part[0]();","      }","    } else {","      while (responses.length > skip) {","        responses.splice(skip, 1)[0]();","      }","    }","    $httpBackend.verifyNoOutstandingExpectation(digest);","  };","","","  /**","   * @ngdoc method","   * @name $httpBackend#verifyNoOutstandingExpectation","   * @description","   * Verifies that all of the requests defined via the `expect` api were made. If any of the","   * requests were not made, verifyNoOutstandingExpectation throws an exception.","   *","   * Typically, you would call this method following each test case that asserts requests using an","   * \"afterEach\" clause.","   *","   * ```js","   *   afterEach($httpBackend.verifyNoOutstandingExpectation);","   * ```","   */","  $httpBackend.verifyNoOutstandingExpectation = function(digest) {","    if (digest !== false) $rootScope.$digest();","    if (expectations.length) {","      throw new Error('Unsatisfied requests: ' + expectations.join(', '));","    }","  };","","","  /**","   * @ngdoc method","   * @name $httpBackend#verifyNoOutstandingRequest","   * @description","   * Verifies that there are no outstanding requests that need to be flushed.","   *","   * Typically, you would call this method following each test case that asserts requests using an","   * \"afterEach\" clause.","   *","   * ```js","   *   afterEach($httpBackend.verifyNoOutstandingRequest);","   * ```","   */","  $httpBackend.verifyNoOutstandingRequest = function(digest) {","    if (digest !== false) $rootScope.$digest();","    if (responses.length) {","      throw new Error('Unflushed requests: ' + responses.length);","    }","  };","","","  /**","   * @ngdoc method","   * @name $httpBackend#resetExpectations","   * @description","   * Resets all request expectations, but preserves all backend definitions. Typically, you would","   * call resetExpectations during a multiple-phase test when you want to reuse the same instance of","   * $httpBackend mock.","   */","  $httpBackend.resetExpectations = function() {","    expectations.length = 0;","    responses.length = 0;","  };","","  $httpBackend.$$originalHttpBackend = originalHttpBackend;","","  return $httpBackend;","","","  function createShortMethods(prefix) {","    angular.forEach(['GET', 'DELETE', 'JSONP', 'HEAD'], function(method) {","     $httpBackend[prefix + method] = function(url, headers, keys) {","        assertArgDefined(arguments, 0, 'url');","","        // Change url to `null` if `undefined` to stop it throwing an exception further down","        if (angular.isUndefined(url)) url = null;","","       return $httpBackend[prefix](method, url, undefined, headers, keys);","     };","    });","","    angular.forEach(['PUT', 'POST', 'PATCH'], function(method) {","      $httpBackend[prefix + method] = function(url, data, headers, keys) {","        assertArgDefined(arguments, 0, 'url');","","        // Change url to `null` if `undefined` to stop it throwing an exception further down","        if (angular.isUndefined(url)) url = null;","","        return $httpBackend[prefix](method, url, data, headers, keys);","      };","    });","  }","}","","function assertArgDefined(args, index, name) {","  if (args.length > index && angular.isUndefined(args[index])) {","    throw new Error('Undefined argument `' + name + '`; the argument is provided but not defined');","  }","}","","","function MockHttpExpectation(method, url, data, headers, keys) {","","  function getUrlParams(u) {","    var params = u.slice(u.indexOf('?') + 1).split('&');","    return params.sort();","  }","","  function compareUrl(u) {","    return (url.slice(0, url.indexOf('?')) === u.slice(0, u.indexOf('?')) &&","      getUrlParams(url).join() === getUrlParams(u).join());","  }","","  this.data = data;","  this.headers = headers;","","  this.match = function(m, u, d, h) {","    if (method !== m) return false;","    if (!this.matchUrl(u)) return false;","    if (angular.isDefined(d) && !this.matchData(d)) return false;","    if (angular.isDefined(h) && !this.matchHeaders(h)) return false;","    return true;","  };","","  this.matchUrl = function(u) {","    if (!url) return true;","    if (angular.isFunction(url.test)) return url.test(u);","    if (angular.isFunction(url)) return url(u);","    return (url === u || compareUrl(u));","  };","","  this.matchHeaders = function(h) {","    if (angular.isUndefined(headers)) return true;","    if (angular.isFunction(headers)) return headers(h);","    return angular.equals(headers, h);","  };","","  this.matchData = function(d) {","    if (angular.isUndefined(data)) return true;","    if (data && angular.isFunction(data.test)) return data.test(d);","    if (data && angular.isFunction(data)) return data(d);","    if (data && !angular.isString(data)) {","      return angular.equals(angular.fromJson(angular.toJson(data)), angular.fromJson(d));","    }","    // eslint-disable-next-line eqeqeq","    return data == d;","  };","","  this.toString = function() {","    return method + ' ' + url;","  };","","  this.params = function(u) {","    return angular.extend(parseQuery(), pathParams());","","    function pathParams() {","      var keyObj = {};","      if (!url || !angular.isFunction(url.test) || !keys || keys.length === 0) return keyObj;","","      var m = url.exec(u);","      if (!m) return keyObj;","      for (var i = 1, len = m.length; i < len; ++i) {","        var key = keys[i - 1];","        var val = m[i];","        if (key && val) {","          keyObj[key.name || key] = val;","        }","      }","","      return keyObj;","    }","","    function parseQuery() {","      var obj = {}, key_value, key,","          queryStr = u.indexOf('?') > -1","          ? u.substring(u.indexOf('?') + 1)","          : '';","","      angular.forEach(queryStr.split('&'), function(keyValue) {","        if (keyValue) {","          key_value = keyValue.replace(/\\+/g,'%20').split('=');","          key = tryDecodeURIComponent(key_value[0]);","          if (angular.isDefined(key)) {","            var val = angular.isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;","            if (!hasOwnProperty.call(obj, key)) {","              obj[key] = val;","            } else if (angular.isArray(obj[key])) {","              obj[key].push(val);","            } else {","              obj[key] = [obj[key],val];","            }","          }","        }","      });","      return obj;","    }","    function tryDecodeURIComponent(value) {","      try {","        return decodeURIComponent(value);","      } catch (e) {","        // Ignore any invalid uri component","      }","    }","  };","}","","function createMockXhr() {","  return new MockXhr();","}","","function MockXhr() {","","  // hack for testing $http, $httpBackend","  MockXhr.$$lastInstance = this;","","  this.open = function(method, url, async) {","    this.$$method = method;","    this.$$url = url;","    this.$$async = async;","    this.$$reqHeaders = {};","    this.$$respHeaders = {};","  };","","  this.send = function(data) {","    this.$$data = data;","  };","","  this.setRequestHeader = function(key, value) {","    this.$$reqHeaders[key] = value;","  };","","  this.getResponseHeader = function(name) {","    // the lookup must be case insensitive,","    // that's why we try two quick lookups first and full scan last","    var header = this.$$respHeaders[name];","    if (header) return header;","","    name = angular.lowercase(name);","    header = this.$$respHeaders[name];","    if (header) return header;","","    header = undefined;","    angular.forEach(this.$$respHeaders, function(headerVal, headerName) {","      if (!header && angular.lowercase(headerName) === name) header = headerVal;","    });","    return header;","  };","","  this.getAllResponseHeaders = function() {","    var lines = [];","","    angular.forEach(this.$$respHeaders, function(value, key) {","      lines.push(key + ': ' + value);","    });","    return lines.join('\\n');","  };","","  this.abort = angular.noop;","","  // This section simulates the events on a real XHR object (and the upload object)","  // When we are testing $httpBackend (inside the angular project) we make partial use of this","  // but store the events directly ourselves on `$$events`, instead of going through the `addEventListener`","  this.$$events = {};","  this.addEventListener = function(name, listener) {","    if (angular.isUndefined(this.$$events[name])) this.$$events[name] = [];","    this.$$events[name].push(listener);","  };","","  this.upload = {","    $$events: {},","    addEventListener: this.addEventListener","  };","}","","","/**"," * @ngdoc service"," * @name $timeout"," * @description"," *"," * This service is just a simple decorator for {@link ng.$timeout $timeout} service"," * that adds a \"flush\" and \"verifyNoPendingTasks\" methods."," */","","angular.mock.$TimeoutDecorator = ['$delegate', '$browser', function($delegate, $browser) {","","  /**","   * @ngdoc method","   * @name $timeout#flush","   * @description","   *","   * Flushes the queue of pending tasks.","   *","   * @param {number=} delay maximum timeout amount to flush up until","   */","  $delegate.flush = function(delay) {","    $browser.defer.flush(delay);","  };","","  /**","   * @ngdoc method","   * @name $timeout#verifyNoPendingTasks","   * @description","   *","   * Verifies that there are no pending tasks that need to be flushed.","   */","  $delegate.verifyNoPendingTasks = function() {","    if ($browser.deferredFns.length) {","      throw new Error('Deferred tasks to flush (' + $browser.deferredFns.length + '): ' +","          formatPendingTasksAsString($browser.deferredFns));","    }","  };","","  function formatPendingTasksAsString(tasks) {","    var result = [];","    angular.forEach(tasks, function(task) {","      result.push('{id: ' + task.id + ', time: ' + task.time + '}');","    });","","    return result.join(', ');","  }","","  return $delegate;","}];","","angular.mock.$RAFDecorator = ['$delegate', function($delegate) {","  var rafFn = function(fn) {","    var index = rafFn.queue.length;","    rafFn.queue.push(fn);","    return function() {","      rafFn.queue.splice(index, 1);","    };","  };","","  rafFn.queue = [];","  rafFn.supported = $delegate.supported;","","  rafFn.flush = function() {","    if (rafFn.queue.length === 0) {","      throw new Error('No rAF callbacks present');","    }","","    var length = rafFn.queue.length;","    for (var i = 0; i < length; i++) {","      rafFn.queue[i]();","    }","","    rafFn.queue = rafFn.queue.slice(i);","  };","","  return rafFn;","}];","","/**"," *"," */","var originalRootElement;","angular.mock.$RootElementProvider = function() {","  this.$get = ['$injector', function($injector) {","    originalRootElement = angular.element('<div ng-app></div>').data('$injector', $injector);","    return originalRootElement;","  }];","};","","/**"," * @ngdoc service"," * @name $controller"," * @description"," * A decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing"," * controllers of directives that use {@link $compile#-bindtocontroller- `bindToController`}."," *"," * Depending on the value of"," * {@link ng.$compileProvider#preAssignBindingsEnabled `preAssignBindingsEnabled()`}, the properties"," * will be bound before or after invoking the constructor."," *"," *"," * ## Example"," *"," * ```js"," *"," * // Directive definition ..."," *"," * myMod.directive('myDirective', {"," *   controller: 'MyDirectiveController',"," *   bindToController: {"," *     name: '@'"," *   }"," * });"," *"," *"," * // Controller definition ..."," *"," * myMod.controller('MyDirectiveController', ['$log', function($log) {"," *   this.log = function() {"," *     $log.info(this.name);"," *   };"," * }]);"," *"," *"," * // In a test ..."," *"," * describe('myDirectiveController', function() {"," *   describe('log()', function() {"," *     it('should write the bound name to the log', inject(function($controller, $log) {"," *       var ctrl = $controller('MyDirectiveController', { /* no locals &#42;/ }, { name: 'Clark Kent' });"," *       ctrl.log();"," *"," *       expect(ctrl.name).toEqual('Clark Kent');"," *       expect($log.info.logs).toEqual(['Clark Kent']);"," *     }));"," *   });"," * });"," *"," * ```"," *"," * @param {Function|string} constructor If called with a function then it's considered to be the"," *    controller constructor function. Otherwise it's considered to be a string which is used"," *    to retrieve the controller constructor using the following steps:"," *"," *    * check if a controller with given name is registered via `$controllerProvider`"," *    * check if evaluating the string on the current scope returns a constructor"," *    * if $controllerProvider#allowGlobals, check `window[constructor]` on the global"," *      `window` object (deprecated, not recommended)"," *"," *    The string can use the `controller as property` syntax, where the controller instance is published"," *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this"," *    to work correctly."," *"," * @param {Object} locals Injection locals for Controller."," * @param {Object=} bindings Properties to add to the controller instance. This is used to simulate"," *                           the `bindToController` feature and simplify certain kinds of tests."," * @return {Object} Instance of given controller."," */","function createControllerDecorator(compileProvider) {","  angular.mock.$ControllerDecorator = ['$delegate', function($delegate) {","    return function(expression, locals, later, ident) {","      if (later && typeof later === 'object') {","        var preAssignBindingsEnabled = compileProvider.preAssignBindingsEnabled();","","        var instantiate = $delegate(expression, locals, true, ident);","        if (preAssignBindingsEnabled) {","          angular.extend(instantiate.instance, later);","        }","","        var instance = instantiate();","        if (!preAssignBindingsEnabled || instance !== instantiate.instance) {","          angular.extend(instance, later);","        }","","        return instance;","      }","      return $delegate(expression, locals, later, ident);","    };","  }];","","  return angular.mock.$ControllerDecorator;","}","","/**"," * @ngdoc service"," * @name $componentController"," * @description"," * A service that can be used to create instances of component controllers. Useful for unit-testing."," *"," * Be aware that the controller will be instantiated and attached to the scope as specified in"," * the component definition object. If you do not provide a `$scope` object in the `locals` param"," * then the helper will create a new isolated scope as a child of `$rootScope`."," *"," * If you are using `$element` or `$attrs` in the controller, make sure to provide them as `locals`."," * The `$element` must be a jqLite-wrapped DOM element, and `$attrs` should be an object that"," * has all properties / functions that you are using in the controller. If this is getting too complex,"," * you should compile the component instead and access the component's controller via the"," * {@link angular.element#methods `controller`} function."," *"," * See also the section on {@link guide/component#unit-testing-component-controllers unit-testing component controllers}"," * in the guide."," *"," * @param {string} componentName the name of the component whose controller we want to instantiate"," * @param {Object} locals Injection locals for Controller."," * @param {Object=} bindings Properties to add to the controller before invoking the constructor. This is used"," *                           to simulate the `bindToController` feature and simplify certain kinds of tests."," * @param {string=} ident Override the property name to use when attaching the controller to the scope."," * @return {Object} Instance of requested controller."," */","angular.mock.$ComponentControllerProvider = ['$compileProvider',","    function ComponentControllerProvider($compileProvider) {","  this.$get = ['$controller','$injector', '$rootScope', function($controller, $injector, $rootScope) {","    return function $componentController(componentName, locals, bindings, ident) {","      // get all directives associated to the component name","      var directives = $injector.get(componentName + 'Directive');","      // look for those directives that are components","      var candidateDirectives = directives.filter(function(directiveInfo) {","        // components have controller, controllerAs and restrict:'E'","        return directiveInfo.controller && directiveInfo.controllerAs && directiveInfo.restrict === 'E';","      });","      // check if valid directives found","      if (candidateDirectives.length === 0) {","        throw new Error('No component found');","      }","      if (candidateDirectives.length > 1) {","        throw new Error('Too many components found');","      }","      // get the info of the component","      var directiveInfo = candidateDirectives[0];","      // create a scope if needed","      locals = locals || {};","      locals.$scope = locals.$scope || $rootScope.$new(true);","      return $controller(directiveInfo.controller, locals, bindings, ident || directiveInfo.controllerAs);","    };","  }];","}];","","","/**"," * @ngdoc module"," * @name ngMock"," * @packageName angular-mocks"," * @description"," *"," * # ngMock"," *"," * The `ngMock` module provides support to inject and mock Angular services into unit tests."," * In addition, ngMock also extends various core ng services such that they can be"," * inspected and controlled in a synchronous manner within test code."," *"," *"," * <div doc-module-components=\"ngMock\"></div>"," *"," * @installation"," *"," *  First, download the file:"," *  * [Google CDN](https://developers.google.com/speed/libraries/devguide#angularjs) e.g."," *    `\"//ajax.googleapis.com/ajax/libs/angularjs/X.Y.Z/angular-mocks.js\"`"," *  * [NPM](https://www.npmjs.com/) e.g. `npm install angular-mocks@X.Y.Z`"," *  * [Yarn](https://yarnpkg.com) e.g. `yarn add angular-mocks@X.Y.Z`"," *  * [Bower](http://bower.io) e.g. `bower install angular-mocks#X.Y.Z`"," *  * [code.angularjs.org](https://code.angularjs.org/) (discouraged for production use)  e.g."," *    `\"//code.angularjs.org/X.Y.Z/angular-mocks.js\"`"," *"," * where X.Y.Z is the AngularJS version you are running."," *"," * Then, configure your test runner to load `angular-mocks.js` after `angular.js`."," * This example uses <a href=\"http://karma-runner.github.io/\">Karma</a>:"," *"," * ```"," * config.set({"," *   files: ["," *     'build/angular.js', // and other module files you need"," *     'build/angular-mocks.js',"," *     '<path/to/application/files>',"," *     '<path/to/spec/files>'"," *   ]"," * });"," * ```"," *"," * Including the `angular-mocks.js` file automatically adds the `ngMock` module, so your tests"," *  are ready to go!"," */","angular.module('ngMock', ['ng']).provider({","  $browser: angular.mock.$BrowserProvider,","  $exceptionHandler: angular.mock.$ExceptionHandlerProvider,","  $log: angular.mock.$LogProvider,","  $interval: angular.mock.$IntervalProvider,","  $rootElement: angular.mock.$RootElementProvider,","  $componentController: angular.mock.$ComponentControllerProvider","}).config(['$provide', '$compileProvider', function($provide, $compileProvider) {","  $provide.decorator('$timeout', angular.mock.$TimeoutDecorator);","  $provide.decorator('$$rAF', angular.mock.$RAFDecorator);","  $provide.decorator('$rootScope', angular.mock.$RootScopeDecorator);","  $provide.decorator('$controller', createControllerDecorator($compileProvider));","  $provide.decorator('$httpBackend', angular.mock.$httpBackendDecorator);","}]).info({ angularVersion: '1.6.4' });","","/**"," * @ngdoc module"," * @name ngMockE2E"," * @module ngMockE2E"," * @packageName angular-mocks"," * @description"," *"," * The `ngMockE2E` is an angular module which contains mocks suitable for end-to-end testing."," * Currently there is only one mock present in this module -"," * the {@link ngMockE2E.$httpBackend e2e $httpBackend} mock."," */","angular.module('ngMockE2E', ['ng']).config(['$provide', function($provide) {","  $provide.decorator('$httpBackend', angular.mock.e2e.$httpBackendDecorator);","}]).info({ angularVersion: '1.6.4' });","","/**"," * @ngdoc service"," * @name $httpBackend"," * @module ngMockE2E"," * @description"," * Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of"," * applications that use the {@link ng.$http $http service}."," *"," * <div class=\"alert alert-info\">"," * **Note**: For fake http backend implementation suitable for unit testing please see"," * {@link ngMock.$httpBackend unit-testing $httpBackend mock}."," * </div>"," *"," * This implementation can be used to respond with static or dynamic responses via the `when` api"," * and its shortcuts (`whenGET`, `whenPOST`, etc) and optionally pass through requests to the"," * real $httpBackend for specific requests (e.g. to interact with certain remote apis or to fetch"," * templates from a webserver)."," *"," * As opposed to unit-testing, in an end-to-end testing scenario or in scenario when an application"," * is being developed with the real backend api replaced with a mock, it is often desirable for"," * certain category of requests to bypass the mock and issue a real http request (e.g. to fetch"," * templates or static files from the webserver). To configure the backend with this behavior"," * use the `passThrough` request handler of `when` instead of `respond`."," *"," * Additionally, we don't want to manually have to flush mocked out requests like we do during unit"," * testing. For this reason the e2e $httpBackend flushes mocked out requests"," * automatically, closely simulating the behavior of the XMLHttpRequest object."," *"," * To setup the application to run with this http backend, you have to create a module that depends"," * on the `ngMockE2E` and your application modules and defines the fake backend:"," *"," * ```js"," *   var myAppDev = angular.module('myAppDev', ['myApp', 'ngMockE2E']);"," *   myAppDev.run(function($httpBackend) {"," *     var phones = [{name: 'phone1'}, {name: 'phone2'}];"," *"," *     // returns the current list of phones"," *     $httpBackend.whenGET('/phones').respond(phones);"," *"," *     // adds a new phone to the phones array"," *     $httpBackend.whenPOST('/phones').respond(function(method, url, data) {"," *       var phone = angular.fromJson(data);"," *       phones.push(phone);"," *       return [200, phone, {}];"," *     });"," *     $httpBackend.whenGET(/^\\/templates\\//).passThrough(); // Requests for templates are handled by the real server"," *     //..."," *   });"," * ```"," *"," * Afterwards, bootstrap your app with this new module."," *"," * ## Example"," * <example name=\"httpbackend-e2e-testing\" module=\"myAppE2E\" deps=\"angular-mocks.js\">"," * <file name=\"app.js\">"," *   var myApp = angular.module('myApp', []);"," *"," *   myApp.controller('MainCtrl', function MainCtrl($http) {"," *     var ctrl = this;"," *"," *     ctrl.phones = [];"," *     ctrl.newPhone = {"," *       name: ''"," *     };"," *"," *     ctrl.getPhones = function() {"," *       $http.get('/phones').then(function(response) {"," *         ctrl.phones = response.data;"," *       });"," *     };"," *"," *     ctrl.addPhone = function(phone) {"," *       $http.post('/phones', phone).then(function() {"," *         ctrl.newPhone = {name: ''};"," *         return ctrl.getPhones();"," *       });"," *     };"," *"," *     ctrl.getPhones();"," *   });"," * </file>"," * <file name=\"e2e.js\">"," *   var myAppDev = angular.module('myAppE2E', ['myApp', 'ngMockE2E']);"," *"," *   myAppDev.run(function($httpBackend) {"," *     var phones = [{name: 'phone1'}, {name: 'phone2'}];"," *"," *     // returns the current list of phones"," *     $httpBackend.whenGET('/phones').respond(phones);"," *"," *     // adds a new phone to the phones array"," *     $httpBackend.whenPOST('/phones').respond(function(method, url, data) {"," *       var phone = angular.fromJson(data);"," *       phones.push(phone);"," *       return [200, phone, {}];"," *     });"," *   });"," * </file>"," * <file name=\"index.html\">"," *   <div ng-controller=\"MainCtrl as $ctrl\">"," *   <form name=\"newPhoneForm\" ng-submit=\"$ctrl.addPhone($ctrl.newPhone)\">"," *     <input type=\"text\" ng-model=\"$ctrl.newPhone.name\">"," *     <input type=\"submit\" value=\"Add Phone\">"," *   </form>"," *   <h1>Phones</h1>"," *   <ul>"," *     <li ng-repeat=\"phone in $ctrl.phones\">{{phone.name}}</li>"," *   </ul>"," *   </div>"," * </file>"," * </example>"," *"," *"," */","","/**"," * @ngdoc method"," * @name $httpBackend#when"," * @module ngMockE2E"," * @description"," * Creates a new backend definition."," *"," * @param {string} method HTTP method."," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives"," *   data string and returns true if the data is as expected."," * @param {(Object|function(Object))=} headers HTTP headers or function that receives http header"," *   object and returns true if the headers match the current definition."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," *"," *  - respond –"," *    ```"," *    { function([status,] data[, headers, statusText])"," *    | function(function(method, url, data, headers, params)}"," *    ```"," *    – The respond method takes a set of static data to be returned or a function that can return"," *    an array containing response status (number), response data (Array|Object|string), response"," *    headers (Object), and the text for the status (string)."," *  - passThrough – `{function()}` – Any request matching a backend definition with"," *    `passThrough` handler will be passed through to the real backend (an XHR request will be made"," *    to the server.)"," *  - Both methods return the `requestHandler` object for possible overrides."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenGET"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for GET requests. For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenHEAD"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for HEAD requests. For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenDELETE"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for DELETE requests. For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenPOST"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for POST requests. For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives"," *   data string and returns true if the data is as expected."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenPUT"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for PUT requests.  For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives"," *   data string and returns true if the data is as expected."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenPATCH"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for PATCH requests.  For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(string|RegExp|function(string))=} data HTTP request body or function that receives"," *   data string and returns true if the data is as expected."," * @param {(Object|function(Object))=} headers HTTP headers."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","","/**"," * @ngdoc method"," * @name $httpBackend#whenJSONP"," * @module ngMockE2E"," * @description"," * Creates a new backend definition for JSONP requests. For more info see `when()`."," *"," * @param {string|RegExp|function(string)=} url HTTP url or function that receives a url"," *   and returns true if the url matches the current definition."," * @param {(Array)=} keys Array of keys to assign to regex matches in request url described on"," *   {@link ngMock.$httpBackend $httpBackend mock}."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","/**"," * @ngdoc method"," * @name $httpBackend#whenRoute"," * @module ngMockE2E"," * @description"," * Creates a new backend definition that compares only with the requested route."," *"," * @param {string} method HTTP method."," * @param {string} url HTTP url string that supports colon param matching."," * @returns {requestHandler} Returns an object with `respond` and `passThrough` methods that"," *   control how a matched request is handled. You can save this object for later use and invoke"," *   `respond` or `passThrough` again in order to change how a matched request is handled."," */","angular.mock.e2e = {};","angular.mock.e2e.$httpBackendDecorator =","  ['$rootScope', '$timeout', '$delegate', '$browser', createHttpBackendMock];","","","/**"," * @ngdoc type"," * @name $rootScope.Scope"," * @module ngMock"," * @description"," * {@link ng.$rootScope.Scope Scope} type decorated with helper methods useful for testing. These"," * methods are automatically available on any {@link ng.$rootScope.Scope Scope} instance when"," * `ngMock` module is loaded."," *"," * In addition to all the regular `Scope` methods, the following helper methods are available:"," */","angular.mock.$RootScopeDecorator = ['$delegate', function($delegate) {","","  var $rootScopePrototype = Object.getPrototypeOf($delegate);","","  $rootScopePrototype.$countChildScopes = countChildScopes;","  $rootScopePrototype.$countWatchers = countWatchers;","","  return $delegate;","","  // ------------------------------------------------------------------------------------------ //","","  /**","   * @ngdoc method","   * @name $rootScope.Scope#$countChildScopes","   * @module ngMock","   * @this $rootScope.Scope","   * @description","   * Counts all the direct and indirect child scopes of the current scope.","   *","   * The current scope is excluded from the count. The count includes all isolate child scopes.","   *","   * @returns {number} Total number of child scopes.","   */","  function countChildScopes() {","    var count = 0; // exclude the current scope","    var pendingChildHeads = [this.$$childHead];","    var currentScope;","","    while (pendingChildHeads.length) {","      currentScope = pendingChildHeads.shift();","","      while (currentScope) {","        count += 1;","        pendingChildHeads.push(currentScope.$$childHead);","        currentScope = currentScope.$$nextSibling;","      }","    }","","    return count;","  }","","","  /**","   * @ngdoc method","   * @name $rootScope.Scope#$countWatchers","   * @this $rootScope.Scope","   * @module ngMock","   * @description","   * Counts all the watchers of direct and indirect child scopes of the current scope.","   *","   * The watchers of the current scope are included in the count and so are all the watchers of","   * isolate child scopes.","   *","   * @returns {number} Total number of watchers.","   */","  function countWatchers() {","    var count = this.$$watchers ? this.$$watchers.length : 0; // include the current scope","    var pendingChildHeads = [this.$$childHead];","    var currentScope;","","    while (pendingChildHeads.length) {","      currentScope = pendingChildHeads.shift();","","      while (currentScope) {","        count += currentScope.$$watchers ? currentScope.$$watchers.length : 0;","        pendingChildHeads.push(currentScope.$$childHead);","        currentScope = currentScope.$$nextSibling;","      }","    }","","    return count;","  }","}];","","","(function(jasmineOrMocha) {","","  if (!jasmineOrMocha) {","    return;","  }","","  var currentSpec = null,","      injectorState = new InjectorState(),","      annotatedFunctions = [],","      wasInjectorCreated = function() {","        return !!currentSpec;","      };","","  angular.mock.$$annotate = angular.injector.$$annotate;","  angular.injector.$$annotate = function(fn) {","    if (typeof fn === 'function' && !fn.$inject) {","      annotatedFunctions.push(fn);","    }","    return angular.mock.$$annotate.apply(this, arguments);","  };","","  /**","   * @ngdoc function","   * @name angular.mock.module","   * @description","   *","   * *NOTE*: This function is also published on window for easy access.<br>","   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha","   *","   * This function registers a module configuration code. It collects the configuration information","   * which will be used when the injector is created by {@link angular.mock.inject inject}.","   *","   * See {@link angular.mock.inject inject} for usage example","   *","   * @param {...(string|Function|Object)} fns any number of modules which are represented as string","   *        aliases or as anonymous module initialization functions. The modules are used to","   *        configure the injector. The 'ng' and 'ngMock' modules are automatically loaded. If an","   *        object literal is passed each key-value pair will be registered on the module via","   *        {@link auto.$provide $provide}.value, the key being the string name (or token) to associate","   *        with the value on the injector.","   */","  var module = window.module = angular.mock.module = function() {","    var moduleFns = Array.prototype.slice.call(arguments, 0);","    return wasInjectorCreated() ? workFn() : workFn;","    /////////////////////","    function workFn() {","      if (currentSpec.$injector) {","        throw new Error('Injector already created, can not register a module!');","      } else {","        var fn, modules = currentSpec.$modules || (currentSpec.$modules = []);","        angular.forEach(moduleFns, function(module) {","          if (angular.isObject(module) && !angular.isArray(module)) {","            fn = ['$provide', function($provide) {","              angular.forEach(module, function(value, key) {","                $provide.value(key, value);","              });","            }];","          } else {","            fn = module;","          }","          if (currentSpec.$providerInjector) {","            currentSpec.$providerInjector.invoke(fn);","          } else {","            modules.push(fn);","          }","        });","      }","    }","  };","","  module.$$beforeAllHook = (window.before || window.beforeAll);","  module.$$afterAllHook = (window.after || window.afterAll);","","  // purely for testing ngMock itself","  module.$$currentSpec = function(to) {","    if (arguments.length === 0) return to;","    currentSpec = to;","  };","","  /**","   * @ngdoc function","   * @name angular.mock.module.sharedInjector","   * @description","   *","   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha","   *","   * This function ensures a single injector will be used for all tests in a given describe context.","   * This contrasts with the default behaviour where a new injector is created per test case.","   *","   * Use sharedInjector when you want to take advantage of Jasmine's `beforeAll()`, or mocha's","   * `before()` methods. Call `module.sharedInjector()` before you setup any other hooks that","   * will create (i.e call `module()`) or use (i.e call `inject()`) the injector.","   *","   * You cannot call `sharedInjector()` from within a context already using `sharedInjector()`.","   *","   * ## Example","   *","   * Typically beforeAll is used to make many assertions about a single operation. This can","   * cut down test run-time as the test setup doesn't need to be re-run, and enabling focussed","   * tests each with a single assertion.","   *","   * ```js","   * describe(\"Deep Thought\", function() {","   *","   *   module.sharedInjector();","   *","   *   beforeAll(module(\"UltimateQuestion\"));","   *","   *   beforeAll(inject(function(DeepThought) {","   *     expect(DeepThought.answer).toBeUndefined();","   *     DeepThought.generateAnswer();","   *   }));","   *","   *   it(\"has calculated the answer correctly\", inject(function(DeepThought) {","   *     // Because of sharedInjector, we have access to the instance of the DeepThought service","   *     // that was provided to the beforeAll() hook. Therefore we can test the generated answer","   *     expect(DeepThought.answer).toBe(42);","   *   }));","   *","   *   it(\"has calculated the answer within the expected time\", inject(function(DeepThought) {","   *     expect(DeepThought.runTimeMillennia).toBeLessThan(8000);","   *   }));","   *","   *   it(\"has double checked the answer\", inject(function(DeepThought) {","   *     expect(DeepThought.absolutelySureItIsTheRightAnswer).toBe(true);","   *   }));","   *","   * });","   *","   * ```","   */","  module.sharedInjector = function() {","    if (!(module.$$beforeAllHook && module.$$afterAllHook)) {","      throw Error('sharedInjector() cannot be used unless your test runner defines beforeAll/afterAll');","    }","","    var initialized = false;","","    module.$$beforeAllHook(/** @this */ function() {","      if (injectorState.shared) {","        injectorState.sharedError = Error('sharedInjector() cannot be called inside a context that has already called sharedInjector()');","        throw injectorState.sharedError;","      }","      initialized = true;","      currentSpec = this;","      injectorState.shared = true;","    });","","    module.$$afterAllHook(function() {","      if (initialized) {","        injectorState = new InjectorState();","        module.$$cleanup();","      } else {","        injectorState.sharedError = null;","      }","    });","  };","","  module.$$beforeEach = function() {","    if (injectorState.shared && currentSpec && currentSpec !== this) {","      var state = currentSpec;","      currentSpec = this;","      angular.forEach(['$injector','$modules','$providerInjector', '$injectorStrict'], function(k) {","        currentSpec[k] = state[k];","        state[k] = null;","      });","    } else {","      currentSpec = this;","      originalRootElement = null;","      annotatedFunctions = [];","    }","  };","","  module.$$afterEach = function() {","    if (injectorState.cleanupAfterEach()) {","      module.$$cleanup();","    }","  };","","  module.$$cleanup = function() {","    var injector = currentSpec.$injector;","","    annotatedFunctions.forEach(function(fn) {","      delete fn.$inject;","    });","","    currentSpec.$injector = null;","    currentSpec.$modules = null;","    currentSpec.$providerInjector = null;","    currentSpec = null;","","    if (injector) {","      // Ensure `$rootElement` is instantiated, before checking `originalRootElement`","      var $rootElement = injector.get('$rootElement');","      var rootNode = $rootElement && $rootElement[0];","      var cleanUpNodes = !originalRootElement ? [] : [originalRootElement[0]];","      if (rootNode && (!originalRootElement || rootNode !== originalRootElement[0])) {","        cleanUpNodes.push(rootNode);","      }","      angular.element.cleanData(cleanUpNodes);","","      // Ensure `$destroy()` is available, before calling it","      // (a mocked `$rootScope` might not implement it (or not even be an object at all))","      var $rootScope = injector.get('$rootScope');","      if ($rootScope && $rootScope.$destroy) $rootScope.$destroy();","    }","","    // clean up jquery's fragment cache","    angular.forEach(angular.element.fragments, function(val, key) {","      delete angular.element.fragments[key];","    });","","    MockXhr.$$lastInstance = null;","","    angular.forEach(angular.callbacks, function(val, key) {","      delete angular.callbacks[key];","    });","    angular.callbacks.$$counter = 0;","  };","","  (window.beforeEach || window.setup)(module.$$beforeEach);","  (window.afterEach || window.teardown)(module.$$afterEach);","","  /**","   * @ngdoc function","   * @name angular.mock.inject","   * @description","   *","   * *NOTE*: This function is also published on window for easy access.<br>","   * *NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha","   *","   * The inject function wraps a function into an injectable function. The inject() creates new","   * instance of {@link auto.$injector $injector} per test, which is then used for","   * resolving references.","   *","   *","   * ## Resolving References (Underscore Wrapping)","   * Often, we would like to inject a reference once, in a `beforeEach()` block and reuse this","   * in multiple `it()` clauses. To be able to do this we must assign the reference to a variable","   * that is declared in the scope of the `describe()` block. Since we would, most likely, want","   * the variable to have the same name of the reference we have a problem, since the parameter","   * to the `inject()` function would hide the outer variable.","   *","   * To help with this, the injected parameters can, optionally, be enclosed with underscores.","   * These are ignored by the injector when the reference name is resolved.","   *","   * For example, the parameter `_myService_` would be resolved as the reference `myService`.","   * Since it is available in the function body as `_myService_`, we can then assign it to a variable","   * defined in an outer scope.","   *","   * ```","   * // Defined out reference variable outside","   * var myService;","   *","   * // Wrap the parameter in underscores","   * beforeEach( inject( function(_myService_){","   *   myService = _myService_;","   * }));","   *","   * // Use myService in a series of tests.","   * it('makes use of myService', function() {","   *   myService.doStuff();","   * });","   *","   * ```","   *","   * See also {@link angular.mock.module angular.mock.module}","   *","   * ## Example","   * Example of what a typical jasmine tests looks like with the inject method.","   * ```js","   *","   *   angular.module('myApplicationModule', [])","   *       .value('mode', 'app')","   *       .value('version', 'v1.0.1');","   *","   *","   *   describe('MyApp', function() {","   *","   *     // You need to load modules that you want to test,","   *     // it loads only the \"ng\" module by default.","   *     beforeEach(module('myApplicationModule'));","   *","   *","   *     // inject() is used to inject arguments of all given functions","   *     it('should provide a version', inject(function(mode, version) {","   *       expect(version).toEqual('v1.0.1');","   *       expect(mode).toEqual('app');","   *     }));","   *","   *","   *     // The inject and module method can also be used inside of the it or beforeEach","   *     it('should override a version and test the new version is injected', function() {","   *       // module() takes functions or strings (module aliases)","   *       module(function($provide) {","   *         $provide.value('version', 'overridden'); // override version here","   *       });","   *","   *       inject(function(version) {","   *         expect(version).toEqual('overridden');","   *       });","   *     });","   *   });","   *","   * ```","   *","   * @param {...Function} fns any number of functions which will be injected using the injector.","   */","","","","  var ErrorAddingDeclarationLocationStack = function ErrorAddingDeclarationLocationStack(e, errorForStack) {","    this.message = e.message;","    this.name = e.name;","    if (e.line) this.line = e.line;","    if (e.sourceId) this.sourceId = e.sourceId;","    if (e.stack && errorForStack)","      this.stack = e.stack + '\\n' + errorForStack.stack;","    if (e.stackArray) this.stackArray = e.stackArray;","  };","  ErrorAddingDeclarationLocationStack.prototype = Error.prototype;","","  window.inject = angular.mock.inject = function() {","    var blockFns = Array.prototype.slice.call(arguments, 0);","    var errorForStack = new Error('Declaration Location');","    // IE10+ and PhanthomJS do not set stack trace information, until the error is thrown","    if (!errorForStack.stack) {","      try {","        throw errorForStack;","      } catch (e) { /* empty */ }","    }","    return wasInjectorCreated() ? WorkFn.call(currentSpec) : WorkFn;","    /////////////////////","    function WorkFn() {","      var modules = currentSpec.$modules || [];","      var strictDi = !!currentSpec.$injectorStrict;","      modules.unshift(['$injector', function($injector) {","        currentSpec.$providerInjector = $injector;","      }]);","      modules.unshift('ngMock');","      modules.unshift('ng');","      var injector = currentSpec.$injector;","      if (!injector) {","        if (strictDi) {","          // If strictDi is enabled, annotate the providerInjector blocks","          angular.forEach(modules, function(moduleFn) {","            if (typeof moduleFn === 'function') {","              angular.injector.$$annotate(moduleFn);","            }","          });","        }","        injector = currentSpec.$injector = angular.injector(modules, strictDi);","        currentSpec.$injectorStrict = strictDi;","      }","      for (var i = 0, ii = blockFns.length; i < ii; i++) {","        if (currentSpec.$injectorStrict) {","          // If the injector is strict / strictDi, and the spec wants to inject using automatic","          // annotation, then annotate the function here.","          injector.annotate(blockFns[i]);","        }","        try {","          injector.invoke(blockFns[i] || angular.noop, this);","        } catch (e) {","          if (e.stack && errorForStack) {","            throw new ErrorAddingDeclarationLocationStack(e, errorForStack);","          }","          throw e;","        } finally {","          errorForStack = null;","        }","      }","    }","  };","","","  angular.mock.inject.strictDi = function(value) {","    value = arguments.length ? !!value : true;","    return wasInjectorCreated() ? workFn() : workFn;","","    function workFn() {","      if (value !== currentSpec.$injectorStrict) {","        if (currentSpec.$injector) {","          throw new Error('Injector already created, can not modify strict annotations');","        } else {","          currentSpec.$injectorStrict = value;","        }","      }","    }","  };","","  function InjectorState() {","    this.shared = false;","    this.sharedError = null;","","    this.cleanupAfterEach = function() {","      return !this.shared || this.sharedError;","    };","  }","})(window.jasmine || window.mocha);","","'use strict';","","(function() {","  /**","   * Triggers a browser event. Attempts to choose the right event if one is","   * not specified.","   *","   * @param {Object} element Either a wrapped jQuery/jqLite node or a DOMElement","   * @param {string} eventType Optional event type","   * @param {Object=} eventData An optional object which contains additional event data (such as x,y","   * coordinates, keys, etc...) that are passed into the event when triggered","   */","  window.browserTrigger = function browserTrigger(element, eventType, eventData) {","    if (element && !element.nodeName) element = element[0];","    if (!element) return;","","    eventData = eventData || {};","    var relatedTarget = eventData.relatedTarget || element;","    var keys = eventData.keys;","    var x = eventData.x;","    var y = eventData.y;","","    var inputType = (element.type) ? element.type.toLowerCase() : null,","        nodeName = element.nodeName.toLowerCase();","    if (!eventType) {","      eventType = {","        'text':            'change',","        'textarea':        'change',","        'hidden':          'change',","        'password':        'change',","        'button':          'click',","        'submit':          'click',","        'reset':           'click',","        'image':           'click',","        'checkbox':        'click',","        'radio':           'click',","        'select-one':      'change',","        'select-multiple': 'change',","        '_default_':       'click'","      }[inputType || '_default_'];","    }","","    if (nodeName === 'option') {","      element.parentNode.value = element.value;","      element = element.parentNode;","      eventType = 'change';","    }","","    keys = keys || [];","    function pressed(key) {","      return keys.indexOf(key) !== -1;","    }","","    var evnt;","    if (/transitionend/.test(eventType)) {","      if (window.WebKitTransitionEvent) {","        evnt = new window.WebKitTransitionEvent(eventType, eventData);","        evnt.initEvent(eventType, false, true);","      } else {","        try {","          evnt = new window.TransitionEvent(eventType, eventData);","        } catch (e) {","          evnt = window.document.createEvent('TransitionEvent');","          evnt.initTransitionEvent(eventType, null, null, null, eventData.elapsedTime || 0);","        }","      }","    } else if (/animationend/.test(eventType)) {","      if (window.WebKitAnimationEvent) {","        evnt = new window.WebKitAnimationEvent(eventType, eventData);","        evnt.initEvent(eventType, false, true);","      } else {","        try {","          evnt = new window.AnimationEvent(eventType, eventData);","        } catch (e) {","          evnt = window.document.createEvent('AnimationEvent');","          evnt.initAnimationEvent(eventType, null, null, null, eventData.elapsedTime || 0);","        }","      }","    } else if (/touch/.test(eventType) && supportsTouchEvents()) {","      evnt = createTouchEvent(element, eventType, x, y);","    } else if (/key/.test(eventType)) {","      evnt = window.document.createEvent('Events');","      evnt.initEvent(eventType, eventData.bubbles, eventData.cancelable);","      evnt.view = window;","      evnt.ctrlKey = pressed('ctrl');","      evnt.altKey = pressed('alt');","      evnt.shiftKey = pressed('shift');","      evnt.metaKey = pressed('meta');","      evnt.keyCode = eventData.keyCode;","      evnt.charCode = eventData.charCode;","      evnt.which = eventData.which;","    } else {","      evnt = window.document.createEvent('MouseEvents');","      x = x || 0;","      y = y || 0;","      evnt.initMouseEvent(eventType, true, true, window, 0, x, y, x, y, pressed('ctrl'),","          pressed('alt'), pressed('shift'), pressed('meta'), 0, relatedTarget);","    }","","    /* we're unable to change the timeStamp value directly so this","     * is only here to allow for testing where the timeStamp value is","     * read */","    evnt.$manualTimeStamp = eventData.timeStamp;","","    if (!evnt) return;","","    var originalPreventDefault = evnt.preventDefault,","        appWindow = element.ownerDocument.defaultView,","        fakeProcessDefault = true,","        finalProcessDefault,","        angular = appWindow.angular || {};","","    // igor: temporary fix for https://bugzilla.mozilla.org/show_bug.cgi?id=684208","    angular['ff-684208-preventDefault'] = false;","    evnt.preventDefault = function() {","      fakeProcessDefault = false;","      return originalPreventDefault.apply(evnt, arguments);","    };","","    if (!eventData.bubbles || supportsEventBubblingInDetachedTree() || isAttachedToDocument(element)) {","      element.dispatchEvent(evnt);","    } else {","      triggerForPath(element, evnt);","    }","","    finalProcessDefault = !(angular['ff-684208-preventDefault'] || !fakeProcessDefault);","","    delete angular['ff-684208-preventDefault'];","","    return finalProcessDefault;","  };","","  function supportsTouchEvents() {","    if ('_cached' in supportsTouchEvents) {","      return supportsTouchEvents._cached;","    }","    if (!window.document.createTouch || !window.document.createTouchList) {","      supportsTouchEvents._cached = false;","      return false;","    }","    try {","      window.document.createEvent('TouchEvent');","    } catch (e) {","      supportsTouchEvents._cached = false;","      return false;","    }","    supportsTouchEvents._cached = true;","    return true;","  }","","  function createTouchEvent(element, eventType, x, y) {","    var evnt = new window.Event(eventType);","    x = x || 0;","    y = y || 0;","","    var touch = window.document.createTouch(window, element, Date.now(), x, y, x, y);","    var touches = window.document.createTouchList(touch);","","    evnt.touches = touches;","","    return evnt;","  }","","  function supportsEventBubblingInDetachedTree() {","    if ('_cached' in supportsEventBubblingInDetachedTree) {","      return supportsEventBubblingInDetachedTree._cached;","    }","    supportsEventBubblingInDetachedTree._cached = false;","    var doc = window.document;","    if (doc) {","      var parent = doc.createElement('div'),","          child = parent.cloneNode();","      parent.appendChild(child);","      parent.addEventListener('e', function() {","        supportsEventBubblingInDetachedTree._cached = true;","      });","      var evnt = window.document.createEvent('Events');","      evnt.initEvent('e', true, true);","      child.dispatchEvent(evnt);","    }","    return supportsEventBubblingInDetachedTree._cached;","  }","","  function triggerForPath(element, evnt) {","    var stop = false;","","    var _stopPropagation = evnt.stopPropagation;","    evnt.stopPropagation = function() {","      stop = true;","      _stopPropagation.apply(evnt, arguments);","    };","    patchEventTargetForBubbling(evnt, element);","    do {","      element.dispatchEvent(evnt);","      // eslint-disable-next-line no-unmodified-loop-condition","    } while (!stop && (element = element.parentNode));","  }","","  function patchEventTargetForBubbling(event, target) {","    event._target = target;","    Object.defineProperty(event, 'target', {get: function() { return this._target;}});","  }","","  function isAttachedToDocument(element) {","    while ((element = element.parentNode)) {","        if (element === window) {","            return true;","        }","    }","    return false;","  }","})();","","","})(window, window.angular);",""],"l":{"6":8,"18":0,"33":0,"34":0,"35":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"64":0,"65":0,"66":0,"68":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"85":0,"88":0,"89":0,"91":0,"92":0,"94":0,"97":0,"98":0,"99":0,"100":0,"110":0,"113":0,"114":0,"116":0,"117":0,"120":0,"121":0,"122":0,"125":0,"137":0,"138":0,"140":0,"142":0,"144":0,"146":0,"149":0,"153":0,"155":0,"156":0,"160":0,"163":0,"164":0,"165":0,"168":0,"177":0,"178":0,"183":0,"184":0,"186":0,"187":0,"189":0,"190":0,"193":0,"197":0,"245":0,"246":0,"266":0,"268":0,"271":0,"272":0,"273":0,"274":0,"276":0,"278":0,"279":0,"282":0,"283":0,"285":0,"289":0,"290":0,"293":0,"307":0,"308":0,"310":1,"311":0,"314":0,"315":0,"316":0,"317":0,"319":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"330":0,"331":0,"343":0,"357":0,"371":0,"385":0,"399":0,"413":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"434":0,"435":0,"437":0,"438":0,"442":0,"443":0,"468":0,"469":0,"471":0,"475":0,"476":0,"483":0,"484":0,"485":0,"488":0,"490":1,"491":0,"493":0,"494":0,"495":0,"497":0,"498":0,"501":0,"502":0,"506":0,"507":0,"509":0,"513":0,"520":0,"522":0,"523":0,"535":0,"536":0,"537":0,"539":0,"540":0,"543":0,"544":0,"545":0,"546":0,"547":0,"550":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"572":0,"575":0,"580":1,"583":0,"585":0,"586":0,"587":0,"590":0,"591":0,"592":0,"594":0,"595":0,"599":0,"601":0,"604":1,"605":0,"608":1,"609":0,"610":0,"611":0,"612":0,"614":0,"615":0,"616":0,"617":0,"619":0,"660":0,"661":0,"662":0,"663":0,"665":0,"667":0,"668":0,"670":0,"676":0,"679":0,"680":0,"681":0,"683":0,"684":0,"687":0,"688":0,"691":0,"692":0,"695":0,"696":0,"699":0,"700":0,"703":0,"704":0,"707":0,"708":0,"711":0,"712":0,"715":0,"716":0,"719":0,"720":0,"723":0,"724":0,"727":0,"728":0,"731":0,"732":0,"735":0,"736":0,"739":0,"740":0,"743":0,"744":0,"747":0,"748":0,"751":0,"752":0,"756":0,"757":0,"758":0,"769":0,"776":0,"777":0,"778":0,"782":0,"786":0,"799":0,"804":0,"805":1,"806":0,"808":0,"809":0,"812":0,"813":0,"814":0,"815":0,"816":0,"819":0,"820":0,"822":0,"823":0,"825":0,"827":0,"829":0,"832":0,"833":0,"835":0,"836":0,"838":0,"839":0,"841":0,"844":0,"845":0,"846":0,"848":0,"851":0,"854":0,"855":0,"857":0,"858":0,"859":0,"860":0,"863":0,"864":0,"865":0,"867":0,"870":0,"873":0,"877":0,"884":0,"901":0,"902":0,"903":0,"904":0,"916":0,"918":0,"919":0,"920":0,"922":0,"923":0,"924":0,"927":0,"928":0,"932":0,"933":0,"936":0,"940":0,"942":0,"943":0,"949":0,"953":0,"972":0,"973":0,"975":1,"976":0,"978":0,"979":0,"980":0,"981":0,"982":0,"984":0,"985":0,"986":0,"987":0,"988":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"999":0,"1002":0,"1005":0,"1008":1,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1016":0,"1017":0,"1018":0,"1019":0,"1021":0,"1022":0,"1326":0,"1343":1,"1344":0,"1353":1,"1354":0,"1356":0,"1357":0,"1364":1,"1366":0,"1370":0,"1371":0,"1373":1,"1374":0,"1379":1,"1380":0,"1381":0,"1382":0,"1384":0,"1388":0,"1390":1,"1391":0,"1392":0,"1393":0,"1397":1,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1408":0,"1409":0,"1410":0,"1414":0,"1415":0,"1420":0,"1422":0,"1423":0,"1424":0,"1426":0,"1429":0,"1430":0,"1431":0,"1432":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1441":0,"1475":0,"1477":0,"1479":0,"1482":0,"1483":0,"1484":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1496":0,"1497":0,"1592":0,"1606":0,"1607":0,"1608":0,"1611":1,"1612":0,"1617":0,"1619":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1637":0,"1638":0,"1670":0,"1672":0,"1674":0,"1677":0,"1678":0,"1682":0,"1683":0,"1798":0,"1812":0,"1813":0,"1814":0,"1835":0,"1836":0,"1838":0,"1839":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1848":0,"1849":0,"1852":0,"1870":0,"1871":0,"1872":0,"1873":0,"1891":0,"1892":0,"1893":0,"1894":0,"1907":0,"1908":0,"1909":0,"1912":0,"1914":0,"1917":1,"1918":0,"1919":0,"1920":0,"1923":0,"1925":0,"1929":0,"1930":0,"1931":0,"1934":0,"1936":0,"1942":1,"1943":0,"1944":0,"1949":1,"1951":1,"1952":0,"1953":0,"1956":1,"1957":0,"1961":0,"1962":0,"1964":0,"1965":0,"1966":0,"1967":0,"1968":0,"1969":0,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1979":0,"1980":0,"1981":0,"1982":0,"1985":0,"1986":0,"1987":0,"1988":0,"1989":0,"1990":0,"1993":0,"1996":0,"1997":0,"2000":0,"2001":0,"2003":1,"2004":0,"2005":0,"2007":0,"2008":0,"2009":0,"2010":0,"2011":0,"2012":0,"2013":0,"2017":0,"2020":1,"2021":0,"2026":0,"2027":0,"2028":0,"2029":0,"2030":0,"2031":0,"2032":0,"2033":0,"2034":0,"2035":0,"2037":0,"2042":0,"2044":1,"2045":0,"2046":0,"2054":1,"2055":0,"2058":1,"2061":0,"2063":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2071":0,"2072":0,"2075":0,"2076":0,"2079":0,"2082":0,"2083":0,"2085":0,"2086":0,"2087":0,"2089":0,"2090":0,"2091":0,"2093":0,"2096":0,"2097":0,"2099":0,"2100":0,"2102":0,"2105":0,"2110":0,"2111":0,"2112":0,"2113":0,"2116":0,"2132":0,"2143":0,"2144":0,"2154":0,"2155":0,"2156":0,"2161":1,"2162":0,"2163":0,"2164":0,"2167":0,"2170":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2182":0,"2183":0,"2185":0,"2186":0,"2187":0,"2190":0,"2191":0,"2192":0,"2195":0,"2198":0,"2204":0,"2205":0,"2206":0,"2207":0,"2208":0,"2281":1,"2282":0,"2283":0,"2284":0,"2285":0,"2287":0,"2288":0,"2289":0,"2292":0,"2293":0,"2294":0,"2297":0,"2299":0,"2303":0,"2332":0,"2334":0,"2335":0,"2337":0,"2339":0,"2341":0,"2344":0,"2345":0,"2347":0,"2348":0,"2351":0,"2353":0,"2354":0,"2355":0,"2406":0,"2414":0,"2415":0,"2416":0,"2417":0,"2418":0,"2432":0,"2433":0,"2721":0,"2722":0,"2737":0,"2739":0,"2741":0,"2742":0,"2744":0,"2760":1,"2761":0,"2762":0,"2763":0,"2765":0,"2766":0,"2768":0,"2769":0,"2770":0,"2771":0,"2775":0,"2792":1,"2793":0,"2794":0,"2795":0,"2797":0,"2798":0,"2800":0,"2801":0,"2802":0,"2803":0,"2807":0,"2812":0,"2814":0,"2815":0,"2818":0,"2822":0,"2825":0,"2826":0,"2827":0,"2828":0,"2830":0,"2853":0,"2854":0,"2855":0,"2857":1,"2858":0,"2859":0,"2861":0,"2862":0,"2863":0,"2864":0,"2865":0,"2866":0,"2870":0,"2872":0,"2873":0,"2875":0,"2882":0,"2883":0,"2886":0,"2887":0,"2888":0,"2943":0,"2944":0,"2945":0,"2948":0,"2950":0,"2951":0,"2952":0,"2953":0,"2955":0,"2956":0,"2957":0,"2960":0,"2961":0,"2962":0,"2963":0,"2965":0,"2970":0,"2971":0,"2972":0,"2973":0,"2974":0,"2975":0,"2976":0,"2979":0,"2980":0,"2981":0,"2985":0,"2986":0,"2987":0,"2991":0,"2992":0,"2994":0,"2995":0,"2998":0,"2999":0,"3000":0,"3001":0,"3003":0,"3005":0,"3006":0,"3007":0,"3008":0,"3009":0,"3011":0,"3015":0,"3016":0,"3020":0,"3021":0,"3024":0,"3026":0,"3027":0,"3029":0,"3032":0,"3033":0,"3123":0,"3124":0,"3125":0,"3126":0,"3127":0,"3128":0,"3129":0,"3130":0,"3132":0,"3134":0,"3135":0,"3136":0,"3138":0,"3139":0,"3140":0,"3143":0,"3145":1,"3146":0,"3147":0,"3148":0,"3149":0,"3151":0,"3152":0,"3153":0,"3154":0,"3155":0,"3157":0,"3158":0,"3159":0,"3163":0,"3164":0,"3166":0,"3167":0,"3170":0,"3172":0,"3173":0,"3175":0,"3176":0,"3178":0,"3180":0,"3187":0,"3188":0,"3189":0,"3191":1,"3192":0,"3193":0,"3194":0,"3196":0,"3202":1,"3203":0,"3204":0,"3206":0,"3207":0,"3212":0,"3214":0,"3224":0,"3225":0,"3226":0,"3228":0,"3229":0,"3230":0,"3231":0,"3232":0,"3234":0,"3236":0,"3237":0,"3254":0,"3255":0,"3256":0,"3257":0,"3260":0,"3261":1,"3262":0,"3265":0,"3266":0,"3267":0,"3268":0,"3269":0,"3271":0,"3272":0,"3274":0,"3275":0,"3278":0,"3279":0,"3280":0,"3281":0,"3283":0,"3284":0,"3286":0,"3287":0,"3290":0,"3291":0,"3292":0,"3293":0,"3294":0,"3295":0,"3296":0,"3297":0,"3298":0,"3299":0,"3300":0,"3301":0,"3302":0,"3304":0,"3305":0,"3306":0,"3307":0,"3314":0,"3316":0,"3318":0,"3325":0,"3326":0,"3327":0,"3328":0,"3331":0,"3332":0,"3334":0,"3337":0,"3339":0,"3341":0,"3344":1,"3345":0,"3346":0,"3348":0,"3349":0,"3350":0,"3352":0,"3353":0,"3355":0,"3356":0,"3358":0,"3359":0,"3362":1,"3363":0,"3364":0,"3365":0,"3367":0,"3368":0,"3370":0,"3372":0,"3375":1,"3376":0,"3377":0,"3379":0,"3380":0,"3381":0,"3382":0,"3384":0,"3385":0,"3386":0,"3388":0,"3389":0,"3390":0,"3392":0,"3395":1,"3396":0,"3398":0,"3399":0,"3400":0,"3401":0,"3403":0,"3404":0,"3405":0,"3410":1,"3411":0,"3412":0,"3415":1,"3416":0,"3417":0,"3418":0,"3421":0}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngAnimateMock.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngAnimateMock.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}}},"branchMap":{},"code":["require('./angular-mocks');","module.exports = 'ngAnimateMock';",""],"l":{"1":2,"2":0}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngMock.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngMock.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}}},"branchMap":{},"code":["require('./angular-mocks');","module.exports = 'ngMock';",""],"l":{"1":2,"2":0}},"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngMockE2E.js":{"path":"/home/travis/build/npmtest/node-npmtest-angular-mocks/node_modules/angular-mocks/ngMockE2E.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}}},"branchMap":{},"code":["require('./angular-mocks');","module.exports = 'ngMockE2E';",""],"l":{"1":2,"2":0}}}